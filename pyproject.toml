# Copyright (c) 2023-2025 Antmicro <www.antmicro.com>
# SPDX-License-Identifier: Apache-2.0

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "topwrap"
version = "0.0.1"
requires-python = ">=3.9"
authors = [{name = "Antmicro"}]
description = "Package for generating HDL wrappers and top modules for your HDL sources"
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
]
dependencies = [
  "PyYAML",
  "click",
  "amaranth==0.4.0.*",
  "amaranth-soc @ git+https://github.com/antmicro/amaranth-soc@236384fcaee6e3d192aedcf6ff119d90c5f56046",
  "amaranth-yosys==0.40.0.0.post103",
  "simpleeval",
  "typing_extensions",
  "marshmallow>=3.20,<4.0",
  "marshmallow-dataclass[enum]~=8.7.0",
  "pygtrie",
  "pyslang",
  "pipeline_manager_backend_communication @ git+https://github.com/antmicro/kenning-pipeline-manager-backend-communication@eb690cfb7766bfbd85a4eff2a1e809573b8b72d0",
  "pipeline_manager @ git+https://github.com/antmicro/kenning-pipeline-manager@5a9b8e0ef0ef7125f74c48daf427a43d0e3065d3",
]

[project.optional-dependencies]
parse = [
  "hdlConvertor @ git+https://github.com/antmicro/hdlConvertor@94372093b6810d1b726429a1049c104f47883f27",
]
lint = [
  "nox==2024.10.09",
  "pre-commit==3.5.0",
  "codespell==2.3.0",
  "igittigitt==2.1.5",
  "ruff==0.12.1"
]
tests = [
  "nox==2024.10.09",
  "pytest==8.3.3",
  "pytest-cov==5.0.0",
  "pytest-lazy-fixtures==1.1.1",
  "pyfakefs==5.7.1",
  "deepdiff==8.0.1",
  "pyright==1.1.385",
  "prettytable==3.11.0",
]
deploy = [
  "build==1.2.1"
]
docs = [
  'myst-parser==4.0.0',
  'sphinx==7.3.7',
  'sphinxcontrib-mermaid==0.9.2',
  'sphinx-immaterial @ https://github.com/antmicro/sphinx-immaterial/releases/download/tip/sphinx_immaterial-0.0.post1.tip-py3-none-any.whl',  # noqa: E501
  'sphinx_tabs==3.4.5',
  'antmicro-sphinx-utils @ git+https://github.com/antmicro/antmicro-sphinx-utils@f5873e116c40a3b6087e49ccad7db3497402ee81',
  'pylint==3.3.7'
]
all = ['topwrap[parse,lint,tests,deploy,docs]']

[project.scripts]
topwrap = "topwrap.cli.main:main"

[tool.setuptools.packages.find]
include = ["topwrap*"]

[tool.setuptools.package-data]
topwrap = [
  "templates/*",
  "builtin/**/*",
  "**/*.j2"
]

[tool.ruff]
line-length = 100
extend-exclude = [
  ".eggs",
  ".git",
  ".gitignore",
  ".nox",
  ".pytest_cache",
  "__pycache__",
  "venv",
  "build",
  "workspace",
]

[tool.ruff.lint]
select = [
  "B",
  "C9",
  "E",
  "F",
  "I",
  "W",
]

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.codespell]
skip = "build,venv,cov_html,./tests/data,.git,.nox,__pycache__,workspace"
ignore-words-list = "convertor, inout, inouts"

[tool.pyright]
include = ["topwrap"]
reportMissingImports = false
typeCheckingMode = "standard"
reportMissingTypeArgument = true
reportMissingParameterType = true
reportUninitializedInstanceVariable = true
