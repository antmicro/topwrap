{"version":3,"file":"js/index-0a5ea6c9.e33adad5.js","mappings":"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C,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAS,OAAU,CAAC,MAAS,OAChD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,SAKpD5c,EAAIuc,GAAGM,UAAY,CACjB,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,C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","sources":["webpack://pipeline-manager/webpack/runtime/chunk loaded","webpack://pipeline-manager/./src/third-party/hterm_all.js","webpack://pipeline-manager/webpack/bootstrap","webpack://pipeline-manager/webpack/runtime/compat get default export","webpack://pipeline-manager/webpack/runtime/define property getters","webpack://pipeline-manager/webpack/runtime/global","webpack://pipeline-manager/webpack/runtime/hasOwnProperty shorthand","webpack://pipeline-manager/webpack/runtime/make namespace object","webpack://pipeline-manager/webpack/runtime/node module decorator","webpack://pipeline-manager/webpack/runtime/jsonp chunk loading","webpack://pipeline-manager/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// This file was generated by libdot/bin/concat.sh.\n// It has been marked read-only for your safety.  Rather than\n// edit it directly, please modify one of these source files.\n//\n// libdot/js/lib.js\n// libdot/js/lib_polyfill.js\n// libdot/js/lib_array.js\n// libdot/js/lib_codec.js\n// libdot/js/lib_colors.js\n// libdot/js/lib_f.js\n// libdot/js/lib_i18n.js\n// libdot/js/lib_message_manager.js\n// libdot/js/lib_preference_manager.js\n// libdot/js/lib_resource.js\n// libdot/js/lib_storage.js\n// libdot/js/lib_storage_chrome.js\n// libdot/js/lib_storage_local.js\n// libdot/js/lib_storage_memory.js\n// libdot/js/lib_storage_terminal_private.js\n// libdot/third_party/intl-segmenter/intl-segmenter.js\n// libdot/third_party/wcwidth/lib_wc.js\n// hterm/js/hterm.js\n// hterm/js/hterm_accessibility_reader.js\n// hterm/js/hterm_contextmenu.js\n// hterm/js/hterm_find_bar.js\n// hterm/js/hterm_frame.js\n// hterm/js/hterm_keyboard.js\n// hterm/js/hterm_keyboard_bindings.js\n// hterm/js/hterm_keyboard_keymap.js\n// hterm/js/hterm_keyboard_keypattern.js\n// hterm/js/hterm_notifications.js\n// hterm/js/hterm_options.js\n// hterm/js/hterm_parser.js\n// hterm/js/hterm_parser_identifiers.js\n// hterm/js/hterm_preference_manager.js\n// hterm/js/hterm_pubsub.js\n// hterm/js/hterm_screen.js\n// hterm/js/hterm_scrollport.js\n// hterm/js/hterm_terminal.js\n// hterm/js/hterm_terminal_io.js\n// hterm/js/hterm_text_attributes.js\n// hterm/js/hterm_vt.js\n// hterm/js/hterm_vt_character_map.js\n// hterm/audio/bell.ogg\n// hterm/images/copy.svg\n// hterm/images/close.svg\n// hterm/images/keyboard_arrow_down.svg\n// hterm/images/keyboard_arrow_up.svg\n// hterm/html/find_bar.html\n// hterm/html/find_screen.html\n// hterm/images/icon-96.png\n\n'use strict';\n\n// SOURCE FILE: libdot/js/lib.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst lib = {};\n\n/**\n * List of functions that need to be invoked during library initialization.\n *\n * Each element in the initCallbacks_ array is itself a two-element array.\n * Element 0 is a short string describing the owner of the init routine, useful\n * for debugging.  Element 1 is the callback function.\n */\nlib.initCallbacks_ = [];\n\n/**\n * Register an initialization function.\n *\n * The initialization functions are invoked in registration order when\n * lib.init() is invoked.  Each function will receive a single parameter, which\n * is a function to be invoked when it completes its part of the initialization.\n *\n * @param {string} name A short descriptive name of the init routine useful for\n *     debugging.\n * @param {function()} callback The initialization function to register.\n */\nlib.registerInit = function(name, callback) {\n  lib.initCallbacks_.push([name, callback]);\n};\n\n/**\n * Initialize the library.\n *\n * This will ensure that all registered runtime dependencies are met, and\n * invoke any registered initialization functions.\n *\n * Initialization is asynchronous.  The library is not ready for use until\n * the returned promise resolves.\n *\n * @param {function(*)=} logFunction An optional function to send initialization\n *     related log messages to.\n * @return {!Promise<void>} Promise that resolves once all inits finish.\n */\nlib.init = async function(logFunction = undefined) {\n  const ary = lib.initCallbacks_;\n  while (ary.length) {\n    const [name, init] = ary.shift();\n    if (logFunction) {\n      logFunction(`init: ${name}`);\n    }\n    const ret = init();\n    if (ret && typeof ret.then === 'function') {\n      await ret;\n    }\n  }\n};\n\n/**\n * Verify |condition| is truthy else throw Error.\n *\n * This function is primarily for satisfying the JS compiler and should be\n * used only when you are certain that your condition is true.  The function is\n * designed to have a version that throws Errors in tests if condition fails,\n * and a nop version for production code.  It configures itself the first time\n * it runs.\n *\n * @param {boolean} condition A condition to check.\n * @closurePrimitive {asserts.truthy}\n */\nlib.assert = function(condition) {\n  if (window.chai) {\n    lib.assert = window.chai.assert;\n  } else {\n    lib.assert = function(condition) {};\n  }\n  lib.assert(condition);\n};\n\n/**\n * Verify |value| is not null and return |value| if so, else throw Error.\n * See lib.assert.\n *\n * @template T\n * @param {T} value A value to check for null.\n * @return {T} A non-null |value|.\n * @closurePrimitive {asserts.truthy}\n */\nlib.notNull = function(value) {\n  lib.assert(value !== null);\n  return value;\n};\n\n/**\n * Verify |value| is not undefined and return |value| if so, else throw Error.\n * See lib.assert.\n *\n * @template T\n * @param {T} value A value to check for null.\n * @return {T} A non-undefined |value|.\n * @closurePrimitive {asserts.truthy}\n */\nlib.notUndefined = function(value) {\n  lib.assert(value !== undefined);\n  return value;\n};\n// SOURCE FILE: libdot/js/lib_polyfill.js\n// Copyright 2017 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview Polyfills for ES2019+ features we want to use.\n * @suppress {duplicate} This file redefines many functions.\n */\n\n/** @const */\nlib.polyfill = {};\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/API/Blob/arrayBuffer\n *\n * @return {!Promise<!ArrayBuffer>}\n */\nlib.polyfill.BlobArrayBuffer = function() {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onabort = reader.onerror = () => reject(reader);\n    reader.readAsArrayBuffer(this);\n  });\n};\n\nif (typeof Blob.prototype.arrayBuffer != 'function') {\n  Blob.prototype.arrayBuffer = lib.polyfill.BlobArrayBuffer;\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/API/Blob/text\n *\n * @return {!Promise<string>}\n */\nlib.polyfill.BlobText = function() {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onabort = reader.onerror = () => reject(reader);\n    reader.readAsText(this);\n  });\n};\n\nif (typeof Blob.prototype.arrayBuffer != 'function') {\n  Blob.prototype.text = lib.polyfill.BlobText;\n}\n// SOURCE FILE: libdot/js/lib_array.js\n// Copyright 2017 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview Helper functions for (typed) arrays.\n */\n\nlib.array = {};\n\n/**\n * Concatenate an arbitrary number of typed arrays of the same type into a new\n * typed array of this type.\n *\n * @template TYPED_ARRAY\n * @param {...!TYPED_ARRAY} arrays\n * @return {!TYPED_ARRAY}\n */\nlib.array.concatTyped = function(...arrays) {\n  let resultLength = 0;\n  for (const array of arrays) {\n    resultLength += array.length;\n  }\n  const result = new arrays[0].constructor(resultLength);\n  let pos = 0;\n  for (const array of arrays) {\n    result.set(array, pos);\n    pos += array.length;\n  }\n  return result;\n};\n\n/**\n * Compare two array-like objects entrywise.\n *\n * @template ARRAY_LIKE\n * @param {?ARRAY_LIKE} a The first array to compare.\n * @param {?ARRAY_LIKE} b The second array to compare.\n * @return {boolean} true if both arrays are null or they agree entrywise;\n *     false otherwise.\n */\nlib.array.compare = function(a, b) {\n  if (a === null || b === null) {\n    return a === null && b === null;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n// SOURCE FILE: libdot/js/lib_codec.js\n// Copyright 2018 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nlib.codec = {};\n\n/**\n * Join an array of code units to a string.\n *\n * The code units must not be larger than 65535.  The individual code units may\n * be for UTF-8 or UTF-16 -- it doesn't matter since UTF-16 can handle all UTF-8\n * code units.\n *\n * The input array type may be an Array or a typed Array (e.g. Uint8Array).\n *\n * @param {!Uint8Array|!Array<number>} array The code units to generate for\n *     the string.\n * @return {string} A UTF-16 encoded string.\n */\nlib.codec.codeUnitArrayToString = function(array) {\n  // String concat is faster than Array.join.\n  //\n  // String.fromCharCode.apply is faster than this if called less frequently\n  // and with smaller array sizes (like <32K).  But it's a recursive call so\n  // larger arrays will blow the stack and fail.  We also seem to be faster\n  // (or at least more constant time) when called frequently.\n  let ret = '';\n  for (let i = 0; i < array.length; ++i) {\n    ret += String.fromCharCode(array[i]);\n  }\n  return ret;\n};\n\n/**\n * Create an array of code units from a UTF-16 encoded string.\n *\n * @param {string} str The string to extract code units from.\n * @param {!ArrayBufferView=} ret The buffer to hold the result.  If not set, a\n *     new Uint8Array is created.\n * @return {!ArrayBufferView} The array of code units.\n */\nlib.codec.stringToCodeUnitArray = function(\n    str, ret = new Uint8Array(str.length)) {\n  // Indexing string directly is faster than Array.map.\n  for (let i = 0; i < str.length; ++i) {\n    ret[i] = str.charCodeAt(i);\n  }\n  return ret;\n};\n// SOURCE FILE: libdot/js/lib_colors.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Namespace for color utilities.\n */\nlib.colors = {};\n\n/**\n * First, some canned regular expressions we're going to use in this file.\n *\n *\n *                              BRACE YOURSELF\n *\n *                                 ,~~~~.\n *                                 |>_< ~~\n *                                3`---'-/.\n *                                3:::::\\v\\\n *                               =o=:::::\\,\\\n *                                | :::::\\,,\\\n *\n *                        THE REGULAR EXPRESSIONS\n *                               ARE COMING.\n *\n * There's no way to break long RE literals in JavaScript.  Fix that why don't\n * you?  Oh, and also there's no way to write a string that doesn't interpret\n * escapes.\n *\n * Instead, we stoop to this .replace() trick.\n */\nlib.colors.re_ = {\n  // CSS hex color, #RGB or RGBA.\n  hex16: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?$/i,\n\n  // CSS hex color, #RRGGBB or #RRGGBBAA.\n  hex24: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?$/i,\n\n  // CSS rgb color, rgb(rrr,ggg,bbb).\n  rgb: new RegExp(\n      ('^/s*rgb/s*/(/s*(/d{1,3})/s*,/s*(/d{1,3})/s*,' +\n       '/s*(/d{1,3})/s*/)/s*$'\n       ).replace(/\\//g, '\\\\'), 'i'),\n\n  // CSS rgb color, rgba(rrr,ggg,bbb,aaa).\n  rgba: new RegExp(\n      ('^/s*rgba/s*' +\n       '/(/s*(/d{1,3})/s*,/s*(/d{1,3})/s*,/s*(/d{1,3})/s*' +\n       '(?:,/s*(/d+(?:/./d+)?)/s*)/)/s*$'\n       ).replace(/\\//g, '\\\\'), 'i'),\n\n  // Either RGB or RGBA.\n  rgbx: new RegExp(\n      ('^/s*rgba?/s*' +\n       '/(/s*(/d{1,3})/s*,/s*(/d{1,3})/s*,/s*(/d{1,3})/s*' +\n       '(?:,/s*(/d+(?:/./d+)?)/s*)?/)/s*$'\n       ).replace(/\\//g, '\\\\'), 'i'),\n\n  // CSS hsl color, hsl(hhh,sss%,lll%).\n  hsl: new RegExp(\n      ('^/s*hsl/s*' +\n       '/(/s*(/d{1,3})/s*,/s*(/d{1,3})/s*%/s*,/s*(/d{1,3})/s*%/s*/)/s*$'\n       ).replace(/\\//g, '\\\\'), 'i'),\n\n  // CSS hsl color, hsla(hhh,sss%,lll%,aaa).\n  hsla: new RegExp(\n      ('^/s*hsla/s*' +\n       '/(/s*(/d{1,3})/s*,/s*(/d{1,3})/s*%/s*,/s*(/d{1,3})/s*%/s*' +\n       '(?:,/s*(/d+(?:/./d+)?)/s*)/)/s*$'\n       ).replace(/\\//g, '\\\\'), 'i'),\n\n  // Either HSL or HSLA.\n  hslx: new RegExp(\n      ('^/s*hsla?/s*' +\n       '/(/s*(/d{1,3})/s*,/s*(/d{1,3})/s*%/s*,/s*(/d{1,3})/s*%/s*' +\n       '(?:,/s*(/d+(?:/./d+)?)/s*)?/)/s*$'\n       ).replace(/\\//g, '\\\\'), 'i'),\n\n  // An X11 \"rgb:dddd/dddd/dddd\" value.\n  x11rgb: /^\\s*rgb:([a-f0-9]{1,4})\\/([a-f0-9]{1,4})\\/([a-f0-9]{1,4})\\s*$/i,\n\n  // English color name.\n  name: /[a-z][a-z0-9\\s]+/,\n};\n\n/**\n * Convert a CSS rgb(ddd,ddd,ddd) color value into an X11 color value.\n *\n * Other CSS color values are ignored to ensure sanitary data handling.\n *\n * Each 'ddd' component is a one byte value specified in decimal.\n *\n * @param {string} value The CSS color value to convert.\n * @return {?string} The X11 color value or null if the value could not be\n *     converted.\n */\nlib.colors.rgbToX11 = function(value) {\n  function scale(v) {\n    v = (Math.min(v, 255) * 257).toString(16);\n    return lib.f.zpad(v, 4);\n  }\n\n  const ary = value.match(lib.colors.re_.rgbx);\n  if (!ary) {\n    return null;\n  }\n\n  return 'rgb:' + scale(ary[1]) + '/' + scale(ary[2]) + '/' + scale(ary[3]);\n};\n\n/**\n * Convert a legacy X11 color value into an CSS rgb(...) color value.\n *\n * They take the form:\n * 12 bit: #RGB          -> #R000G000B000\n * 24 bit: #RRGGBB       -> #RR00GG00BB00\n * 36 bit: #RRRGGGBBB    -> #RRR0GGG0BBB0\n * 48 bit: #RRRRGGGGBBBB\n * These are the most significant bits.\n *\n * Truncate values back down to 24 bit since that's all CSS supports.\n *\n * @param {string} v The X11 hex color value to convert.\n * @return {?string} The CSS color value or null if the value could not be\n *     converted.\n */\nlib.colors.x11HexToCSS = function(v) {\n  if (!v.startsWith('#')) {\n    return null;\n  }\n  // Strip the leading # off.\n  v = v.substr(1);\n\n  // Reject unknown sizes.\n  if ([3, 6, 9, 12].indexOf(v.length) == -1) {\n    return null;\n  }\n\n  // Reject non-hex values.\n  if (v.match(/[^a-f0-9]/i)) {\n    return null;\n  }\n\n  // Split the colors out.\n  const size = v.length / 3;\n  const r = v.substr(0, size);\n  const g = v.substr(size, size);\n  const b = v.substr(size + size, size);\n\n  // Normalize to 16 bits.\n  function norm16(v) {\n    v = parseInt(v, 16);\n    return size == 2 ? v :         // 16 bit\n           size == 1 ? v << 4 :    // 8 bit\n           v >> (4 * (size - 2));  // 24 or 32 bit\n  }\n  return lib.colors.arrayToRGBA([r, g, b].map(norm16));\n};\n\n/**\n * Convert an X11 color value into an CSS rgb(...) color value.\n *\n * The X11 value may be an X11 color name, or an RGB value of the form\n * rgb:hhhh/hhhh/hhhh.  If a component value is less than 4 digits it is\n * padded out to 4, then scaled down to fit in a single byte.\n *\n * @param {string} v The X11 color value to convert.\n * @return {?string} The CSS color value or null if the value could not be\n *     converted.\n */\nlib.colors.x11ToCSS = function(v) {\n  function scale(v) {\n    // Pad out values with less than four digits.  This padding (probably)\n    // matches xterm.  It's difficult to say for sure since xterm seems to\n    // arrive at a padded value and then perform some combination of\n    // gamma correction, color space transformation, and quantization.\n\n    if (v.length == 1) {\n      // Single digits pad out to four by repeating the character.  \"f\" becomes\n      // \"ffff\".  Scaling down a hex value of this pattern by 257 is the same\n      // as cutting off one byte.  We skip the middle step and just double\n      // the character.\n      return parseInt(v + v, 16);\n    }\n\n    if (v.length == 2) {\n      // Similar deal here.  X11 pads two digit values by repeating the\n      // byte (or scale up by 257).  Since we're going to scale it back\n      // down anyway, we can just return the original value.\n      return parseInt(v, 16);\n    }\n\n    if (v.length == 3) {\n      // Three digit values seem to be padded by repeating the final digit.\n      // e.g. 10f becomes 10ff.\n      v = v + v.substr(2);\n    }\n\n    // Scale down the 2 byte value.\n    return Math.round(parseInt(v, 16) / 257);\n  }\n\n  const ary = v.match(lib.colors.re_.x11rgb);\n  if (!ary) {\n    // Handle the legacy format.\n    if (v.startsWith('#')) {\n      return lib.colors.x11HexToCSS(v);\n    } else {\n      return lib.colors.nameToRGB(v);\n    }\n  }\n\n  ary.splice(0, 1);\n  return lib.colors.arrayToRGBA(ary.map(scale));\n};\n\n/**\n * Converts one or more CSS '#RRGGBB' or '#RRGGBBAA' color values into their\n * rgb(...) or rgba(...) form respectively.\n *\n * Arrays are converted in place. If a value cannot be converted, it is\n * replaced with null.\n *\n * @param {string} hex A single RGB or RGBA value to convert.\n * @return {?string} The converted value.\n */\nlib.colors.hexToRGB = function(hex) {\n  const hex16 = lib.colors.re_.hex16;\n  const hex24 = lib.colors.re_.hex24;\n\n  if (hex16.test(hex)) {\n    // Convert from RGB to RRGGBB and from RGBA to RRGGBBAA.\n    hex = `#${hex.match(/[a-f0-9]/gi).map((x) => `${x}${x}`).join('')}`;\n  }\n\n  const ary = hex.match(hex24);\n  if (!ary) {\n    return null;\n  }\n\n  const val = (index) => parseInt(ary[index + 1], 16);\n  return ary[4] === undefined || val(3) === 255\n      ? `rgb(${val(0)}, ${val(1)}, ${val(2)})`\n      : `rgba(${val(0)}, ${val(1)}, ${val(2)}, ${val(3) / 255})`;\n};\n\n/**\n * Converts one or more CSS rgb(...) or rgba(...) forms into their '#RRGGBB' or\n * '#RRGGBBAA' color values respectively.\n *\n * Arrays are converted in place. If a value cannot be converted, it is\n * replaced with null.\n *\n * @param {string} rgb A single rgb(...) or rgba(...) value to convert.\n * @return {?string} The converted value.\n */\nlib.colors.rgbToHex = function(rgb) {\n  const ary = lib.colors.crackRGB(rgb);\n  if (!ary) {\n    return null;\n  }\n\n  const hex = '#' + lib.f.zpad((\n      (parseInt(ary[0], 10) << 16) |\n      (parseInt(ary[1], 10) << 8) |\n      (parseInt(ary[2], 10) << 0)).toString(16), 6);\n  if (ary[3] === undefined || ary[3] === '1') {\n    return hex;\n  } else {\n    const alpha = Math.round(255 * parseFloat(ary[3])).toString(16);\n    return `${hex}${lib.f.zpad(alpha, 2)}`;\n  }\n};\n\n/**\n * Split an hsl/hsla color into an array of its components.\n *\n * On success, a 4 element array will be returned.  For hsl values, the alpha\n * will be set to 1.\n *\n * @param {string} color The HSL/HSLA CSS color spec.\n * @return {?Array<string>} The HSL/HSLA values split out.\n */\nlib.colors.crackHSL = function(color) {\n  if (color.startsWith('hsla')) {\n    const ary = color.match(lib.colors.re_.hsla);\n    if (ary) {\n      ary.shift();\n      return Array.from(ary);\n    }\n  } else {\n    const ary = color.match(lib.colors.re_.hsl);\n    if (ary) {\n      ary.shift();\n      ary.push('1');\n      return Array.from(ary);\n    }\n  }\n\n  console.error(`Couldn't crack: ${color}`);\n  return null;\n};\n\n/**\n * Converts hslx array to rgba array.\n *\n * The returned alpha component defaults to 1 if it isn't present in the input.\n *\n * The returned values are not rounded to preserve precision for computations,\n * so should be rounded before they are used in CSS strings.\n *\n * @param {?Array<string|number>} hslx The HSL or HSLA elements to convert.\n * @return {!Array<number>} The RGBA values.\n */\nlib.colors.hslxArrayToRgbaArray = function(hslx) {\n  const hue = parseInt(hslx[0], 10) / 60;\n  const sat = parseInt(hslx[1], 10) / 100;\n  const light = parseInt(hslx[2], 10) / 100;\n\n  // The following algorithm has been adapted from:\n  //     https://www.w3.org/TR/css-color-4/#hsl-to-rgb\n  const hueToRgb = (t1, t2, hue) => {\n    if (hue < 0) {\n      hue += 6;\n    }\n    if (hue >= 6) {\n      hue -= 6;\n    }\n\n    if (hue < 1) {\n      return (t2 - t1) * hue + t1;\n    } else if (hue < 3) {\n      return t2;\n    } else if (hue < 4) {\n      return (t2 - t1) * (4 - hue) + t1;\n    } else {\n      return t1;\n    }\n  };\n\n  const t2 = light <= 0.5 ? light * (sat + 1) : light + sat - (light * sat);\n  const t1 = light * 2 - t2;\n\n  return [\n    255 * hueToRgb(t1, t2, hue + 2),\n    255 * hueToRgb(t1, t2, hue),\n    255 * hueToRgb(t1, t2, hue - 2),\n    hslx[3] !== undefined ? +hslx[3] : 1,\n  ];\n};\n\n/**\n * Converts a hsvx array to a hsla array. The hsvx array is an array of [hue\n * (>=0, <=360), saturation (>=0, <=100), value (>=0, <=100), alpha] (alpha can\n * be missing).\n *\n * The returned alpha component defaults to 1 if it isn't present in the input.\n *\n * The returned values are not rounded to preserve precision for computations,\n * so should be rounded before they are used in CSS strings.\n *\n * @param {?Array<string|number>} hsvx The hsv or hsva array.\n * @return {!Array<number>} The hsla array.\n */\nlib.colors.hsvxArrayToHslaArray = function(hsvx) {\n  const clamp = (x) => lib.f.clamp(x, 0, 100);\n  const [hue, saturation, value] = hsvx.map(parseFloat);\n  const hslLightness = clamp(value * (100 - saturation / 2) / 100);\n  let hslSaturation = 0;\n  if (hslLightness !== 0 && hslLightness !== 100) {\n    hslSaturation = clamp((value - hslLightness) /\n        Math.min(hslLightness, 100 - hslLightness) * 100);\n  }\n  return [\n      hue,\n      hslSaturation,\n      hslLightness,\n      hsvx.length === 4 ? +hsvx[3] : 1,\n  ];\n};\n\n/**\n * Converts a hslx array to a hsva array. The hsva array is an array of [hue\n * (>=0, <=360), saturation (>=0, <=100), value (>=0, <=100), alpha].\n *\n * The returned alpha component defaults to 1 if it isn't present in the input.\n *\n * @param {?Array<string|number>} hslx The hsl or hsla array.\n * @return {!Array<number>} The hsva array.\n */\nlib.colors.hslxArrayToHsvaArray = function(hslx) {\n  const clamp = (x) => lib.f.clamp(x, 0, 100);\n  const [hue, saturation, lightness] = hslx.map(parseFloat);\n  const hsvValue = clamp(\n      lightness + saturation * Math.min(lightness, 100 - lightness) / 100);\n  let hsvSaturation = 0;\n  if (hsvValue !== 0) {\n    hsvSaturation = clamp(200 * (1 - lightness / hsvValue));\n  }\n  return [hue, hsvSaturation, hsvValue, hslx.length === 4 ? +hslx[3] : 1];\n};\n\n/**\n * Converts one or more CSS hsl(...) or hsla(...) forms into their rgb(...) or\n * rgba(...) color values respectively.\n *\n * Arrays are converted in place. If a value cannot be converted, it is\n * replaced with null.\n *\n * @param {string} hsl A single hsl(...) or hsla(...) value to convert.\n * @return {?string} The converted value.\n */\nlib.colors.hslToRGB = function(hsl) {\n  const ary = lib.colors.crackHSL(hsl);\n  if (!ary) {\n    return null;\n  }\n\n  const [r, g, b, a] = lib.colors.hslxArrayToRgbaArray(ary);\n\n  const rgb = [r, g, b].map(Math.round).join(', ');\n\n  return a === 1 ? `rgb(${rgb})` : `rgba(${rgb}, ${a})`;\n};\n\n/**\n * Converts rgbx array to hsla array.\n *\n * The returned alpha component defaults to 1 if it isn't present in the input.\n *\n * The returned values are not rounded to preserve precision for computations,\n * so should be rounded before they are used in CSS strings.\n *\n * @param {?Array<string|number>} rgbx The RGB or RGBA elements to convert.\n * @return {!Array<number>} The HSLA values.\n */\nlib.colors.rgbxArrayToHslaArray = function(rgbx) {\n  const r = parseInt(rgbx[0], 10) / 255;\n  const g = parseInt(rgbx[1], 10) / 255;\n  const b = parseInt(rgbx[2], 10) / 255;\n\n  const min = Math.min(r, g, b);\n  const max = Math.max(r, g, b);\n  const spread = max - min;\n\n  /* eslint-disable id-denylist */\n  const l = (max + min) / 2;\n\n  if (spread == 0) {\n    return [0, 0, 100 * l, rgbx[3] !== undefined ? +rgbx[3] : 1];\n  }\n\n  let h = (() => {\n    switch (max) {\n      case r: return ((g - b) / spread) % 6;\n      case g: return (b - r) / spread + 2;\n      case b: return (r - g) / spread + 4;\n    }\n  })();\n  h *= 60;\n  if (h < 0) {\n    h += 360;\n  }\n\n  const s = spread / (1 - Math.abs(2 * l - 1));\n\n  return [h, 100 * s, 100 * l, rgbx[3] !== undefined ? +rgbx[3] : 1];\n  /* eslint-enable id-denylist */\n};\n\n/**\n * Converts one or more CSS rgb(...) or rgba(...) forms into their hsl(...) or\n * hsla(...) color values respectively.\n *\n * Arrays are converted in place. If a value cannot be converted, it is\n * replaced with null.\n *\n * @param {string} rgb A single rgb(...) or rgba(...) value to convert.\n * @return {?string} The converted value.\n */\nlib.colors.rgbToHsl = function(rgb) {\n  const ary = lib.colors.crackRGB(rgb);\n  if (!ary) {\n    return null;\n  }\n\n  /* eslint-disable id-denylist */\n  // eslint-disable-next-line prefer-const\n  let [h, s, l, a] = lib.colors.rgbxArrayToHslaArray(ary);\n  h = Math.round(h);\n  s = Math.round(s);\n  l = Math.round(l);\n\n  return a === 1 ? `hsl(${h}, ${s}%, ${l}%)` : `hsla(${h}, ${s}%, ${l}%, ${a})`;\n  /* eslint-enable id-denylist */\n};\n\n/**\n * Take any valid CSS color definition and turn it into an rgb or rgba value.\n *\n * @param {string} def The CSS color spec to normalize.\n * @return {?string} The converted value.\n */\nlib.colors.normalizeCSS = function(def) {\n  if (def.startsWith('#')) {\n    return lib.colors.hexToRGB(def);\n  }\n\n  if (lib.colors.re_.rgbx.test(def)) {\n    return def;\n  }\n\n  if (lib.colors.re_.hslx.test(def)) {\n    return lib.colors.hslToRGB(def);\n  }\n\n  return lib.colors.nameToRGB(def);\n};\n\n/**\n * Take any valid CSS color definition and turn it into an hsl or hsla value.\n *\n * @param {string} def The CSS color spec to normalize.\n * @return {?string} The converted value.\n */\nlib.colors.normalizeCSSToHSL = function(def) {\n  if (lib.colors.re_.hslx.test(def)) {\n    return def;\n  }\n\n  const rgb = lib.colors.normalizeCSS(def);\n  if (!rgb) {\n    return rgb;\n  }\n  return lib.colors.rgbToHsl(rgb);\n};\n\n/**\n * Convert a 3 or 4 element array into an rgb(...) or rgba(...) string.\n *\n * @param {?Array<string|number>} ary The RGB or RGBA elements to convert.\n * @return {string} The normalized CSS color spec.\n */\nlib.colors.arrayToRGBA = function(ary) {\n  if (ary.length == 3) {\n    return `rgb(${ary[0]}, ${ary[1]}, ${ary[2]})`;\n  }\n  return `rgba(${ary[0]}, ${ary[1]}, ${ary[2]}, ${ary[3]})`;\n};\n\n/**\n * Convert a 3 or 4 element array into an hsla(...) string.\n *\n * @param {?Array<string|number>} ary The HSL or HSLA elements to convert.\n * @return {string} The normalized CSS color spec.\n */\nlib.colors.arrayToHSLA = function(ary) {\n  const alpha = (ary.length > 3) ? ary[3] : 1;\n  return `hsla(${Math.round(ary[0])}, ${Math.round(ary[1])}%, ` +\n      `${Math.round(ary[2])}%, ${alpha})`;\n};\n\n/**\n * Overwrite the alpha channel of an rgb/rgba color.\n *\n * @param {string} rgb The normalized CSS color spec.\n * @param {number} alpha The alpha channel.\n * @return {string} The normalized CSS color spec with updated alpha channel.\n */\nlib.colors.setAlpha = function(rgb, alpha) {\n  const ary = lib.colors.crackRGB(rgb);\n  ary[3] = alpha.toString();\n  return lib.colors.arrayToRGBA(ary);\n};\n\n/**\n * Mix a percentage of a tint color into a base color.\n *\n * @param  {string} base The normalized CSS base color spec.\n * @param  {string} tint The normalized CSS color to tint with.\n * @param  {number} percent The percentage of the tinting.\n * @return {string} The new tinted CSS color spec.\n */\nlib.colors.mix = function(base, tint, percent) {\n  const ary1 = lib.colors.crackRGB(base);\n  const ary2 = lib.colors.crackRGB(tint);\n\n  for (let i = 0; i < 4; ++i) {\n    const basecol = parseInt(ary1[i], 10);\n    const tintcol = parseInt(ary2[i], 10);\n    const diff = tintcol - basecol;\n    ary1[i] = Math.round(base + diff * percent).toString();\n  }\n\n  return lib.colors.arrayToRGBA(ary1);\n};\n\n/**\n * Split an rgb/rgba color into an array of its components.\n *\n * On success, a 4 element array will be returned.  For rgb values, the alpha\n * will be set to 1.\n *\n * @param {string} color The RGB/RGBA CSS color spec.\n * @return {?Array<string>} The RGB/RGBA values split out.\n */\nlib.colors.crackRGB = function(color) {\n  if (color.startsWith('rgba')) {\n    const ary = color.match(lib.colors.re_.rgba);\n    if (ary) {\n      ary.shift();\n      return Array.from(ary);\n    }\n  } else {\n    const ary = color.match(lib.colors.re_.rgb);\n    if (ary) {\n      ary.shift();\n      ary.push('1');\n      return Array.from(ary);\n    }\n  }\n\n  console.error('Couldn\\'t crack: ' + color);\n  return null;\n};\n\n/**\n * Convert an X11 color name into a CSS rgb(...) value.\n *\n * Names are stripped of spaces and converted to lowercase.  If the name is\n * unknown, null is returned.\n *\n * This list of color name to RGB mapping is derived from the stock X11\n * rgb.txt file.\n *\n * @param {string} name The color name to convert.\n * @return {?string} The corresponding CSS rgb(...) value.\n */\nlib.colors.nameToRGB = function(name) {\n  if (name in lib.colors.colorNames) {\n    return lib.colors.colorNames[name];\n  }\n\n  name = name.toLowerCase();\n  if (name in lib.colors.colorNames) {\n    return lib.colors.colorNames[name];\n  }\n\n  name = name.replace(/\\s+/g, '');\n  if (name in lib.colors.colorNames) {\n    return lib.colors.colorNames[name];\n  }\n\n  return null;\n};\n\n/**\n * Calculate the relative luminance as per\n * https://www.w3.org/TR/WCAG20/#relativeluminancedef\n *\n * @param {number} r The value (>=0 and <= 255) of the rgb component.\n * @param {number} g The value (>=0 and <= 255) of the rgb component.\n * @param {number} b The value (>=0 and <= 255) of the rgb component.\n * @return {number} The relative luminance.\n */\nlib.colors.luminance = function(r, g, b) {\n  const [rr, gg, bb] = [r, g, b].map((value) => {\n    value /= 255;\n    if (value <= 0.03928) {\n      return value / 12.92;\n    } else {\n      return Math.pow((value + 0.055) / 1.055, 2.4);\n    }\n  });\n\n  return 0.2126 * rr + 0.7152 * gg + 0.0722 * bb;\n};\n\n/**\n * Calculate the contrast ratio of two relative luminance values as per\n * https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n *\n * @param {number} l1 Relative luminance value.\n * @param {number} l2 Relative luminance value.\n * @return {number} The contrast ratio.\n */\nlib.colors.contrastRatio = function(l1, l2) {\n  return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n};\n\n/**\n * The stock color palette.\n *\n * @type {!Array<string>}\n */\nlib.colors.stockPalette = [\n     // The \"ANSI 16\"...\n    '#000000', '#CC0000', '#4E9A06', '#C4A000',\n    '#3465A4', '#75507B', '#06989A', '#D3D7CF',\n    '#555753', '#EF2929', '#00BA13', '#FCE94F',\n    '#729FCF', '#F200CB', '#00B5BD', '#EEEEEC',\n\n    // The 6x6 color cubes...\n    '#000000', '#00005F', '#000087', '#0000AF', '#0000D7', '#0000FF',\n    '#005F00', '#005F5F', '#005F87', '#005FAF', '#005FD7', '#005FFF',\n    '#008700', '#00875F', '#008787', '#0087AF', '#0087D7', '#0087FF',\n    '#00AF00', '#00AF5F', '#00AF87', '#00AFAF', '#00AFD7', '#00AFFF',\n    '#00D700', '#00D75F', '#00D787', '#00D7AF', '#00D7D7', '#00D7FF',\n    '#00FF00', '#00FF5F', '#00FF87', '#00FFAF', '#00FFD7', '#00FFFF',\n\n    '#5F0000', '#5F005F', '#5F0087', '#5F00AF', '#5F00D7', '#5F00FF',\n    '#5F5F00', '#5F5F5F', '#5F5F87', '#5F5FAF', '#5F5FD7', '#5F5FFF',\n    '#5F8700', '#5F875F', '#5F8787', '#5F87AF', '#5F87D7', '#5F87FF',\n    '#5FAF00', '#5FAF5F', '#5FAF87', '#5FAFAF', '#5FAFD7', '#5FAFFF',\n    '#5FD700', '#5FD75F', '#5FD787', '#5FD7AF', '#5FD7D7', '#5FD7FF',\n    '#5FFF00', '#5FFF5F', '#5FFF87', '#5FFFAF', '#5FFFD7', '#5FFFFF',\n\n    '#870000', '#87005F', '#870087', '#8700AF', '#8700D7', '#8700FF',\n    '#875F00', '#875F5F', '#875F87', '#875FAF', '#875FD7', '#875FFF',\n    '#878700', '#87875F', '#878787', '#8787AF', '#8787D7', '#8787FF',\n    '#87AF00', '#87AF5F', '#87AF87', '#87AFAF', '#87AFD7', '#87AFFF',\n    '#87D700', '#87D75F', '#87D787', '#87D7AF', '#87D7D7', '#87D7FF',\n    '#87FF00', '#87FF5F', '#87FF87', '#87FFAF', '#87FFD7', '#87FFFF',\n\n    '#AF0000', '#AF005F', '#AF0087', '#AF00AF', '#AF00D7', '#AF00FF',\n    '#AF5F00', '#AF5F5F', '#AF5F87', '#AF5FAF', '#AF5FD7', '#AF5FFF',\n    '#AF8700', '#AF875F', '#AF8787', '#AF87AF', '#AF87D7', '#AF87FF',\n    '#AFAF00', '#AFAF5F', '#AFAF87', '#AFAFAF', '#AFAFD7', '#AFAFFF',\n    '#AFD700', '#AFD75F', '#AFD787', '#AFD7AF', '#AFD7D7', '#AFD7FF',\n    '#AFFF00', '#AFFF5F', '#AFFF87', '#AFFFAF', '#AFFFD7', '#AFFFFF',\n\n    '#D70000', '#D7005F', '#D70087', '#D700AF', '#D700D7', '#D700FF',\n    '#D75F00', '#D75F5F', '#D75F87', '#D75FAF', '#D75FD7', '#D75FFF',\n    '#D78700', '#D7875F', '#D78787', '#D787AF', '#D787D7', '#D787FF',\n    '#D7AF00', '#D7AF5F', '#D7AF87', '#D7AFAF', '#D7AFD7', '#D7AFFF',\n    '#D7D700', '#D7D75F', '#D7D787', '#D7D7AF', '#D7D7D7', '#D7D7FF',\n    '#D7FF00', '#D7FF5F', '#D7FF87', '#D7FFAF', '#D7FFD7', '#D7FFFF',\n\n    '#FF0000', '#FF005F', '#FF0087', '#FF00AF', '#FF00D7', '#FF00FF',\n    '#FF5F00', '#FF5F5F', '#FF5F87', '#FF5FAF', '#FF5FD7', '#FF5FFF',\n    '#FF8700', '#FF875F', '#FF8787', '#FF87AF', '#FF87D7', '#FF87FF',\n    '#FFAF00', '#FFAF5F', '#FFAF87', '#FFAFAF', '#FFAFD7', '#FFAFFF',\n    '#FFD700', '#FFD75F', '#FFD787', '#FFD7AF', '#FFD7D7', '#FFD7FF',\n    '#FFFF00', '#FFFF5F', '#FFFF87', '#FFFFAF', '#FFFFD7', '#FFFFFF',\n\n    // The greyscale ramp...\n    '#080808', '#121212', '#1C1C1C', '#262626', '#303030', '#3A3A3A',\n    '#444444', '#4E4E4E', '#585858', '#626262', '#6C6C6C', '#767676',\n    '#808080', '#8A8A8A', '#949494', '#9E9E9E', '#A8A8A8', '#B2B2B2',\n    '#BCBCBC', '#C6C6C6', '#D0D0D0', '#DADADA', '#E4E4E4', '#EEEEEE',\n   ].map(lib.colors.hexToRGB);\n\n/**\n * Named colors according to the stock X11 rgb.txt file.\n */\nlib.colors.colorNames = {\n  'aliceblue': 'rgb(240, 248, 255)',\n  'antiquewhite': 'rgb(250, 235, 215)',\n  'antiquewhite1': 'rgb(255, 239, 219)',\n  'antiquewhite2': 'rgb(238, 223, 204)',\n  'antiquewhite3': 'rgb(205, 192, 176)',\n  'antiquewhite4': 'rgb(139, 131, 120)',\n  'aquamarine': 'rgb(127, 255, 212)',\n  'aquamarine1': 'rgb(127, 255, 212)',\n  'aquamarine2': 'rgb(118, 238, 198)',\n  'aquamarine3': 'rgb(102, 205, 170)',\n  'aquamarine4': 'rgb(69, 139, 116)',\n  'azure': 'rgb(240, 255, 255)',\n  'azure1': 'rgb(240, 255, 255)',\n  'azure2': 'rgb(224, 238, 238)',\n  'azure3': 'rgb(193, 205, 205)',\n  'azure4': 'rgb(131, 139, 139)',\n  'beige': 'rgb(245, 245, 220)',\n  'bisque': 'rgb(255, 228, 196)',\n  'bisque1': 'rgb(255, 228, 196)',\n  'bisque2': 'rgb(238, 213, 183)',\n  'bisque3': 'rgb(205, 183, 158)',\n  'bisque4': 'rgb(139, 125, 107)',\n  'black': 'rgb(0, 0, 0)',\n  'blanchedalmond': 'rgb(255, 235, 205)',\n  'blue': 'rgb(0, 0, 255)',\n  'blue1': 'rgb(0, 0, 255)',\n  'blue2': 'rgb(0, 0, 238)',\n  'blue3': 'rgb(0, 0, 205)',\n  'blue4': 'rgb(0, 0, 139)',\n  'blueviolet': 'rgb(138, 43, 226)',\n  'brown': 'rgb(165, 42, 42)',\n  'brown1': 'rgb(255, 64, 64)',\n  'brown2': 'rgb(238, 59, 59)',\n  'brown3': 'rgb(205, 51, 51)',\n  'brown4': 'rgb(139, 35, 35)',\n  'burlywood': 'rgb(222, 184, 135)',\n  'burlywood1': 'rgb(255, 211, 155)',\n  'burlywood2': 'rgb(238, 197, 145)',\n  'burlywood3': 'rgb(205, 170, 125)',\n  'burlywood4': 'rgb(139, 115, 85)',\n  'cadetblue': 'rgb(95, 158, 160)',\n  'cadetblue1': 'rgb(152, 245, 255)',\n  'cadetblue2': 'rgb(142, 229, 238)',\n  'cadetblue3': 'rgb(122, 197, 205)',\n  'cadetblue4': 'rgb(83, 134, 139)',\n  'chartreuse': 'rgb(127, 255, 0)',\n  'chartreuse1': 'rgb(127, 255, 0)',\n  'chartreuse2': 'rgb(118, 238, 0)',\n  'chartreuse3': 'rgb(102, 205, 0)',\n  'chartreuse4': 'rgb(69, 139, 0)',\n  'chocolate': 'rgb(210, 105, 30)',\n  'chocolate1': 'rgb(255, 127, 36)',\n  'chocolate2': 'rgb(238, 118, 33)',\n  'chocolate3': 'rgb(205, 102, 29)',\n  'chocolate4': 'rgb(139, 69, 19)',\n  'coral': 'rgb(255, 127, 80)',\n  'coral1': 'rgb(255, 114, 86)',\n  'coral2': 'rgb(238, 106, 80)',\n  'coral3': 'rgb(205, 91, 69)',\n  'coral4': 'rgb(139, 62, 47)',\n  'cornflowerblue': 'rgb(100, 149, 237)',\n  'cornsilk': 'rgb(255, 248, 220)',\n  'cornsilk1': 'rgb(255, 248, 220)',\n  'cornsilk2': 'rgb(238, 232, 205)',\n  'cornsilk3': 'rgb(205, 200, 177)',\n  'cornsilk4': 'rgb(139, 136, 120)',\n  'cyan': 'rgb(0, 255, 255)',\n  'cyan1': 'rgb(0, 255, 255)',\n  'cyan2': 'rgb(0, 238, 238)',\n  'cyan3': 'rgb(0, 205, 205)',\n  'cyan4': 'rgb(0, 139, 139)',\n  'darkblue': 'rgb(0, 0, 139)',\n  'darkcyan': 'rgb(0, 139, 139)',\n  'darkgoldenrod': 'rgb(184, 134, 11)',\n  'darkgoldenrod1': 'rgb(255, 185, 15)',\n  'darkgoldenrod2': 'rgb(238, 173, 14)',\n  'darkgoldenrod3': 'rgb(205, 149, 12)',\n  'darkgoldenrod4': 'rgb(139, 101, 8)',\n  'darkgray': 'rgb(169, 169, 169)',\n  'darkgreen': 'rgb(0, 100, 0)',\n  'darkgrey': 'rgb(169, 169, 169)',\n  'darkkhaki': 'rgb(189, 183, 107)',\n  'darkmagenta': 'rgb(139, 0, 139)',\n  'darkolivegreen': 'rgb(85, 107, 47)',\n  'darkolivegreen1': 'rgb(202, 255, 112)',\n  'darkolivegreen2': 'rgb(188, 238, 104)',\n  'darkolivegreen3': 'rgb(162, 205, 90)',\n  'darkolivegreen4': 'rgb(110, 139, 61)',\n  'darkorange': 'rgb(255, 140, 0)',\n  'darkorange1': 'rgb(255, 127, 0)',\n  'darkorange2': 'rgb(238, 118, 0)',\n  'darkorange3': 'rgb(205, 102, 0)',\n  'darkorange4': 'rgb(139, 69, 0)',\n  'darkorchid': 'rgb(153, 50, 204)',\n  'darkorchid1': 'rgb(191, 62, 255)',\n  'darkorchid2': 'rgb(178, 58, 238)',\n  'darkorchid3': 'rgb(154, 50, 205)',\n  'darkorchid4': 'rgb(104, 34, 139)',\n  'darkred': 'rgb(139, 0, 0)',\n  'darksalmon': 'rgb(233, 150, 122)',\n  'darkseagreen': 'rgb(143, 188, 143)',\n  'darkseagreen1': 'rgb(193, 255, 193)',\n  'darkseagreen2': 'rgb(180, 238, 180)',\n  'darkseagreen3': 'rgb(155, 205, 155)',\n  'darkseagreen4': 'rgb(105, 139, 105)',\n  'darkslateblue': 'rgb(72, 61, 139)',\n  'darkslategray': 'rgb(47, 79, 79)',\n  'darkslategray1': 'rgb(151, 255, 255)',\n  'darkslategray2': 'rgb(141, 238, 238)',\n  'darkslategray3': 'rgb(121, 205, 205)',\n  'darkslategray4': 'rgb(82, 139, 139)',\n  'darkslategrey': 'rgb(47, 79, 79)',\n  'darkturquoise': 'rgb(0, 206, 209)',\n  'darkviolet': 'rgb(148, 0, 211)',\n  'debianred': 'rgb(215, 7, 81)',\n  'deeppink': 'rgb(255, 20, 147)',\n  'deeppink1': 'rgb(255, 20, 147)',\n  'deeppink2': 'rgb(238, 18, 137)',\n  'deeppink3': 'rgb(205, 16, 118)',\n  'deeppink4': 'rgb(139, 10, 80)',\n  'deepskyblue': 'rgb(0, 191, 255)',\n  'deepskyblue1': 'rgb(0, 191, 255)',\n  'deepskyblue2': 'rgb(0, 178, 238)',\n  'deepskyblue3': 'rgb(0, 154, 205)',\n  'deepskyblue4': 'rgb(0, 104, 139)',\n  'dimgray': 'rgb(105, 105, 105)',\n  'dimgrey': 'rgb(105, 105, 105)',\n  'dodgerblue': 'rgb(30, 144, 255)',\n  'dodgerblue1': 'rgb(30, 144, 255)',\n  'dodgerblue2': 'rgb(28, 134, 238)',\n  'dodgerblue3': 'rgb(24, 116, 205)',\n  'dodgerblue4': 'rgb(16, 78, 139)',\n  'firebrick': 'rgb(178, 34, 34)',\n  'firebrick1': 'rgb(255, 48, 48)',\n  'firebrick2': 'rgb(238, 44, 44)',\n  'firebrick3': 'rgb(205, 38, 38)',\n  'firebrick4': 'rgb(139, 26, 26)',\n  'floralwhite': 'rgb(255, 250, 240)',\n  'forestgreen': 'rgb(34, 139, 34)',\n  'gainsboro': 'rgb(220, 220, 220)',\n  'ghostwhite': 'rgb(248, 248, 255)',\n  'gold': 'rgb(255, 215, 0)',\n  'gold1': 'rgb(255, 215, 0)',\n  'gold2': 'rgb(238, 201, 0)',\n  'gold3': 'rgb(205, 173, 0)',\n  'gold4': 'rgb(139, 117, 0)',\n  'goldenrod': 'rgb(218, 165, 32)',\n  'goldenrod1': 'rgb(255, 193, 37)',\n  'goldenrod2': 'rgb(238, 180, 34)',\n  'goldenrod3': 'rgb(205, 155, 29)',\n  'goldenrod4': 'rgb(139, 105, 20)',\n  'gray': 'rgb(190, 190, 190)',\n  'gray0': 'rgb(0, 0, 0)',\n  'gray1': 'rgb(3, 3, 3)',\n  'gray10': 'rgb(26, 26, 26)',\n  'gray100': 'rgb(255, 255, 255)',\n  'gray11': 'rgb(28, 28, 28)',\n  'gray12': 'rgb(31, 31, 31)',\n  'gray13': 'rgb(33, 33, 33)',\n  'gray14': 'rgb(36, 36, 36)',\n  'gray15': 'rgb(38, 38, 38)',\n  'gray16': 'rgb(41, 41, 41)',\n  'gray17': 'rgb(43, 43, 43)',\n  'gray18': 'rgb(46, 46, 46)',\n  'gray19': 'rgb(48, 48, 48)',\n  'gray2': 'rgb(5, 5, 5)',\n  'gray20': 'rgb(51, 51, 51)',\n  'gray21': 'rgb(54, 54, 54)',\n  'gray22': 'rgb(56, 56, 56)',\n  'gray23': 'rgb(59, 59, 59)',\n  'gray24': 'rgb(61, 61, 61)',\n  'gray25': 'rgb(64, 64, 64)',\n  'gray26': 'rgb(66, 66, 66)',\n  'gray27': 'rgb(69, 69, 69)',\n  'gray28': 'rgb(71, 71, 71)',\n  'gray29': 'rgb(74, 74, 74)',\n  'gray3': 'rgb(8, 8, 8)',\n  'gray30': 'rgb(77, 77, 77)',\n  'gray31': 'rgb(79, 79, 79)',\n  'gray32': 'rgb(82, 82, 82)',\n  'gray33': 'rgb(84, 84, 84)',\n  'gray34': 'rgb(87, 87, 87)',\n  'gray35': 'rgb(89, 89, 89)',\n  'gray36': 'rgb(92, 92, 92)',\n  'gray37': 'rgb(94, 94, 94)',\n  'gray38': 'rgb(97, 97, 97)',\n  'gray39': 'rgb(99, 99, 99)',\n  'gray4': 'rgb(10, 10, 10)',\n  'gray40': 'rgb(102, 102, 102)',\n  'gray41': 'rgb(105, 105, 105)',\n  'gray42': 'rgb(107, 107, 107)',\n  'gray43': 'rgb(110, 110, 110)',\n  'gray44': 'rgb(112, 112, 112)',\n  'gray45': 'rgb(115, 115, 115)',\n  'gray46': 'rgb(117, 117, 117)',\n  'gray47': 'rgb(120, 120, 120)',\n  'gray48': 'rgb(122, 122, 122)',\n  'gray49': 'rgb(125, 125, 125)',\n  'gray5': 'rgb(13, 13, 13)',\n  'gray50': 'rgb(127, 127, 127)',\n  'gray51': 'rgb(130, 130, 130)',\n  'gray52': 'rgb(133, 133, 133)',\n  'gray53': 'rgb(135, 135, 135)',\n  'gray54': 'rgb(138, 138, 138)',\n  'gray55': 'rgb(140, 140, 140)',\n  'gray56': 'rgb(143, 143, 143)',\n  'gray57': 'rgb(145, 145, 145)',\n  'gray58': 'rgb(148, 148, 148)',\n  'gray59': 'rgb(150, 150, 150)',\n  'gray6': 'rgb(15, 15, 15)',\n  'gray60': 'rgb(153, 153, 153)',\n  'gray61': 'rgb(156, 156, 156)',\n  'gray62': 'rgb(158, 158, 158)',\n  'gray63': 'rgb(161, 161, 161)',\n  'gray64': 'rgb(163, 163, 163)',\n  'gray65': 'rgb(166, 166, 166)',\n  'gray66': 'rgb(168, 168, 168)',\n  'gray67': 'rgb(171, 171, 171)',\n  'gray68': 'rgb(173, 173, 173)',\n  'gray69': 'rgb(176, 176, 176)',\n  'gray7': 'rgb(18, 18, 18)',\n  'gray70': 'rgb(179, 179, 179)',\n  'gray71': 'rgb(181, 181, 181)',\n  'gray72': 'rgb(184, 184, 184)',\n  'gray73': 'rgb(186, 186, 186)',\n  'gray74': 'rgb(189, 189, 189)',\n  'gray75': 'rgb(191, 191, 191)',\n  'gray76': 'rgb(194, 194, 194)',\n  'gray77': 'rgb(196, 196, 196)',\n  'gray78': 'rgb(199, 199, 199)',\n  'gray79': 'rgb(201, 201, 201)',\n  'gray8': 'rgb(20, 20, 20)',\n  'gray80': 'rgb(204, 204, 204)',\n  'gray81': 'rgb(207, 207, 207)',\n  'gray82': 'rgb(209, 209, 209)',\n  'gray83': 'rgb(212, 212, 212)',\n  'gray84': 'rgb(214, 214, 214)',\n  'gray85': 'rgb(217, 217, 217)',\n  'gray86': 'rgb(219, 219, 219)',\n  'gray87': 'rgb(222, 222, 222)',\n  'gray88': 'rgb(224, 224, 224)',\n  'gray89': 'rgb(227, 227, 227)',\n  'gray9': 'rgb(23, 23, 23)',\n  'gray90': 'rgb(229, 229, 229)',\n  'gray91': 'rgb(232, 232, 232)',\n  'gray92': 'rgb(235, 235, 235)',\n  'gray93': 'rgb(237, 237, 237)',\n  'gray94': 'rgb(240, 240, 240)',\n  'gray95': 'rgb(242, 242, 242)',\n  'gray96': 'rgb(245, 245, 245)',\n  'gray97': 'rgb(247, 247, 247)',\n  'gray98': 'rgb(250, 250, 250)',\n  'gray99': 'rgb(252, 252, 252)',\n  'green': 'rgb(0, 255, 0)',\n  'green1': 'rgb(0, 255, 0)',\n  'green2': 'rgb(0, 238, 0)',\n  'green3': 'rgb(0, 205, 0)',\n  'green4': 'rgb(0, 139, 0)',\n  'greenyellow': 'rgb(173, 255, 47)',\n  'grey': 'rgb(190, 190, 190)',\n  'grey0': 'rgb(0, 0, 0)',\n  'grey1': 'rgb(3, 3, 3)',\n  'grey10': 'rgb(26, 26, 26)',\n  'grey100': 'rgb(255, 255, 255)',\n  'grey11': 'rgb(28, 28, 28)',\n  'grey12': 'rgb(31, 31, 31)',\n  'grey13': 'rgb(33, 33, 33)',\n  'grey14': 'rgb(36, 36, 36)',\n  'grey15': 'rgb(38, 38, 38)',\n  'grey16': 'rgb(41, 41, 41)',\n  'grey17': 'rgb(43, 43, 43)',\n  'grey18': 'rgb(46, 46, 46)',\n  'grey19': 'rgb(48, 48, 48)',\n  'grey2': 'rgb(5, 5, 5)',\n  'grey20': 'rgb(51, 51, 51)',\n  'grey21': 'rgb(54, 54, 54)',\n  'grey22': 'rgb(56, 56, 56)',\n  'grey23': 'rgb(59, 59, 59)',\n  'grey24': 'rgb(61, 61, 61)',\n  'grey25': 'rgb(64, 64, 64)',\n  'grey26': 'rgb(66, 66, 66)',\n  'grey27': 'rgb(69, 69, 69)',\n  'grey28': 'rgb(71, 71, 71)',\n  'grey29': 'rgb(74, 74, 74)',\n  'grey3': 'rgb(8, 8, 8)',\n  'grey30': 'rgb(77, 77, 77)',\n  'grey31': 'rgb(79, 79, 79)',\n  'grey32': 'rgb(82, 82, 82)',\n  'grey33': 'rgb(84, 84, 84)',\n  'grey34': 'rgb(87, 87, 87)',\n  'grey35': 'rgb(89, 89, 89)',\n  'grey36': 'rgb(92, 92, 92)',\n  'grey37': 'rgb(94, 94, 94)',\n  'grey38': 'rgb(97, 97, 97)',\n  'grey39': 'rgb(99, 99, 99)',\n  'grey4': 'rgb(10, 10, 10)',\n  'grey40': 'rgb(102, 102, 102)',\n  'grey41': 'rgb(105, 105, 105)',\n  'grey42': 'rgb(107, 107, 107)',\n  'grey43': 'rgb(110, 110, 110)',\n  'grey44': 'rgb(112, 112, 112)',\n  'grey45': 'rgb(115, 115, 115)',\n  'grey46': 'rgb(117, 117, 117)',\n  'grey47': 'rgb(120, 120, 120)',\n  'grey48': 'rgb(122, 122, 122)',\n  'grey49': 'rgb(125, 125, 125)',\n  'grey5': 'rgb(13, 13, 13)',\n  'grey50': 'rgb(127, 127, 127)',\n  'grey51': 'rgb(130, 130, 130)',\n  'grey52': 'rgb(133, 133, 133)',\n  'grey53': 'rgb(135, 135, 135)',\n  'grey54': 'rgb(138, 138, 138)',\n  'grey55': 'rgb(140, 140, 140)',\n  'grey56': 'rgb(143, 143, 143)',\n  'grey57': 'rgb(145, 145, 145)',\n  'grey58': 'rgb(148, 148, 148)',\n  'grey59': 'rgb(150, 150, 150)',\n  'grey6': 'rgb(15, 15, 15)',\n  'grey60': 'rgb(153, 153, 153)',\n  'grey61': 'rgb(156, 156, 156)',\n  'grey62': 'rgb(158, 158, 158)',\n  'grey63': 'rgb(161, 161, 161)',\n  'grey64': 'rgb(163, 163, 163)',\n  'grey65': 'rgb(166, 166, 166)',\n  'grey66': 'rgb(168, 168, 168)',\n  'grey67': 'rgb(171, 171, 171)',\n  'grey68': 'rgb(173, 173, 173)',\n  'grey69': 'rgb(176, 176, 176)',\n  'grey7': 'rgb(18, 18, 18)',\n  'grey70': 'rgb(179, 179, 179)',\n  'grey71': 'rgb(181, 181, 181)',\n  'grey72': 'rgb(184, 184, 184)',\n  'grey73': 'rgb(186, 186, 186)',\n  'grey74': 'rgb(189, 189, 189)',\n  'grey75': 'rgb(191, 191, 191)',\n  'grey76': 'rgb(194, 194, 194)',\n  'grey77': 'rgb(196, 196, 196)',\n  'grey78': 'rgb(199, 199, 199)',\n  'grey79': 'rgb(201, 201, 201)',\n  'grey8': 'rgb(20, 20, 20)',\n  'grey80': 'rgb(204, 204, 204)',\n  'grey81': 'rgb(207, 207, 207)',\n  'grey82': 'rgb(209, 209, 209)',\n  'grey83': 'rgb(212, 212, 212)',\n  'grey84': 'rgb(214, 214, 214)',\n  'grey85': 'rgb(217, 217, 217)',\n  'grey86': 'rgb(219, 219, 219)',\n  'grey87': 'rgb(222, 222, 222)',\n  'grey88': 'rgb(224, 224, 224)',\n  'grey89': 'rgb(227, 227, 227)',\n  'grey9': 'rgb(23, 23, 23)',\n  'grey90': 'rgb(229, 229, 229)',\n  'grey91': 'rgb(232, 232, 232)',\n  'grey92': 'rgb(235, 235, 235)',\n  'grey93': 'rgb(237, 237, 237)',\n  'grey94': 'rgb(240, 240, 240)',\n  'grey95': 'rgb(242, 242, 242)',\n  'grey96': 'rgb(245, 245, 245)',\n  'grey97': 'rgb(247, 247, 247)',\n  'grey98': 'rgb(250, 250, 250)',\n  'grey99': 'rgb(252, 252, 252)',\n  'honeydew': 'rgb(240, 255, 240)',\n  'honeydew1': 'rgb(240, 255, 240)',\n  'honeydew2': 'rgb(224, 238, 224)',\n  'honeydew3': 'rgb(193, 205, 193)',\n  'honeydew4': 'rgb(131, 139, 131)',\n  'hotpink': 'rgb(255, 105, 180)',\n  'hotpink1': 'rgb(255, 110, 180)',\n  'hotpink2': 'rgb(238, 106, 167)',\n  'hotpink3': 'rgb(205, 96, 144)',\n  'hotpink4': 'rgb(139, 58, 98)',\n  'indianred': 'rgb(205, 92, 92)',\n  'indianred1': 'rgb(255, 106, 106)',\n  'indianred2': 'rgb(238, 99, 99)',\n  'indianred3': 'rgb(205, 85, 85)',\n  'indianred4': 'rgb(139, 58, 58)',\n  'ivory': 'rgb(255, 255, 240)',\n  'ivory1': 'rgb(255, 255, 240)',\n  'ivory2': 'rgb(238, 238, 224)',\n  'ivory3': 'rgb(205, 205, 193)',\n  'ivory4': 'rgb(139, 139, 131)',\n  'khaki': 'rgb(240, 230, 140)',\n  'khaki1': 'rgb(255, 246, 143)',\n  'khaki2': 'rgb(238, 230, 133)',\n  'khaki3': 'rgb(205, 198, 115)',\n  'khaki4': 'rgb(139, 134, 78)',\n  'lavender': 'rgb(230, 230, 250)',\n  'lavenderblush': 'rgb(255, 240, 245)',\n  'lavenderblush1': 'rgb(255, 240, 245)',\n  'lavenderblush2': 'rgb(238, 224, 229)',\n  'lavenderblush3': 'rgb(205, 193, 197)',\n  'lavenderblush4': 'rgb(139, 131, 134)',\n  'lawngreen': 'rgb(124, 252, 0)',\n  'lemonchiffon': 'rgb(255, 250, 205)',\n  'lemonchiffon1': 'rgb(255, 250, 205)',\n  'lemonchiffon2': 'rgb(238, 233, 191)',\n  'lemonchiffon3': 'rgb(205, 201, 165)',\n  'lemonchiffon4': 'rgb(139, 137, 112)',\n  'lightblue': 'rgb(173, 216, 230)',\n  'lightblue1': 'rgb(191, 239, 255)',\n  'lightblue2': 'rgb(178, 223, 238)',\n  'lightblue3': 'rgb(154, 192, 205)',\n  'lightblue4': 'rgb(104, 131, 139)',\n  'lightcoral': 'rgb(240, 128, 128)',\n  'lightcyan': 'rgb(224, 255, 255)',\n  'lightcyan1': 'rgb(224, 255, 255)',\n  'lightcyan2': 'rgb(209, 238, 238)',\n  'lightcyan3': 'rgb(180, 205, 205)',\n  'lightcyan4': 'rgb(122, 139, 139)',\n  'lightgoldenrod': 'rgb(238, 221, 130)',\n  'lightgoldenrod1': 'rgb(255, 236, 139)',\n  'lightgoldenrod2': 'rgb(238, 220, 130)',\n  'lightgoldenrod3': 'rgb(205, 190, 112)',\n  'lightgoldenrod4': 'rgb(139, 129, 76)',\n  'lightgoldenrodyellow': 'rgb(250, 250, 210)',\n  'lightgray': 'rgb(211, 211, 211)',\n  'lightgreen': 'rgb(144, 238, 144)',\n  'lightgrey': 'rgb(211, 211, 211)',\n  'lightpink': 'rgb(255, 182, 193)',\n  'lightpink1': 'rgb(255, 174, 185)',\n  'lightpink2': 'rgb(238, 162, 173)',\n  'lightpink3': 'rgb(205, 140, 149)',\n  'lightpink4': 'rgb(139, 95, 101)',\n  'lightsalmon': 'rgb(255, 160, 122)',\n  'lightsalmon1': 'rgb(255, 160, 122)',\n  'lightsalmon2': 'rgb(238, 149, 114)',\n  'lightsalmon3': 'rgb(205, 129, 98)',\n  'lightsalmon4': 'rgb(139, 87, 66)',\n  'lightseagreen': 'rgb(32, 178, 170)',\n  'lightskyblue': 'rgb(135, 206, 250)',\n  'lightskyblue1': 'rgb(176, 226, 255)',\n  'lightskyblue2': 'rgb(164, 211, 238)',\n  'lightskyblue3': 'rgb(141, 182, 205)',\n  'lightskyblue4': 'rgb(96, 123, 139)',\n  'lightslateblue': 'rgb(132, 112, 255)',\n  'lightslategray': 'rgb(119, 136, 153)',\n  'lightslategrey': 'rgb(119, 136, 153)',\n  'lightsteelblue': 'rgb(176, 196, 222)',\n  'lightsteelblue1': 'rgb(202, 225, 255)',\n  'lightsteelblue2': 'rgb(188, 210, 238)',\n  'lightsteelblue3': 'rgb(162, 181, 205)',\n  'lightsteelblue4': 'rgb(110, 123, 139)',\n  'lightyellow': 'rgb(255, 255, 224)',\n  'lightyellow1': 'rgb(255, 255, 224)',\n  'lightyellow2': 'rgb(238, 238, 209)',\n  'lightyellow3': 'rgb(205, 205, 180)',\n  'lightyellow4': 'rgb(139, 139, 122)',\n  'limegreen': 'rgb(50, 205, 50)',\n  'linen': 'rgb(250, 240, 230)',\n  'magenta': 'rgb(255, 0, 255)',\n  'magenta1': 'rgb(255, 0, 255)',\n  'magenta2': 'rgb(238, 0, 238)',\n  'magenta3': 'rgb(205, 0, 205)',\n  'magenta4': 'rgb(139, 0, 139)',\n  'maroon': 'rgb(176, 48, 96)',\n  'maroon1': 'rgb(255, 52, 179)',\n  'maroon2': 'rgb(238, 48, 167)',\n  'maroon3': 'rgb(205, 41, 144)',\n  'maroon4': 'rgb(139, 28, 98)',\n  'mediumaquamarine': 'rgb(102, 205, 170)',\n  'mediumblue': 'rgb(0, 0, 205)',\n  'mediumorchid': 'rgb(186, 85, 211)',\n  'mediumorchid1': 'rgb(224, 102, 255)',\n  'mediumorchid2': 'rgb(209, 95, 238)',\n  'mediumorchid3': 'rgb(180, 82, 205)',\n  'mediumorchid4': 'rgb(122, 55, 139)',\n  'mediumpurple': 'rgb(147, 112, 219)',\n  'mediumpurple1': 'rgb(171, 130, 255)',\n  'mediumpurple2': 'rgb(159, 121, 238)',\n  'mediumpurple3': 'rgb(137, 104, 205)',\n  'mediumpurple4': 'rgb(93, 71, 139)',\n  'mediumseagreen': 'rgb(60, 179, 113)',\n  'mediumslateblue': 'rgb(123, 104, 238)',\n  'mediumspringgreen': 'rgb(0, 250, 154)',\n  'mediumturquoise': 'rgb(72, 209, 204)',\n  'mediumvioletred': 'rgb(199, 21, 133)',\n  'midnightblue': 'rgb(25, 25, 112)',\n  'mintcream': 'rgb(245, 255, 250)',\n  'mistyrose': 'rgb(255, 228, 225)',\n  'mistyrose1': 'rgb(255, 228, 225)',\n  'mistyrose2': 'rgb(238, 213, 210)',\n  'mistyrose3': 'rgb(205, 183, 181)',\n  'mistyrose4': 'rgb(139, 125, 123)',\n  'moccasin': 'rgb(255, 228, 181)',\n  'navajowhite': 'rgb(255, 222, 173)',\n  'navajowhite1': 'rgb(255, 222, 173)',\n  'navajowhite2': 'rgb(238, 207, 161)',\n  'navajowhite3': 'rgb(205, 179, 139)',\n  'navajowhite4': 'rgb(139, 121, 94)',\n  'navy': 'rgb(0, 0, 128)',\n  'navyblue': 'rgb(0, 0, 128)',\n  'oldlace': 'rgb(253, 245, 230)',\n  'olivedrab': 'rgb(107, 142, 35)',\n  'olivedrab1': 'rgb(192, 255, 62)',\n  'olivedrab2': 'rgb(179, 238, 58)',\n  'olivedrab3': 'rgb(154, 205, 50)',\n  'olivedrab4': 'rgb(105, 139, 34)',\n  'orange': 'rgb(255, 165, 0)',\n  'orange1': 'rgb(255, 165, 0)',\n  'orange2': 'rgb(238, 154, 0)',\n  'orange3': 'rgb(205, 133, 0)',\n  'orange4': 'rgb(139, 90, 0)',\n  'orangered': 'rgb(255, 69, 0)',\n  'orangered1': 'rgb(255, 69, 0)',\n  'orangered2': 'rgb(238, 64, 0)',\n  'orangered3': 'rgb(205, 55, 0)',\n  'orangered4': 'rgb(139, 37, 0)',\n  'orchid': 'rgb(218, 112, 214)',\n  'orchid1': 'rgb(255, 131, 250)',\n  'orchid2': 'rgb(238, 122, 233)',\n  'orchid3': 'rgb(205, 105, 201)',\n  'orchid4': 'rgb(139, 71, 137)',\n  'palegoldenrod': 'rgb(238, 232, 170)',\n  'palegreen': 'rgb(152, 251, 152)',\n  'palegreen1': 'rgb(154, 255, 154)',\n  'palegreen2': 'rgb(144, 238, 144)',\n  'palegreen3': 'rgb(124, 205, 124)',\n  'palegreen4': 'rgb(84, 139, 84)',\n  'paleturquoise': 'rgb(175, 238, 238)',\n  'paleturquoise1': 'rgb(187, 255, 255)',\n  'paleturquoise2': 'rgb(174, 238, 238)',\n  'paleturquoise3': 'rgb(150, 205, 205)',\n  'paleturquoise4': 'rgb(102, 139, 139)',\n  'palevioletred': 'rgb(219, 112, 147)',\n  'palevioletred1': 'rgb(255, 130, 171)',\n  'palevioletred2': 'rgb(238, 121, 159)',\n  'palevioletred3': 'rgb(205, 104, 137)',\n  'palevioletred4': 'rgb(139, 71, 93)',\n  'papayawhip': 'rgb(255, 239, 213)',\n  'peachpuff': 'rgb(255, 218, 185)',\n  'peachpuff1': 'rgb(255, 218, 185)',\n  'peachpuff2': 'rgb(238, 203, 173)',\n  'peachpuff3': 'rgb(205, 175, 149)',\n  'peachpuff4': 'rgb(139, 119, 101)',\n  'peru': 'rgb(205, 133, 63)',\n  'pink': 'rgb(255, 192, 203)',\n  'pink1': 'rgb(255, 181, 197)',\n  'pink2': 'rgb(238, 169, 184)',\n  'pink3': 'rgb(205, 145, 158)',\n  'pink4': 'rgb(139, 99, 108)',\n  'plum': 'rgb(221, 160, 221)',\n  'plum1': 'rgb(255, 187, 255)',\n  'plum2': 'rgb(238, 174, 238)',\n  'plum3': 'rgb(205, 150, 205)',\n  'plum4': 'rgb(139, 102, 139)',\n  'powderblue': 'rgb(176, 224, 230)',\n  'purple': 'rgb(160, 32, 240)',\n  'purple1': 'rgb(155, 48, 255)',\n  'purple2': 'rgb(145, 44, 238)',\n  'purple3': 'rgb(125, 38, 205)',\n  'purple4': 'rgb(85, 26, 139)',\n  'red': 'rgb(255, 0, 0)',\n  'red1': 'rgb(255, 0, 0)',\n  'red2': 'rgb(238, 0, 0)',\n  'red3': 'rgb(205, 0, 0)',\n  'red4': 'rgb(139, 0, 0)',\n  'rosybrown': 'rgb(188, 143, 143)',\n  'rosybrown1': 'rgb(255, 193, 193)',\n  'rosybrown2': 'rgb(238, 180, 180)',\n  'rosybrown3': 'rgb(205, 155, 155)',\n  'rosybrown4': 'rgb(139, 105, 105)',\n  'royalblue': 'rgb(65, 105, 225)',\n  'royalblue1': 'rgb(72, 118, 255)',\n  'royalblue2': 'rgb(67, 110, 238)',\n  'royalblue3': 'rgb(58, 95, 205)',\n  'royalblue4': 'rgb(39, 64, 139)',\n  'saddlebrown': 'rgb(139, 69, 19)',\n  'salmon': 'rgb(250, 128, 114)',\n  'salmon1': 'rgb(255, 140, 105)',\n  'salmon2': 'rgb(238, 130, 98)',\n  'salmon3': 'rgb(205, 112, 84)',\n  'salmon4': 'rgb(139, 76, 57)',\n  'sandybrown': 'rgb(244, 164, 96)',\n  'seagreen': 'rgb(46, 139, 87)',\n  'seagreen1': 'rgb(84, 255, 159)',\n  'seagreen2': 'rgb(78, 238, 148)',\n  'seagreen3': 'rgb(67, 205, 128)',\n  'seagreen4': 'rgb(46, 139, 87)',\n  'seashell': 'rgb(255, 245, 238)',\n  'seashell1': 'rgb(255, 245, 238)',\n  'seashell2': 'rgb(238, 229, 222)',\n  'seashell3': 'rgb(205, 197, 191)',\n  'seashell4': 'rgb(139, 134, 130)',\n  'sienna': 'rgb(160, 82, 45)',\n  'sienna1': 'rgb(255, 130, 71)',\n  'sienna2': 'rgb(238, 121, 66)',\n  'sienna3': 'rgb(205, 104, 57)',\n  'sienna4': 'rgb(139, 71, 38)',\n  'skyblue': 'rgb(135, 206, 235)',\n  'skyblue1': 'rgb(135, 206, 255)',\n  'skyblue2': 'rgb(126, 192, 238)',\n  'skyblue3': 'rgb(108, 166, 205)',\n  'skyblue4': 'rgb(74, 112, 139)',\n  'slateblue': 'rgb(106, 90, 205)',\n  'slateblue1': 'rgb(131, 111, 255)',\n  'slateblue2': 'rgb(122, 103, 238)',\n  'slateblue3': 'rgb(105, 89, 205)',\n  'slateblue4': 'rgb(71, 60, 139)',\n  'slategray': 'rgb(112, 128, 144)',\n  'slategray1': 'rgb(198, 226, 255)',\n  'slategray2': 'rgb(185, 211, 238)',\n  'slategray3': 'rgb(159, 182, 205)',\n  'slategray4': 'rgb(108, 123, 139)',\n  'slategrey': 'rgb(112, 128, 144)',\n  'snow': 'rgb(255, 250, 250)',\n  'snow1': 'rgb(255, 250, 250)',\n  'snow2': 'rgb(238, 233, 233)',\n  'snow3': 'rgb(205, 201, 201)',\n  'snow4': 'rgb(139, 137, 137)',\n  'springgreen': 'rgb(0, 255, 127)',\n  'springgreen1': 'rgb(0, 255, 127)',\n  'springgreen2': 'rgb(0, 238, 118)',\n  'springgreen3': 'rgb(0, 205, 102)',\n  'springgreen4': 'rgb(0, 139, 69)',\n  'steelblue': 'rgb(70, 130, 180)',\n  'steelblue1': 'rgb(99, 184, 255)',\n  'steelblue2': 'rgb(92, 172, 238)',\n  'steelblue3': 'rgb(79, 148, 205)',\n  'steelblue4': 'rgb(54, 100, 139)',\n  'tan': 'rgb(210, 180, 140)',\n  'tan1': 'rgb(255, 165, 79)',\n  'tan2': 'rgb(238, 154, 73)',\n  'tan3': 'rgb(205, 133, 63)',\n  'tan4': 'rgb(139, 90, 43)',\n  'thistle': 'rgb(216, 191, 216)',\n  'thistle1': 'rgb(255, 225, 255)',\n  'thistle2': 'rgb(238, 210, 238)',\n  'thistle3': 'rgb(205, 181, 205)',\n  'thistle4': 'rgb(139, 123, 139)',\n  'tomato': 'rgb(255, 99, 71)',\n  'tomato1': 'rgb(255, 99, 71)',\n  'tomato2': 'rgb(238, 92, 66)',\n  'tomato3': 'rgb(205, 79, 57)',\n  'tomato4': 'rgb(139, 54, 38)',\n  'turquoise': 'rgb(64, 224, 208)',\n  'turquoise1': 'rgb(0, 245, 255)',\n  'turquoise2': 'rgb(0, 229, 238)',\n  'turquoise3': 'rgb(0, 197, 205)',\n  'turquoise4': 'rgb(0, 134, 139)',\n  'violet': 'rgb(238, 130, 238)',\n  'violetred': 'rgb(208, 32, 144)',\n  'violetred1': 'rgb(255, 62, 150)',\n  'violetred2': 'rgb(238, 58, 140)',\n  'violetred3': 'rgb(205, 50, 120)',\n  'violetred4': 'rgb(139, 34, 82)',\n  'wheat': 'rgb(245, 222, 179)',\n  'wheat1': 'rgb(255, 231, 186)',\n  'wheat2': 'rgb(238, 216, 174)',\n  'wheat3': 'rgb(205, 186, 150)',\n  'wheat4': 'rgb(139, 126, 102)',\n  'white': 'rgb(255, 255, 255)',\n  'whitesmoke': 'rgb(245, 245, 245)',\n  'yellow': 'rgb(255, 255, 0)',\n  'yellow1': 'rgb(255, 255, 0)',\n  'yellow2': 'rgb(238, 238, 0)',\n  'yellow3': 'rgb(205, 205, 0)',\n  'yellow4': 'rgb(139, 139, 0)',\n  'yellowgreen': 'rgb(154, 205, 50)',\n};\n// SOURCE FILE: libdot/js/lib_f.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Grab bag of utility functions.\n */\nlib.f = {};\n\n/**\n * Replace variable references in a string.\n *\n * Variables are of the form %FUNCTION(VARNAME).  FUNCTION is an optional\n * escape function to apply to the value.\n *\n * For example\n *   lib.f.replaceVars(\"%(greeting), %encodeURIComponent(name)\",\n *                     { greeting: \"Hello\",\n *                       name: \"Google+\" });\n *\n * Will result in \"Hello, Google%2B\".\n *\n * @param {string} str String containing variable references.\n * @param {!Object<string, string>} vars Variables to substitute in.\n * @return {string} String with references substituted.\n */\nlib.f.replaceVars = function(str, vars) {\n  return str.replace(/%([a-z]*)\\(([^)]+)\\)/gi, function(match, fn, varname) {\n      if (typeof vars[varname] == 'undefined') {\n        throw new Error(`Unknown variable: ${varname}`);\n      }\n\n      let rv = vars[varname];\n\n      if (fn in lib.f.replaceVars.functions) {\n        rv = lib.f.replaceVars.functions[fn](rv);\n      } else if (fn) {\n        throw new Error(`Unknown escape function: ${fn}`);\n      }\n\n      return rv;\n    });\n};\n\n/**\n * Functions that can be used with replaceVars.\n *\n * Clients can add to this list to extend lib.f.replaceVars().\n */\nlib.f.replaceVars.functions = {\n  encodeURI: encodeURI,\n  encodeURIComponent: encodeURIComponent,\n  escapeHTML: function(str) {\n    const map = {\n      '<': '&lt;',\n      '>': '&gt;',\n      '&': '&amp;',\n      '\"': '&quot;',\n      \"'\": '&#39;',\n    };\n\n    return str.replace(/[<>&\"']/g, (m) => map[m]);\n  },\n};\n\n/**\n * Convert a relative path to a fully qualified URI.\n *\n * @param {string} path Relative path\n * @return {string} Fully qualified URI.\n */\nlib.f.getURL = function(path) {\n  if (lib.f.getURL.chromeSupported()) {\n    return chrome.runtime.getURL(path);\n  }\n\n  // Use current location origin if path is absolute.\n  if (path.startsWith('/')) {\n    return window.location.origin + path;\n  }\n\n  return path;\n};\n\n/**\n * Determine whether the runtime is Chrome (or equiv).\n *\n * @return {boolean} True if chrome.runtime.getURL is supported.\n */\nlib.f.getURL.chromeSupported = function() {\n  return !!(window.chrome && chrome.runtime && chrome.runtime.getURL);\n};\n\n/**\n * Clamp a given integer to a specified range.\n *\n * @param {number} v The value to be clamped.\n * @param {number} min The minimum acceptable value.\n * @param {number} max The maximum acceptable value.\n * @return {number} The clamped value.\n */\nlib.f.clamp = function(v, min, max) {\n  if (v < min) {\n    return min;\n  }\n  if (v > max) {\n    return max;\n  }\n  return v;\n};\n\n/**\n * Left pad a number to a given length with leading zeros.\n *\n * @param {string|number} number The number to pad.\n * @param {number} length The desired length.\n * @return {string} The padded number as a string.\n */\nlib.f.zpad = function(number, length) {\n  return String(number).padStart(length, '0');\n};\n\n/**\n * Return the current call stack after skipping a given number of frames.\n *\n * This method is intended to be used for debugging only.  It returns an\n * Object instead of an Array, because the console stringifies arrays by\n * default and that's not what we want.\n *\n * A typical call might look like...\n *\n *    console.log('Something wicked this way came', lib.f.getStack());\n *    //                         Notice the comma ^\n *\n * This would print the message to the js console, followed by an object\n * which can be clicked to reveal the stack.\n *\n * @param {number=} ignoreFrames How many inner stack frames to ignore.  The\n *     innermost 'getStack' call is always ignored.\n * @param {number=} count How many frames to return.\n * @return {!Array<string>} The stack frames.\n */\nlib.f.getStack = function(ignoreFrames = 0, count = undefined) {\n  const stackArray = (new Error()).stack.split('\\n');\n\n  // Always ignore the Error() object and getStack call itself.\n  // [0] = 'Error'\n  // [1] = '    at Object.lib.f.getStack (file:///.../lib_f.js:267:23)'\n  ignoreFrames += 2;\n\n  const max = stackArray.length - ignoreFrames;\n  if (count === undefined) {\n    count = max;\n  } else {\n    count = lib.f.clamp(count, 0, max);\n  }\n\n  // Remove the leading spaces and \"at\" from each line:\n  // '    at window.onload (file:///.../lib_test.js:11:18)'\n  const stackObject = new Array();\n  for (let i = ignoreFrames; i < count + ignoreFrames; ++i) {\n    stackObject.push(stackArray[i].replace(/^\\s*at\\s+/, ''));\n  }\n\n  return stackObject;\n};\n\n/**\n * Divides the two numbers and floors the results, unless the remainder is less\n * than an incredibly small value, in which case it returns the ceiling.\n * This is useful when the number are truncated approximations of longer\n * values, and so doing division with these numbers yields a result incredibly\n * close to a whole number.\n *\n * @param {number} numerator\n * @param {number} denominator\n * @return {number}\n */\nlib.f.smartFloorDivide = function(numerator, denominator) {\n  const val = numerator / denominator;\n  const ceiling = Math.ceil(val);\n  if (ceiling - val < .0001) {\n    return ceiling;\n  } else {\n    return Math.floor(val);\n  }\n};\n\n/**\n * Get a random integer in a range (inclusive).\n *\n * @param {number} min The lowest integer in the range.\n * @param {number} max The highest integer in the range.\n * @return {number} A random number between min & max.\n */\nlib.f.randomInt = function(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n/**\n * Get the current OS.\n *\n * @return {!Promise<string>} A promise that resolves to a constant in\n *     runtime.PlatformOs.\n */\nlib.f.getOs = function() {\n  // Try the brower extensions API.\n  if (window.browser && browser.runtime && browser.runtime.getPlatformInfo) {\n    return browser.runtime.getPlatformInfo().then((info) => info.os);\n  }\n\n  // Use the native Chrome API if available.\n  if (window.chrome && chrome.runtime && chrome.runtime.getPlatformInfo) {\n    return new Promise((resolve, reject) => {\n      return chrome.runtime.getPlatformInfo((info) => resolve(info.os));\n    });\n  }\n\n  // Fallback logic.  Capture the major OS's.  The rest should support the\n  // browser API above.\n  if (window.navigator && navigator.userAgent) {\n    const ua = navigator.userAgent;\n    if (ua.includes('Mac OS X')) {\n      return Promise.resolve('mac');\n    } else if (ua.includes('CrOS')) {\n      return Promise.resolve('cros');\n    } else if (ua.includes('Linux')) {\n      return Promise.resolve('linux');\n    } else if (ua.includes('Android')) {\n      return Promise.resolve('android');\n    } else if (ua.includes('Windows')) {\n      return Promise.resolve('windows');\n    }\n  }\n\n  // Probe node environment.\n  if (typeof process != 'undefined') {\n    return Promise.resolve('node');\n  }\n\n  // Still here?  No idea.\n  return Promise.reject(null);\n};\n\n/**\n * Get the current Chrome milestone version.\n *\n * @return {number} The milestone number if we're running on Chrome, else NaN.\n */\nlib.f.getChromeMilestone = function() {\n  if (window.navigator && navigator.userAgent) {\n    const ary = navigator.userAgent.match(/\\sChrome\\/(\\d+)/);\n    if (ary) {\n      return parseInt(ary[1], 10);\n    }\n  }\n\n  // Returning NaN will make all number comparisons fail.\n  return NaN;\n};\n\n/**\n * Return the lastError string in the browser.\n *\n * This object might live in different locations, and it isn't always defined\n * (if there hasn't been a \"last error\").  Wrap all that ugliness here.\n *\n * @param {?string=} defaultMsg The default message if no error is found.\n * @return {?string} The last error message from the browser.\n */\nlib.f.lastError = function(defaultMsg = null) {\n  let lastError;\n  if (window.browser && browser.runtime) {\n    lastError = browser.runtime.lastError;\n  } else if (window.chrome && chrome.runtime) {\n    lastError = chrome.runtime.lastError;\n  }\n\n  if (lastError && lastError.message) {\n    return lastError.message;\n  } else {\n    return defaultMsg;\n  }\n};\n\n/**\n * Just like window.open, but enforce noopener.\n *\n * If we're not careful, the website we open will have access to use via its\n * window.opener field.  Newer browser support putting 'noopener' into the\n * features argument, but there are many which still don't.  So hack it.\n *\n * @param {string=} url The URL to point the new window to.\n * @param {string=} name The name of the new window.\n * @param {string=} features The window features to enable.\n * @return {?Window} The newly opened window.\n */\nlib.f.openWindow = function(url, name = undefined, features = undefined) {\n  // We create the window first without the URL loaded.\n  const win = window.open(undefined, name, features);\n\n  // If the system is blocking window.open, don't crash.\n  if (win !== null) {\n    // Clear the opener setting before redirecting.\n    win.opener = null;\n\n    // Now it's safe to redirect.  Skip this step if the url is not set so we\n    // mimic the window.open behavior more precisely.\n    if (url) {\n      win.location = url;\n    }\n  }\n\n  return win;\n};\n// SOURCE FILE: libdot/js/lib_i18n.js\n// Copyright 2018 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Wrappers over the browser i18n helpers.\n *\n * Arguably some of these functions should be l10n, but oh well.\n */\nlib.i18n = {};\n\n/**\n * Convenience shortcut to the browser i18n object.\n */\nlib.i18n.browser_ =\n    window.browser && browser.i18n ? browser.i18n :\n    window.chrome && chrome.i18n ? chrome.i18n :\n    null;\n\n/**\n * Return whether the browser supports i18n natively.\n *\n * @return {boolean} True if browser.i18n or chrome.i18n exists.\n */\nlib.i18n.browserSupported = function() {\n  return lib.i18n.browser_ !== null;\n};\n\n/**\n * Get the list of accepted UI languages.\n *\n * https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/i18n/getAcceptLanguages\n *\n * @return {!Promise<!Array<string>>} Promise resolving to the list of locale\n *     names.\n */\nlib.i18n.getAcceptLanguages = function() {\n  if (lib.i18n.browser_) {\n    return new Promise((resolve) => {\n      lib.i18n.browser_.getAcceptLanguages((languages) => {\n        // Chrome might be in a bad state and not return any languages.  If we\n        // pass this up to the caller who isn't expecting undefined, they'll\n        // probably crash.  Fallback to the default language that we expect all\n        // translations to have.\n        if (!languages) {\n          // Clear the error to avoid throwing an unchecked error.\n          console.error('getAcceptLanguages failed', lib.f.lastError());\n          languages = ['en'];\n        }\n\n        resolve(languages);\n      });\n    });\n  } else {\n    const languages = navigator.languages || [navigator.language];\n    return Promise.resolve(languages);\n  }\n};\n\n/**\n * Get a message by name, optionally replacing arguments too.\n *\n * https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/i18n/getMessage\n *\n * @param {string} msgname The id for this localized string.\n * @param {?Array<string>=} substitutions Any replacements in the string.\n * @param {string=} fallback Translation if the message wasn't found.\n * @return {string} The translated message.\n */\nlib.i18n.getMessage = function(msgname, substitutions = [], fallback = '') {\n  // First let the native browser APIs handle everything for us.\n  if (lib.i18n.browser_) {\n    const message = lib.i18n.browser_.getMessage(msgname, substitutions);\n    if (message) {\n      return message;\n    }\n  }\n\n  // Do our best to get something reasonable.\n  return lib.i18n.replaceReferences(fallback, substitutions);\n};\n\n/**\n * Replace $1...$n references with the elements of the args array.\n *\n * This largely behaves like Chrome's getMessage helper.  The $# references are\n * always replaced/removed regardless of the specified substitutions.\n *\n * @param {string} msg String containing the message and argument references.\n * @param {(?Array<string>|string)=} args Array containing the argument values,\n *     or single value.\n * @return {string} The message with replacements expanded.\n */\nlib.i18n.replaceReferences = function(msg, args = []) {\n  // The Chrome API allows a single substitution as a string rather than array.\n  if (args === null) {\n    args = [];\n  }\n  if (!(args instanceof Array)) {\n    args = [args];\n  }\n\n  return msg.replace(/\\$(\\d+)/g, (m, index) => {\n    return index <= args.length ? args[index - 1] : '';\n  });\n};\n\n/**\n * This function aims to copy the chrome.i18n mapping from language to which\n * _locales/<locale>/messages.json translation is used.  E.g. en-AU maps to\n * en_GB.\n * https://cs.chromium.org/chromium/src/ui/base/l10n/l10n_util.cc?type=cs&q=CheckAndResolveLocale\n *\n * @param {string} language language from navigator.languages.\n * @return {!Array<string>} priority list of locales for translation.\n */\nlib.i18n.resolveLanguage = function(language) {\n  const [lang, region] = language.toLowerCase().split(/[-_]/, 2);\n\n  // Map es-RR other than es-ES to es-419 (Chrome's Latin American\n  // Spanish locale).\n  if (lang == 'es') {\n    if ([undefined, 'es'].includes(region)) {\n      return ['es'];\n    }\n    return ['es_419'];\n  }\n\n  // Map pt-RR other than pt-BR to pt-PT. Note that \"pt\" by itself maps to\n  // pt-BR (logic below).\n  if (lang == 'pt') {\n    if ([undefined, 'br'].includes(region)) {\n      return ['pt_BR'];\n    }\n    return ['pt_PT'];\n  }\n\n  // Map zh-HK and zh-MO to zh-TW. Otherwise, zh-FOO is mapped to zh-CN.\n  if (lang == 'zh') {\n    if (['tw', 'hk', 'mo'].includes(region)) {\n      return ['zh_TW'];\n    }\n    return ['zh_CN'];\n  }\n\n  // Map Liberian and Filipino English to US English, and everything else to\n  // British English.\n  if (lang == 'en') {\n    if ([undefined, 'us', 'lr', 'ph'].includes(region)) {\n      return ['en'];\n    }\n\n    // Our GB translation is not complete, so need to add 'en' as a fallback.\n    return ['en_GB', 'en'];\n  }\n\n  if (region) {\n    return [language.replace(/-/g, '_'), lang];\n  } else {\n    return [lang];\n  }\n};\n// SOURCE FILE: libdot/js/lib_message_manager.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * MessageManager class handles internationalized strings.\n *\n * Note: chrome.i18n isn't sufficient because...\n *     1. There's a bug in chrome that makes it unavailable in iframes:\n *        https://crbug.com/130200\n *     2. The client code may not be packaged in a Chrome extension.\n *     3. The client code may be part of a library packaged in a third-party\n *        Chrome extension.\n *\n * @param {!Array<string>} languages List of languages to load, in the order\n *     they are preferred.  The first language found will be used.  'en' is\n *     automatically added as the last language if it is not already present.\n * @param {boolean=} useCrlf If true, '\\n' in messages are substituted for\n *     '\\r\\n'.  This fixes the translation process which discards '\\r'\n *     characters.\n * @constructor\n */\nlib.MessageManager = function(languages, useCrlf = false) {\n  /**\n   * @private {!Array<string>}\n   * @const\n   */\n  this.languages_ = [];\n  let stop = false;\n  for (let i = 0; i < languages.length && !stop; i++) {\n    for (const lang of lib.i18n.resolveLanguage(languages[i])) {\n      // There is no point having any language with lower priorty than 'en'\n      // since 'en' always contains all messages.\n      if (lang == 'en') {\n        stop = true;\n        break;\n      }\n      if (!this.languages_.includes(lang)) {\n        this.languages_.push(lang);\n      }\n    }\n  }\n  // Always have 'en' as last fallback.\n  this.languages_.push('en');\n\n  this.useCrlf = useCrlf;\n\n  /**\n   * @private {!Object<string, string>}\n   * @const\n   */\n  this.messages_ = {};\n};\n\n/**\n * @typedef {!Object<string, {\n *     message: string,\n *     description: (string|undefined),\n *     placeholders: ({content: string, example: string}|undefined),\n * }>}\n */\nlib.MessageManager.Messages;\n\n/**\n * Add message definitions to the message manager.\n *\n * This takes an object of the same format of a Chrome messages.json file.  See\n * <https://developer.chrome.com/extensions/i18n-messages>.\n *\n * @param {!lib.MessageManager.Messages} defs The message to add to the\n *     database.\n */\nlib.MessageManager.prototype.addMessages = function(defs) {\n  for (const key in defs) {\n    const def = defs[key];\n\n    if (!def.placeholders) {\n      // Upper case key into this.messages_ since our translated\n      // bundles are lower case, but we request msg as upper.\n      this.messages_[key.toUpperCase()] = def.message;\n    } else {\n      // Replace \"$NAME$\" placeholders with \"$1\", etc.\n      this.messages_[key.toUpperCase()] =\n          def.message.replace(/\\$([a-z][^\\s$]+)\\$/ig, function(m, name) {\n            return defs[key].placeholders[name.toUpperCase()].content;\n          });\n    }\n  }\n};\n\n/**\n * Load language message bundles.  Loads in reverse order so that higher\n * priority languages overwrite lower priority.\n *\n * @param {string} pattern A url pattern containing a \"$1\" where the locale\n *     name should go.\n */\nlib.MessageManager.prototype.findAndLoadMessages = async function(pattern) {\n  if (lib.i18n.browserSupported()) {\n    return;\n  }\n\n  for (let i = this.languages_.length - 1; i >= 0; i--) {\n    const lang = this.languages_[i];\n    const url = lib.i18n.replaceReferences(pattern, lang);\n    try {\n      await this.loadMessages(url);\n    } catch (e) {\n      console.warn(\n          `Error fetching ${lang} messages at ${url}`, e,\n          'Trying all languages in reverse order:', this.languages_);\n    }\n  }\n};\n\n/**\n * Load messages from a messages.json file.\n *\n * @param {string} url The URL to load the messages from.\n * @return {!Promise<void>}\n */\nlib.MessageManager.prototype.loadMessages = function(url) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n      try {\n        this.addMessages(/** @type {!lib.MessageManager.Messages} */ (\n            JSON.parse(xhr.responseText)));\n        resolve();\n      } catch (e) {\n        // Error parsing JSON.\n        reject(e);\n      }\n    };\n    xhr.onerror = () => reject(xhr);\n\n    xhr.open('GET', url);\n    xhr.send();\n  });\n};\n\n/**\n * Get a message by name, optionally replacing arguments too.\n *\n * @param {string} msgname String containing the name of the message to get.\n * @param {!Array<string>=} args Optional array containing the argument values.\n * @param {string=} fallback Optional value to return if the msgname is not\n *     found.  Returns the message name by default.\n * @return {string} The formatted translation.\n */\nlib.MessageManager.prototype.get = function(msgname, args, fallback) {\n  // First try the integrated browser getMessage.  We prefer that over any\n  // registered messages as only the browser supports translations.\n  let message = lib.i18n.getMessage(msgname, args);\n  if (!message) {\n    // Look it up in the registered cache next.\n    message = this.messages_[msgname];\n    if (!message) {\n      console.warn('Unknown message: ' + msgname);\n      message = fallback === undefined ? msgname : fallback;\n      // Register the message with the default to avoid multiple warnings.\n      this.messages_[msgname] = message;\n    }\n    message = lib.i18n.replaceReferences(message, args);\n  }\n  if (this.useCrlf) {\n    message = message.replace(/\\n/g, '\\r\\n');\n  }\n  return message;\n};\n\n/**\n * Process all of the \"i18n\" html attributes found in a given element.\n *\n * The real work happens in processI18nAttribute.\n *\n * @param {!HTMLDocument|!Element} node The element whose nodes will be\n *     translated.\n */\nlib.MessageManager.prototype.processI18nAttributes = function(node) {\n  const nodes = node.querySelectorAll('[i18n]');\n\n  for (let i = 0; i < nodes.length; i++) {\n    this.processI18nAttribute(nodes[i]);\n  }\n};\n\n/**\n * Process the \"i18n\" attribute in the specified node.\n *\n * The i18n attribute should contain a JSON object.  The keys are taken to\n * be attribute names, and the values are message names.\n *\n * If the JSON object has a \"_\" (underscore) key, its value is used as the\n * textContent of the element.\n *\n * Message names can refer to other attributes on the same element with by\n * prefixing with a dollar sign.  For example...\n *\n *   <button id='send-button'\n *           i18n='{\"aria-label\": \"$id\", \"_\": \"SEND_BUTTON_LABEL\"}'\n *           ></button>\n *\n * The aria-label message name will be computed as \"SEND_BUTTON_ARIA_LABEL\".\n * Notice that the \"id\" attribute was appended to the target attribute, and\n * the result converted to UPPER_AND_UNDER style.\n *\n * @param {!Element} node The element to translate.\n */\nlib.MessageManager.prototype.processI18nAttribute = function(node) {\n  // Convert the \"lower-and-dashes\" attribute names into\n  // \"UPPER_AND_UNDER\" style.\n  const thunk = (str) => str.replace(/-/g, '_').toUpperCase();\n\n  let i18n = node.getAttribute('i18n');\n  if (!i18n) {\n    return;\n  }\n\n  try {\n    i18n = JSON.parse(i18n);\n  } catch (ex) {\n    console.error('Can\\'t parse ' + node.tagName + '#' + node.id + ': ' + i18n);\n    throw ex;\n  }\n\n  // Load all the messages specified in the i18n attributes.\n  for (let key in i18n) {\n    // The node attribute we'll be setting.\n    const attr = key;\n\n    let msgname = i18n[key];\n    // For \"=foo\", re-use the referenced message name.\n    if (msgname.startsWith('=')) {\n      key = msgname.substr(1);\n      msgname = i18n[key];\n    }\n\n    // For \"$foo\", calculate the message name.\n    if (msgname.startsWith('$')) {\n      msgname = thunk(node.getAttribute(msgname.substr(1)) + '_' + key);\n    }\n\n    // Finally load the message.\n    const msg = this.get(msgname);\n    if (attr == '_') {\n      node.textContent = msg;\n    } else {\n      node.setAttribute(attr, msg);\n    }\n  }\n};\n// SOURCE FILE: libdot/js/lib_preference_manager.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Constructor for lib.PreferenceManager objects.\n *\n * These objects deal with persisting changes to stable storage and notifying\n * consumers when preferences change.\n *\n * It is intended that the backing store could be something other than HTML5\n * storage, but there aren't any use cases at the moment.  In the future there\n * may be a chrome api to store sync-able name/value pairs, and we'd want\n * that.\n *\n * @param {!lib.Storage} storage The storage object to use as a backing\n *     store.\n * @param {string=} prefix The optional prefix to be used for all preference\n *     names.  The '/' character should be used to separate levels of hierarchy,\n *     if you're going to have that kind of thing.  If provided, the prefix\n *     should start with a '/'.  If not provided, it defaults to '/'.\n * @constructor\n */\nlib.PreferenceManager = function(storage, prefix = '/') {\n  this.storage = storage;\n  this.storageObserver_ = this.onStorageChange_.bind(this);\n\n  this.isActive_ = false;\n  this.activate();\n\n  this.trace = false;\n\n  if (!prefix.endsWith('/')) {\n    prefix += '/';\n  }\n\n  this.prefix = prefix;\n\n  // Internal state for when we're doing a bulk import from JSON and we want\n  // to elide redundant storage writes (for quota reasons).\n  this.isImportingJson_ = false;\n\n  /** @type {!Object<string, !lib.PreferenceManager.Record>} */\n  this.prefRecords_ = {};\n  this.globalObservers_ = [];\n\n  this.childFactories_ = {};\n\n  // Map of list-name to {map of child pref managers}\n  // As in...\n  //\n  //  this.childLists_ = {\n  //    'profile-ids': {\n  //      'one': PreferenceManager,\n  //      'two': PreferenceManager,\n  //      ...\n  //    },\n  //\n  //    'frob-ids': {\n  //      ...\n  //    }\n  //  }\n  this.childLists_ = {};\n};\n\n/**\n * Used internally to indicate that the current value of the preference should\n * be taken from the default value defined with the preference.\n *\n * Equality tests against this value MUST use '===' or '!==' to be accurate.\n *\n * @type {symbol}\n */\nlib.PreferenceManager.prototype.DEFAULT_VALUE = Symbol('DEFAULT_VALUE');\n\n/**\n * An individual preference.\n *\n * These objects are managed by the PreferenceManager, you shouldn't need to\n * handle them directly.\n *\n * @param {string} name The name of the new preference (used for indexing).\n * @param {*} defaultValue The default value for this preference.\n * @constructor\n */\nlib.PreferenceManager.Record = function(name, defaultValue) {\n  this.name = name;\n  this.defaultValue = defaultValue;\n  this.currentValue = this.DEFAULT_VALUE;\n  this.observers = [];\n};\n\n/**\n * A local copy of the DEFAULT_VALUE constant to make it less verbose.\n *\n * @type {symbol}\n */\nlib.PreferenceManager.Record.prototype.DEFAULT_VALUE =\n    lib.PreferenceManager.prototype.DEFAULT_VALUE;\n\n/**\n * Register a callback to be invoked when this preference changes.\n *\n * @param {function(string, string, !lib.PreferenceManager)} observer The\n *     function to invoke.  It will receive the new value, the name of the\n *     preference, and a reference to the PreferenceManager as parameters.\n */\nlib.PreferenceManager.Record.prototype.addObserver = function(observer) {\n  this.observers.push(observer);\n};\n\n/**\n * Unregister an observer callback.\n *\n * @param {function(string, string, !lib.PreferenceManager)} observer A\n *     previously registered callback.\n */\nlib.PreferenceManager.Record.prototype.removeObserver = function(observer) {\n  const i = this.observers.indexOf(observer);\n  if (i >= 0) {\n    this.observers.splice(i, 1);\n  }\n};\n\n/**\n * Fetch the value of this preference.\n *\n * @return {*} The value for this preference.\n */\nlib.PreferenceManager.Record.prototype.get = function() {\n  if (this.currentValue === this.DEFAULT_VALUE) {\n    if (/^(string|number)$/.test(typeof this.defaultValue)) {\n      return this.defaultValue;\n    }\n\n    if (typeof this.defaultValue == 'object') {\n      // We want to return a COPY of the default value so that users can\n      // modify the array or object without changing the default value.\n      return JSON.parse(JSON.stringify(this.defaultValue));\n    }\n\n    return this.defaultValue;\n  }\n\n  return this.currentValue;\n};\n\n/**\n * Stop this preference manager from tracking storage changes.\n *\n * Call this if you're going to swap out one preference manager for another so\n * that you don't get notified about irrelevant changes.\n */\nlib.PreferenceManager.prototype.deactivate = function() {\n  if (!this.isActive_) {\n    throw new Error('Not activated');\n  }\n\n  this.isActive_ = false;\n  this.storage.removeObserver(this.storageObserver_);\n};\n\n/**\n * Start tracking storage changes.\n *\n * If you previously deactivated this preference manager, you can reactivate it\n * with this method.  You don't need to call this at initialization time, as\n * it's automatically called as part of the constructor.\n */\nlib.PreferenceManager.prototype.activate = function() {\n  if (this.isActive_) {\n    throw new Error('Already activated');\n  }\n\n  this.isActive_ = true;\n  this.storage.addObserver(this.storageObserver_);\n};\n\n/**\n * Read the backing storage for these preferences.\n *\n * You should do this once at initialization time to prime the local cache\n * of preference values.  The preference manager will monitor the backing\n * storage for changes, so you should not need to call this more than once.\n *\n * This function recursively reads storage for all child preference managers as\n * well.\n *\n * This function is asynchronous, if you need to read preference values, you\n * *must* wait for the callback.\n *\n * @param {function()=} callback Optional function to invoke when the read\n *     has completed.\n */\nlib.PreferenceManager.prototype.readStorage = function(callback = undefined) {\n  let pendingChildren = 0;\n\n  function onChildComplete() {\n    if (--pendingChildren == 0 && callback) {\n      callback();\n    }\n  }\n\n  const keys = Object.keys(this.prefRecords_).map((el) => this.prefix + el);\n\n  if (this.trace) {\n    console.log('Preferences read: ' + this.prefix);\n  }\n\n  this.storage.getItems(keys).then((items) => {\n      const prefixLength = this.prefix.length;\n\n      for (const key in items) {\n        const value = items[key];\n        const name = key.substr(prefixLength);\n        const needSync = (\n            name in this.childLists_ &&\n            (JSON.stringify(value) !=\n             JSON.stringify(this.prefRecords_[name].currentValue)));\n\n        this.prefRecords_[name].currentValue = value;\n\n        if (needSync) {\n          pendingChildren++;\n          this.syncChildList(name, onChildComplete);\n        }\n      }\n\n      if (pendingChildren == 0 && callback) {\n        setTimeout(callback, 100);\n      }\n    });\n};\n\n/**\n * Define a preference.\n *\n * This registers a name, default value, and onChange handler for a preference.\n *\n * @param {string} name The name of the preference.  This will be prefixed by\n *     the prefix of this PreferenceManager before written to local storage.\n * @param {string|number|boolean|!Object|!Array|null} value The default value of\n *     this preference.  Anything that can be represented in JSON is a valid\n *     default value.\n * @param {function(*, string, !lib.PreferenceManager)=} onChange A\n *     function to invoke when the preference changes.  It will receive the new\n *     value, the name of the preference, and a reference to the\n *     PreferenceManager as parameters.\n */\nlib.PreferenceManager.prototype.definePreference = function(\n    name, value, onChange = undefined) {\n\n  let record = this.prefRecords_[name];\n  if (record) {\n    this.changeDefault(name, value);\n  } else {\n    record = this.prefRecords_[name] =\n        new lib.PreferenceManager.Record(name, value);\n  }\n\n  if (onChange) {\n    record.addObserver(onChange);\n  }\n};\n\n/**\n * Define multiple preferences with a single function call.\n *\n * @param {!Array<*>} defaults An array of 3-element arrays.  Each three element\n *     array should contain the [key, value, onChange] parameters for a\n *     preference.\n */\nlib.PreferenceManager.prototype.definePreferences = function(defaults) {\n  for (let i = 0; i < defaults.length; i++) {\n    this.definePreference(defaults[i][0], defaults[i][1], defaults[i][2]);\n  }\n};\n\n/**\n * Define an ordered list of child preferences.\n *\n * Child preferences are different from just storing an array of JSON objects\n * in that each child is an instance of a preference manager.  This means you\n * can observe changes to individual child preferences, and get some validation\n * that you're not reading or writing to an undefined child preference value.\n *\n * @param {string} listName A name for the list of children.  This must be\n *     unique in this preference manager.  The listName will become a\n *     preference on this PreferenceManager used to store the ordered list of\n *     child ids.  It is also used in get/add/remove operations to identify the\n *     list of children to operate on.\n * @param {function(!lib.PreferenceManager, string)} childFactory A function\n *     that will be used to generate instances of these children.  The factory\n *     function will receive the parent lib.PreferenceManager object and a\n *     unique id for the new child preferences.\n */\nlib.PreferenceManager.prototype.defineChildren = function(\n    listName, childFactory) {\n\n  // Define a preference to hold the ordered list of child ids.\n  this.definePreference(listName, [],\n                        this.onChildListChange_.bind(this, listName));\n  this.childFactories_[listName] = childFactory;\n  this.childLists_[listName] = {};\n};\n\n/**\n * Register to observe preference changes.\n *\n * @param {string} name The name of preference you wish to observe..\n * @param {function(*, string, !lib.PreferenceManager)} observer The callback.\n */\nlib.PreferenceManager.prototype.addObserver = function(name, observer) {\n  if (!(name in this.prefRecords_)) {\n    throw new Error(`Unknown preference: ${name}`);\n  }\n\n  this.prefRecords_[name].addObserver(observer);\n};\n\n/**\n * Register to observe preference changes.\n *\n * @param {?function()} global A callback that will happen for every preference.\n *     Pass null if you don't need one.\n * @param {!Object} map A map of preference specific callbacks.  Pass null if\n *     you don't need any.\n */\nlib.PreferenceManager.prototype.addObservers = function(global, map) {\n  if (global && typeof global != 'function') {\n    throw new Error('Invalid param: globals');\n  }\n\n  if (global) {\n    this.globalObservers_.push(global);\n  }\n\n  if (!map) {\n    return;\n  }\n\n  for (const name in map) {\n    this.addObserver(name, map[name]);\n  }\n};\n\n/**\n * Remove preference observer.\n *\n * @param {string} name The name of preference you wish to stop observing.\n * @param {function(*, string, !lib.PreferenceManager)} observer The observer to\n *     remove.\n */\nlib.PreferenceManager.prototype.removeObserver = function(name, observer) {\n  if (!(name in this.prefRecords_)) {\n    throw new Error(`Unknown preference: ${name}`);\n  }\n\n  this.prefRecords_[name].removeObserver(observer);\n};\n\n/**\n * Dispatch the change observers for all known preferences.\n *\n * It may be useful to call this after readStorage completes, in order to\n * get application state in sync with user preferences.\n *\n * This can be used if you've changed a preference manager out from under\n * a live object, for example when switching to a different prefix.\n */\nlib.PreferenceManager.prototype.notifyAll = function() {\n  for (const name in this.prefRecords_) {\n    this.notifyChange_(name);\n  }\n};\n\n/**\n * Notify the change observers for a given preference.\n *\n * @param {string} name The name of the preference that changed.\n */\nlib.PreferenceManager.prototype.notifyChange_ = function(name) {\n  const record = this.prefRecords_[name];\n  if (!record) {\n    throw new Error('Unknown preference: ' + name);\n  }\n\n  const currentValue = record.get();\n\n  for (let i = 0; i < this.globalObservers_.length; i++) {\n    this.globalObservers_[i](name, currentValue);\n  }\n\n  for (let i = 0; i < record.observers.length; i++) {\n    record.observers[i](currentValue, name, this);\n  }\n};\n\n/**\n * Create a new child PreferenceManager for the given child list.\n *\n * The optional hint parameter is an opaque prefix added to the auto-generated\n * unique id for this child.  Your child factory can parse out the prefix\n * and use it.\n *\n * @param {string} listName The child list to create the new instance from.\n * @param {?string=} hint Optional hint to include in the child id.\n * @param {string=} id Optional id to override the generated id.\n * @return {!lib.PreferenceManager} The new child preference manager.\n */\nlib.PreferenceManager.prototype.createChild = function(\n    listName, hint = undefined, id = undefined) {\n  const ids = /** @type {!Array<string>} */ (this.get(listName));\n\n  if (id) {\n    if (ids.indexOf(id) != -1) {\n      throw new Error('Duplicate child: ' + listName + ': ' + id);\n    }\n\n  } else {\n    // Pick a random, unique 4-digit hex identifier for the new profile.\n    while (!id || ids.indexOf(id) != -1) {\n      id = lib.f.randomInt(1, 0xffff).toString(16);\n      id = lib.f.zpad(id, 4);\n      if (hint) {\n        id = `${hint}:${id}`;\n      }\n    }\n  }\n\n  const childManager = this.childFactories_[listName](this, id);\n  childManager.trace = this.trace;\n  childManager.resetAll();\n\n  this.childLists_[listName][id] = childManager;\n\n  ids.push(id);\n  this.set(listName, ids, undefined, !this.isImportingJson_);\n\n  return childManager;\n};\n\n/**\n * Remove a child preferences instance.\n *\n * Removes a child preference manager and clears any preferences stored in it.\n *\n * @param {string} listName The name of the child list containing the child to\n *     remove.\n * @param {string} id The child ID.\n */\nlib.PreferenceManager.prototype.removeChild = function(listName, id) {\n  const prefs = this.getChild(listName, id);\n  prefs.resetAll();\n\n  const ids = /** @type {!Array<string>} */ (this.get(listName));\n  const i = ids.indexOf(id);\n  if (i != -1) {\n    ids.splice(i, 1);\n    this.set(listName, ids, undefined, !this.isImportingJson_);\n  }\n\n  delete this.childLists_[listName][id];\n};\n\n/**\n * Return a child PreferenceManager instance for a given id.\n *\n * If the child list or child id is not known this will return the specified\n * default value or throw an exception if no default value is provided.\n *\n * @param {string} listName The child list to look in.\n * @param {string} id The child ID.\n * @param {!lib.PreferenceManager=} defaultValue The value to return if the\n *     child is not found.\n * @return {!lib.PreferenceManager} The specified child PreferenceManager.\n */\nlib.PreferenceManager.prototype.getChild = function(\n    listName, id, defaultValue = undefined) {\n  if (!(listName in this.childLists_)) {\n    throw new Error('Unknown child list: ' + listName);\n  }\n\n  const childList = this.childLists_[listName];\n  if (!(id in childList)) {\n    if (defaultValue === undefined) {\n      throw new Error('Unknown \"' + listName + '\" child: ' + id);\n    }\n\n    return defaultValue;\n  }\n\n  return childList[id];\n};\n\n/**\n * Synchronize a list of child PreferenceManagers instances with the current\n * list stored in prefs.\n *\n * This will instantiate any missing managers and read current preference values\n * from storage.  Any active managers that no longer appear in preferences will\n * be deleted.\n *\n * @param {string} listName The child list to synchronize.\n * @param {function()=} callback Function to invoke when the sync finishes.\n */\nlib.PreferenceManager.prototype.syncChildList = function(\n    listName, callback = undefined) {\n  let pendingChildren = 0;\n  function onChildStorage() {\n    if (--pendingChildren == 0 && callback) {\n      callback();\n    }\n  }\n\n  // The list of child ids that we *should* have a manager for.\n  const currentIds = /** @type {!Array<string>} */ (this.get(listName));\n\n  // The known managers at the start of the sync.  Any manager still in this\n  // list at the end should be discarded.\n  const oldIds = Object.keys(this.childLists_[listName]);\n\n  for (let i = 0; i < currentIds.length; i++) {\n    const id = currentIds[i];\n\n    const managerIndex = oldIds.indexOf(id);\n    if (managerIndex >= 0) {\n      oldIds.splice(managerIndex, 1);\n    }\n\n    if (!this.childLists_[listName][id]) {\n      const childManager = this.childFactories_[listName](this, id);\n      if (!childManager) {\n        console.warn('Unable to restore child: ' + listName + ': ' + id);\n        continue;\n      }\n\n      childManager.trace = this.trace;\n      this.childLists_[listName][id] = childManager;\n      pendingChildren++;\n      childManager.readStorage(onChildStorage);\n    }\n  }\n\n  for (let i = 0; i < oldIds.length; i++) {\n    delete this.childLists_[listName][oldIds[i]];\n  }\n\n  if (!pendingChildren && callback) {\n    setTimeout(callback);\n  }\n};\n\n/**\n * Reset a preference to its default state.\n *\n * This will dispatch the onChange handler if the preference value actually\n * changes.\n *\n * @param {string} name The preference to reset.\n */\nlib.PreferenceManager.prototype.reset = function(name) {\n  const record = this.prefRecords_[name];\n  if (!record) {\n    throw new Error('Unknown preference: ' + name);\n  }\n\n  this.storage.removeItem(this.prefix + name);\n\n  if (record.currentValue !== this.DEFAULT_VALUE) {\n    record.currentValue = this.DEFAULT_VALUE;\n    this.notifyChange_(name);\n  }\n};\n\n/**\n * Reset all preferences back to their default state.\n */\nlib.PreferenceManager.prototype.resetAll = function() {\n  const changed = [];\n\n  for (const listName in this.childLists_) {\n    const childList = this.childLists_[listName];\n    for (const id in childList) {\n      childList[id].resetAll();\n    }\n  }\n\n  for (const name in this.prefRecords_) {\n    if (this.prefRecords_[name].currentValue !== this.DEFAULT_VALUE) {\n      this.prefRecords_[name].currentValue = this.DEFAULT_VALUE;\n      changed.push(name);\n    }\n  }\n\n  const keys = Object.keys(this.prefRecords_).map(function(el) {\n      return this.prefix + el;\n  }.bind(this));\n\n  this.storage.removeItems(keys);\n\n  changed.forEach(this.notifyChange_.bind(this));\n};\n\n/**\n * Return true if two values should be considered not-equal.\n *\n * If both values are the same scalar type and compare equal this function\n * returns false (no difference), otherwise return true.\n *\n * This is used in places where we want to check if a preference has changed.\n * Rather than take the time to compare complex values we just consider them\n * to always be different.\n *\n * @param {*} a A value to compare.\n * @param {*} b A value to compare.\n * @return {boolean} Whether the two are not equal.\n */\nlib.PreferenceManager.prototype.diff = function(a, b) {\n  // If the types are different.\n  if ((typeof a) !== (typeof b)) {\n    return true;\n  }\n\n  // Or if the type is not a simple primitive one.\n  if (!(/^(undefined|boolean|number|string)$/.test(typeof a))) {\n    // Special case the null object.\n    if (a === null && b === null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  // Do a normal compare for primitive types.\n  return a !== b;\n};\n\n/**\n * Change the default value of a preference.\n *\n * This is useful when subclassing preference managers.\n *\n * The function does not alter the current value of the preference, unless\n * it has the old default value.  When that happens, the change observers\n * will be notified.\n *\n * @param {string} name The name of the parameter to change.\n * @param {*} newValue The new default value for the preference.\n */\nlib.PreferenceManager.prototype.changeDefault = function(name, newValue) {\n  const record = this.prefRecords_[name];\n  if (!record) {\n    throw new Error('Unknown preference: ' + name);\n  }\n\n  if (!this.diff(record.defaultValue, newValue)) {\n    // Default value hasn't changed.\n    return;\n  }\n\n  if (record.currentValue !== this.DEFAULT_VALUE) {\n    // This pref has a specific value, just change the default and we're done.\n    record.defaultValue = newValue;\n    return;\n  }\n\n  record.defaultValue = newValue;\n\n  this.notifyChange_(name);\n};\n\n/**\n * Change the default value of multiple preferences.\n *\n * @param {!Object} map A map of name -> value pairs specifying the new default\n *     values.\n */\nlib.PreferenceManager.prototype.changeDefaults = function(map) {\n  for (const key in map) {\n    this.changeDefault(key, map[key]);\n  }\n};\n\n/**\n * Set a preference to a specific value.\n *\n * This will dispatch the onChange handler if the preference value actually\n * changes.\n *\n * @param {string} name The preference to set.\n * @param {*} newValue The value to set.  Anything that can be represented in\n *     JSON is a valid value.\n * @param {function()=} onComplete Callback when the set call completes.\n * @param {boolean=} saveToStorage Whether to commit the change to the backing\n *     storage or only the in-memory record copy.\n * @return {!Promise<void>} Promise which resolves once all observers are\n *     notified.\n */\nlib.PreferenceManager.prototype.set = function(\n    name, newValue, onComplete = undefined, saveToStorage = true) {\n  const record = this.prefRecords_[name];\n  if (!record) {\n    throw new Error('Unknown preference: ' + name);\n  }\n\n  const oldValue = record.get();\n\n  if (!this.diff(oldValue, newValue)) {\n    return Promise.resolve();\n  }\n\n  if (this.diff(record.defaultValue, newValue)) {\n    record.currentValue = newValue;\n    if (saveToStorage) {\n      this.storage.setItem(this.prefix + name, newValue).then(onComplete);\n    }\n  } else {\n    record.currentValue = this.DEFAULT_VALUE;\n    if (saveToStorage) {\n      this.storage.removeItem(this.prefix + name).then(onComplete);\n    }\n  }\n\n  // We need to manually send out the notification on this instance.  If we\n  // The storage event won't fire a notification because we've already changed\n  // the currentValue, so it won't see a difference.  If we delayed changing\n  // currentValue until the storage event, a pref read immediately after a write\n  // would return the previous value.\n  //\n  // The notification is async so clients don't accidentally depend on\n  // a synchronous notification.\n  return Promise.resolve().then(() => {\n    this.notifyChange_(name);\n  });\n};\n\n/**\n * Get the value of a preference.\n *\n * @param {string} name The preference to get.\n * @return {*} The preference's value.\n */\nlib.PreferenceManager.prototype.get = function(name) {\n  const record = this.prefRecords_[name];\n  if (!record) {\n    throw new Error('Unknown preference: ' + name);\n  }\n\n  return record.get();\n};\n\n/**\n * Get the default value of a preference.\n *\n * @param {string} name The preference to get.\n * @return {*} The preference's default value.\n */\nlib.PreferenceManager.prototype.getDefault = function(name) {\n  const record = this.prefRecords_[name];\n  if (!record) {\n    throw new Error(`Unknown preference: ${name}`);\n  }\n\n  return record.defaultValue;\n};\n\n/**\n * Get the boolean value of a preference.\n *\n * @param {string} name The preference to get.\n * @return {boolean}\n */\nlib.PreferenceManager.prototype.getBoolean = function(name) {\n  const result = this.get(name);\n  lib.assert(typeof result == 'boolean');\n  return result;\n};\n\n/**\n * Get the number value of a preference.\n *\n * @param {string} name The preference to get.\n * @return {number}\n */\nlib.PreferenceManager.prototype.getNumber = function(name) {\n  const result = this.get(name);\n  lib.assert(typeof result == 'number');\n  return result;\n};\n\n/**\n * Get the string value of a preference.\n *\n * @param {string} name The preference to get.\n * @return {string}\n */\nlib.PreferenceManager.prototype.getString = function(name) {\n  const result = this.get(name);\n  lib.assert(typeof result == 'string');\n  return result;\n};\n\n/**\n * Return all non-default preferences as a JSON object.\n *\n * This includes any nested preference managers as well.\n *\n * @return {!Object} The JSON preferences.\n */\nlib.PreferenceManager.prototype.exportAsJson = function() {\n  const rv = {};\n\n  for (const name in this.prefRecords_) {\n    if (name in this.childLists_) {\n      rv[name] = [];\n      const childIds = /** @type {!Array<string>} */ (this.get(name));\n      for (let i = 0; i < childIds.length; i++) {\n        const id = childIds[i];\n        rv[name].push({id: id, json: this.getChild(name, id).exportAsJson()});\n      }\n\n    } else {\n      const record = this.prefRecords_[name];\n      if (record.currentValue != this.DEFAULT_VALUE) {\n        rv[name] = record.currentValue;\n      }\n    }\n  }\n\n  return rv;\n};\n\n/**\n * Import a JSON blob of preferences previously generated with exportAsJson.\n *\n * This will create nested preference managers as well.\n *\n * @param {!Object} json The JSON settings to import.\n * @param {function()=} onComplete Callback when all imports have finished.\n */\nlib.PreferenceManager.prototype.importFromJson = function(json, onComplete) {\n  this.isImportingJson_ = true;\n\n  let pendingWrites = 0;\n  const onWriteStorage = () => {\n    if (--pendingWrites < 1) {\n      if (onComplete) {\n        onComplete();\n      }\n\n      // We've delayed updates to the child arrays, so flush them now.\n      for (const name in json) {\n        if (name in this.childLists_) {\n          this.set(name, this.get(name));\n        }\n      }\n\n      this.isImportingJson_ = false;\n    }\n  };\n\n  for (const name in json) {\n    if (name in this.childLists_) {\n      const childList = json[name];\n      for (let i = 0; i < childList.length; i++) {\n        const id = childList[i].id;\n\n        let childPrefManager = this.childLists_[name][id];\n        if (!childPrefManager) {\n          childPrefManager = this.createChild(name, null, id);\n        }\n\n        childPrefManager.importFromJson(childList[i].json, onWriteStorage);\n        pendingWrites++;\n      }\n\n    } else {\n      // The set is synchronous.\n      this.set(name, json[name]);\n    }\n  }\n\n  // If we didn't update any children, no async work has been queued, so make\n  // the completion callback directly.\n  if (pendingWrites == 0 && onComplete) {\n    onComplete();\n  }\n};\n\n/**\n * Called when one of the child list preferences changes.\n *\n * @param {string} listName The child list to synchronize.\n */\nlib.PreferenceManager.prototype.onChildListChange_ = function(listName) {\n  this.syncChildList(listName);\n};\n\n/**\n * Called when a key in the storage changes.\n *\n * @param {!Object} map Dictionary of changed settings.\n */\nlib.PreferenceManager.prototype.onStorageChange_ = function(map) {\n  for (const key in map) {\n    if (this.prefix) {\n      if (key.lastIndexOf(this.prefix, 0) != 0) {\n        continue;\n      }\n    }\n\n    const name = key.substr(this.prefix.length);\n\n    if (!(name in this.prefRecords_)) {\n      // Sometimes we'll get notified about prefs that are no longer defined.\n      continue;\n    }\n\n    const record = this.prefRecords_[name];\n\n    const newValue = map[key].newValue;\n    let currentValue = record.currentValue;\n    if (currentValue === record.DEFAULT_VALUE) {\n      currentValue = undefined;\n    }\n\n    if (this.diff(currentValue, newValue)) {\n      if (typeof newValue == 'undefined' || newValue === null) {\n        record.currentValue = record.DEFAULT_VALUE;\n      } else {\n        record.currentValue = newValue;\n      }\n\n      this.notifyChange_(name);\n    }\n  }\n};\n// SOURCE FILE: libdot/js/lib_resource.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Storage for canned resources.\n *\n * These are usually non-JavaScript things that are collected during a build\n * step and converted into a series of 'lib.resource.add(...)' calls.  See\n * the \"@resource\" directive from libdot/bin/concat for the canonical use\n * case.\n *\n * This is global storage, so you should prefix your resource names to avoid\n * collisions.\n */\nlib.resource = {\n  resources_: {},\n};\n\n/** @typedef {{type: string, name: string, data: *}} */\nlib.resource.ResourceRecord;\n\n/**\n * Add a resource.\n *\n * @param {string} name A name for the resource.  You should prefix this to\n *     avoid collisions with resources from a shared library.\n * @param {string} type A mime type for the resource, or \"raw\" if not\n *     applicable.\n * @param {*} data The value of the resource.\n */\nlib.resource.add = function(name, type, data) {\n  lib.resource.resources_[name] = {\n    type: type,\n    name: name,\n    data: data,\n  };\n};\n\n/**\n * Retrieve a resource record.\n *\n * The resource data is stored on the \"data\" property of the returned object.\n *\n * @param {string} name The name of the resource to get.\n * @param {!lib.resource.ResourceRecord=} defaultValue The value to return if\n *     the resource is not defined.\n * @return {!lib.resource.ResourceRecord} The matching resource if it exists.\n */\nlib.resource.get = function(name, defaultValue) {\n  if (!(name in lib.resource.resources_)) {\n    lib.assert(defaultValue !== undefined);\n    return defaultValue;\n  }\n\n  return lib.resource.resources_[name];\n};\n\n/**\n * Retrieve resource data.\n *\n * @param {string} name The name of the resource to get.\n * @param {*=} defaultValue The value to return if the resource is not defined.\n * @return {*} The resource data.\n */\nlib.resource.getData = function(name, defaultValue) {\n  if (!(name in lib.resource.resources_)) {\n    return defaultValue;\n  }\n\n  return lib.resource.resources_[name].data;\n};\n\n/**\n * Retrieve resource as a data: url.\n *\n * @param {string} name The name of the resource to get.\n * @param {!lib.resource.ResourceRecord=} defaultValue The value to return if\n *     the resource is not defined.\n * @return {string} A data: url encoded version of the resource.\n */\nlib.resource.getDataUrl = function(name, defaultValue) {\n  const resource = lib.resource.get(name, defaultValue);\n  return 'data:' + resource.type + ',' + resource.data;\n};\n// SOURCE FILE: libdot/js/lib_storage.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Namespace for implementations of persistent, possibly cloud-backed\n * storage.\n *\n * @interface\n */\nlib.Storage = function() {};\n\n/**\n * Register a function to observe storage changes.\n *\n * @param {function(!Object<string, !StorageChange>)} callback The function to\n *     invoke when the storage changes.\n */\nlib.Storage.prototype.addObserver = function(callback) {};\n\n/**\n * Unregister a change observer.\n *\n * @param {function(!Object<string, !StorageChange>)} callback A previously\n *     registered callback.\n */\nlib.Storage.prototype.removeObserver = function(callback) {};\n\n/**\n * Delete everything in this storage.\n */\nlib.Storage.prototype.clear = async function() {};\n\n/**\n * Return the current value of a storage item.\n *\n * @param {string} key The key to look up.\n * @return {!Promise<*>} A promise resolving to the requested item.\n */\nlib.Storage.prototype.getItem = async function(key) {};\n\n/**\n * Fetch the values of multiple storage items.\n *\n * @param {?Array<string>} keys The keys to look up.  Pass null for all keys.\n * @return {!Promise<!Object<string, *>>} A promise resolving to the requested\n *     items.\n */\nlib.Storage.prototype.getItems = async function(keys) {};\n\n/**\n * Set a value in storage.\n *\n * You don't have to wait for the set to complete in order to read the value\n * since the local cache is updated synchronously.\n *\n * @param {string} key The key for the value to be stored.\n * @param {*} value The value to be stored.  Anything that can be serialized\n *     with JSON is acceptable.\n */\nlib.Storage.prototype.setItem = async function(key, value) {};\n\n/**\n * Set multiple values in storage.\n *\n * You don't have to wait for the set to complete in order to read the value\n * since the local cache is updated synchronously.\n *\n * @param {!Object} obj A map of key/values to set in storage.\n */\nlib.Storage.prototype.setItems = async function(obj) {};\n\n/**\n * Remove an item from storage.\n *\n * @param {string} key The key to be removed.\n */\nlib.Storage.prototype.removeItem = async function(key) {};\n\n/**\n * Remove multiple items from storage.\n *\n * @param {!Array<string>} keys The keys to be removed.\n */\nlib.Storage.prototype.removeItems = async function(keys) {};\n\n/**\n * Create the set of changes between two states.\n *\n * This is used to synthesize the equivalent of Chrome's StorageEvent for use\n * by our stub APIs and testsuites.  We expect Chrome's StorageEvent to also\n * match the web's Storage API & window.onstorage events.\n *\n * @param {!Object<string, *>} oldStorage The old storage state.\n * @param {!Object<string, *>} newStorage The new storage state.\n * @return {!Object<string, {oldValue: ?, newValue: ?}>} The changes.\n */\nlib.Storage.generateStorageChanges = function(oldStorage, newStorage) {\n  const changes = {};\n\n  // See what's changed.\n  for (const key in newStorage) {\n    const newValue = newStorage[key];\n    if (oldStorage.hasOwnProperty(key)) {\n      // Key has been updated.\n      const oldValue = oldStorage[key];\n      if (oldValue !== newValue) {\n        changes[key] = {oldValue, newValue};\n      }\n    } else {\n      // Key has been added.\n      changes[key] = {newValue};\n    }\n  }\n\n  // See what's deleted.\n  for (const key in oldStorage) {\n    if (!newStorage.hasOwnProperty(key)) {\n      changes[key] = {oldValue: oldStorage[key]};\n    }\n  }\n\n  return changes;\n};\n// SOURCE FILE: libdot/js/lib_storage_chrome.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * chrome.storage based class with an async interface that is interchangeable\n * with other lib.Storage.* implementations.\n *\n * @param {!StorageArea} storage The backing storage.\n * @implements {lib.Storage}\n * @constructor\n */\nlib.Storage.Chrome = function(storage) {\n  this.storage_ = storage;\n  this.observers_ = [];\n\n  storage.onChanged.addListener(this.onChanged_.bind(this));\n};\n\n/**\n * Called by the storage implementation when the storage is modified.\n *\n * @param {!Object<string, !StorageChange>} changes Object mapping each key that\n *     changed to its corresponding StorageChange for that item.\n */\nlib.Storage.Chrome.prototype.onChanged_ = function(changes) {\n  this.observers_.forEach((o) => o(changes));\n};\n\n/**\n * Register a function to observe storage changes.\n *\n * @param {function(!Object<string, !StorageChange>)} callback The function to\n *     invoke when the storage changes.\n * @override\n */\nlib.Storage.Chrome.prototype.addObserver = function(callback) {\n  this.observers_.push(callback);\n};\n\n/**\n * Unregister a change observer.\n *\n * @param {function(!Object<string, !StorageChange>)} callback A previously\n *     registered callback.\n * @override\n */\nlib.Storage.Chrome.prototype.removeObserver = function(callback) {\n  const i = this.observers_.indexOf(callback);\n  if (i != -1) {\n    this.observers_.splice(i, 1);\n  }\n};\n\n/**\n * Delete everything in this storage.\n *\n * @override\n */\nlib.Storage.Chrome.prototype.clear = async function() {\n  return new Promise((resolve) => {\n    this.storage_.clear(resolve);\n  });\n};\n\n/**\n * Return the current value of a storage item.\n *\n * @param {string} key The key to look up.\n * @override\n */\nlib.Storage.Chrome.prototype.getItem = async function(key) {\n  return this.getItems([key]).then((items) => items[key]);\n};\n\n/**\n * Fetch the values of multiple storage items.\n *\n * @param {?Array<string>} keys The keys to look up.  Pass null for all keys.\n * @override\n */\nlib.Storage.Chrome.prototype.getItems = async function(keys) {\n  return new Promise((resolve) => {\n    this.storage_.get(keys, resolve);\n  });\n};\n\n/**\n * Set a value in storage.\n *\n * @param {string} key The key for the value to be stored.\n * @param {*} value The value to be stored.  Anything that can be serialized\n *     with JSON is acceptable.\n * @override\n */\nlib.Storage.Chrome.prototype.setItem = async function(key, value) {\n  return new Promise((resolve) => {\n    const onComplete = () => {\n      const err = lib.f.lastError();\n      if (err) {\n        // Doesn't seem to be any better way of handling this.\n        // https://crbug.com/764759\n        if (err.indexOf('MAX_WRITE_OPERATIONS')) {\n          console.warn(`Will retry '${key}' save after exceeding quota:`, err);\n          setTimeout(() => this.setItem(key, value).then(onComplete), 1000);\n          return;\n        } else {\n          console.error(`Unknown runtime error: ${err}`);\n        }\n      }\n\n      resolve();\n    };\n\n    this.setItems({[key]: value}).then(onComplete);\n  });\n};\n\n/**\n * Set multiple values in storage.\n *\n * @param {!Object} obj A map of key/values to set in storage.\n * @override\n */\nlib.Storage.Chrome.prototype.setItems = async function(obj) {\n  return new Promise((resolve) => {\n    this.storage_.set(obj, resolve);\n  });\n};\n\n/**\n * Remove an item from storage.\n *\n * @param {string} key The key to be removed.\n * @override\n */\nlib.Storage.Chrome.prototype.removeItem = async function(key) {\n  return this.removeItems([key]);\n};\n\n/**\n * Remove multiple items from storage.\n *\n * @param {!Array<string>} keys The keys to be removed.\n * @override\n */\nlib.Storage.Chrome.prototype.removeItems = async function(keys) {\n  return new Promise((resolve) => {\n    this.storage_.remove(keys, resolve);\n  });\n};\n// SOURCE FILE: libdot/js/lib_storage_local.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * window.localStorage based class with an async interface that is\n * interchangeable with other lib.Storage.* implementations.\n *\n * @param {!Storage=} storage The backing storage.\n * @implements {lib.Storage}\n * @constructor\n */\nlib.Storage.Local = function(storage = undefined) {\n  this.observers_ = [];\n  /** @type {!Storage} */\n  this.storage_ = storage ? storage : lib.notNull(window.localStorage);\n  // Closure thinks all addEventListener calls take Events.\n  window.addEventListener(\n      'storage',\n      /** @type {function(!Event)} */ (this.onStorage_.bind(this)));\n};\n\n/**\n * Returns parsed JSON, or original value if JSON.parse fails.\n *\n * @param {?string} jsonString The string to parse.\n * @return {*}\n */\nlib.Storage.Local.prototype.parseJson_ = function(jsonString) {\n  if (jsonString !== null) {\n    try {\n      return JSON.parse(jsonString);\n    } catch (e) {\n      // Ignore and return jsonString.\n    }\n  }\n  return jsonString;\n};\n\n/**\n * Called by the storage implementation when the storage is modified.\n *\n * @param {!StorageEvent} e The setting that has changed.\n */\nlib.Storage.Local.prototype.onStorage_ = function(e) {\n  if (e.storageArea != this.storage_) {\n    return;\n  }\n\n  const o = {};\n  o[e.key] = {\n    oldValue: this.parseJson_(e.oldValue),\n    newValue: this.parseJson_(e.newValue),\n  };\n\n  for (let i = 0; i < this.observers_.length; i++) {\n    this.observers_[i](o);\n  }\n};\n\n/**\n * Register a function to observe storage changes.\n *\n * @param {function(!Object)} callback The function to invoke when the storage\n *     changes.\n * @override\n */\nlib.Storage.Local.prototype.addObserver = function(callback) {\n  this.observers_.push(callback);\n};\n\n/**\n * Unregister a change observer.\n *\n * @param {function(!Object)} callback A previously registered callback.\n * @override\n */\nlib.Storage.Local.prototype.removeObserver = function(callback) {\n  const i = this.observers_.indexOf(callback);\n  if (i != -1) {\n    this.observers_.splice(i, 1);\n  }\n};\n\n/**\n * Delete everything in this storage.\n *\n * @override\n */\nlib.Storage.Local.prototype.clear = async function() {\n  this.storage_.clear();\n\n  // Force deferment for the standard API.\n  await 0;\n};\n\n/**\n * Return the current value of a storage item.\n *\n * @param {string} key The key to look up.\n * @override\n */\nlib.Storage.Local.prototype.getItem = async function(key) {\n  return this.getItems([key]).then((items) => items[key]);\n};\n\n/**\n * Fetch the values of multiple storage items.\n *\n * @param {?Array<string>} keys The keys to look up.  Pass null for all keys.\n * @override\n */\nlib.Storage.Local.prototype.getItems = async function(keys) {\n  const rv = {};\n  if (!keys) {\n    keys = [];\n    for (let i = 0; i < this.storage_.length; i++) {\n      keys.push(this.storage_.key(i));\n    }\n  }\n\n  for (let i = keys.length - 1; i >= 0; i--) {\n    const key = keys[i];\n    const value = this.storage_.getItem(key);\n    if (typeof value == 'string') {\n      rv[key] = this.parseJson_(value);\n    } else {\n      keys.splice(i, 1);\n    }\n  }\n\n  // Force deferment for the standard API.\n  await 0;\n\n  return rv;\n};\n\n/**\n * Set a value in storage.\n *\n * @param {string} key The key for the value to be stored.\n * @param {*} value The value to be stored.  Anything that can be serialized\n *     with JSON is acceptable.\n * @override\n */\nlib.Storage.Local.prototype.setItem = async function(key, value) {\n  return this.setItems({[key]: value});\n};\n\n/**\n * Set multiple values in storage.\n *\n * @param {!Object} obj A map of key/values to set in storage.\n * @override\n */\nlib.Storage.Local.prototype.setItems = async function(obj) {\n  for (const key in obj) {\n    this.storage_.setItem(key, JSON.stringify(obj[key]));\n  }\n\n  // Force deferment for the standard API.\n  await 0;\n};\n\n/**\n * Remove an item from storage.\n *\n * @param {string} key The key to be removed.\n * @override\n */\nlib.Storage.Local.prototype.removeItem = async function(key) {\n  return this.removeItems([key]);\n};\n\n/**\n * Remove multiple items from storage.\n *\n * @param {!Array<string>} keys The keys to be removed.\n * @override\n */\nlib.Storage.Local.prototype.removeItems = async function(keys) {\n  for (let i = 0; i < keys.length; i++) {\n    this.storage_.removeItem(keys[i]);\n  }\n\n  // Force deferment for the standard API.\n  await 0;\n};\n// SOURCE FILE: libdot/js/lib_storage_memory.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * In-memory storage class with an async interface that is interchangeable with\n * other lib.Storage.* implementations.\n *\n * @constructor\n * @implements {lib.Storage}\n */\nlib.Storage.Memory = function() {\n  this.observers_ = [];\n  this.storage_ = {};\n};\n\n/**\n * Register a function to observe storage changes.\n *\n * @param {function(!Object)} callback The function to invoke when the storage\n *     changes.\n * @override\n */\nlib.Storage.Memory.prototype.addObserver = function(callback) {\n  this.observers_.push(callback);\n};\n\n/**\n * Unregister a change observer.\n *\n * @param {function(!Object)} callback A previously registered callback.\n * @override\n */\nlib.Storage.Memory.prototype.removeObserver = function(callback) {\n  const i = this.observers_.indexOf(callback);\n  if (i != -1) {\n    this.observers_.splice(i, 1);\n  }\n};\n\n/**\n * Update the internal storage state and generate change events for it.\n *\n * @param {!Object<string, *>} newStorage\n */\nlib.Storage.Memory.prototype.update_ = async function(newStorage) {\n  const changes = lib.Storage.generateStorageChanges(this.storage_, newStorage);\n  this.storage_ = newStorage;\n\n  // Force deferment for the standard API.\n  await 0;\n\n  // Don't bother notifying if there are no changes.\n  if (Object.keys(changes).length) {\n    this.observers_.forEach((o) => o(changes));\n  }\n};\n\n/**\n * Delete everything in this storage.\n *\n * @override\n */\nlib.Storage.Memory.prototype.clear = async function() {\n  return this.update_({});\n};\n\n/**\n * Return the current value of a storage item.\n *\n * @param {string} key The key to look up.\n * @override\n */\nlib.Storage.Memory.prototype.getItem = async function(key) {\n  return this.getItems([key]).then((items) => items[key]);\n};\n\n/**\n * Fetch the values of multiple storage items.\n *\n * @param {?Array<string>} keys The keys to look up.  Pass null for all keys.\n * @override\n */\nlib.Storage.Memory.prototype.getItems = async function(keys) {\n  const rv = {};\n  if (!keys) {\n    keys = Object.keys(this.storage_);\n  }\n\n  keys.forEach((key) => {\n    if (this.storage_.hasOwnProperty(key)) {\n      rv[key] = this.storage_[key];\n    }\n  });\n\n  // Force deferment for the standard API.\n  await 0;\n\n  return rv;\n};\n\n/**\n * Set a value in storage.\n *\n * @param {string} key The key for the value to be stored.\n * @param {*} value The value to be stored.  Anything that can be serialized\n *     with JSON is acceptable.\n * @override\n */\nlib.Storage.Memory.prototype.setItem = async function(key, value) {\n  return this.setItems({[key]: value});\n};\n\n/**\n * Set multiple values in storage.\n *\n * @param {!Object} obj A map of key/values to set in storage.\n * @override\n */\nlib.Storage.Memory.prototype.setItems = async function(obj) {\n  const newStorage = Object.assign({}, this.storage_);\n  for (const key in obj) {\n    // Normalize through JSON to mimic Local/Chrome backends.\n    newStorage[key] = JSON.parse(JSON.stringify(obj[key]));\n  }\n  return this.update_(newStorage);\n};\n\n/**\n * Remove an item from storage.\n *\n * @param {string} key The key to be removed.\n * @override\n */\nlib.Storage.Memory.prototype.removeItem = async function(key) {\n  return this.removeItems([key]);\n};\n\n/**\n * Remove multiple items from storage.\n *\n * @param {!Array<string>} keys The keys to be removed.\n * @override\n */\nlib.Storage.Memory.prototype.removeItems = async function(keys) {\n  const newStorage = Object.assign({}, this.storage_);\n  keys.forEach((key) => delete newStorage[key]);\n  return this.update_(newStorage);\n};\n// SOURCE FILE: libdot/js/lib_storage_terminal_private.js\n// Copyright 2019 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Storage implementation using chrome.settingsPrivate.\n *\n * @param {{\n *  getSettings: function(function(?Object)),\n *  setSettings: function(!Object, function()),\n *  onSettingsChanged: !ChromeEvent,\n * }=} storage\n * @constructor\n * @implements {lib.Storage}\n */\nlib.Storage.TerminalPrivate = function(storage = chrome.terminalPrivate) {\n  /**\n   * @const\n   * @private\n   */\n  this.observers_ = [];\n\n  /**\n   * Local cache of terminalPrivate.getSettings.\n   *\n   * @private {!Object<string, *>}\n   */\n  this.prefValue_ = {};\n\n  /**\n   * We do async writes to terminalPrivate.setSettings to allow multiple sync\n   * writes to be batched.  This array holds the list of pending resolve calls\n   * that we'll invoke when the current write finishes.\n   *\n   * @private {!Array<function()>}\n   */\n  this.prefValueWriteToResolve_ = [];\n\n  /** @type {boolean} */\n  this.prefsLoaded_ = false;\n\n  /** @const */\n  this.storage_ = storage;\n\n  this.storage_.onSettingsChanged.addListener(\n      this.onSettingsChanged_.bind(this));\n};\n\n/**\n * Load the settings into our local cache.\n *\n * @return {!Promise<void>} Resolves when settings have been loaded.\n */\nlib.Storage.TerminalPrivate.prototype.initCache_ = function() {\n  return new Promise((resolve) => {\n    // NB: This doesn't return Promise.resolve so we're guaranteed to have the\n    // initCache_ call always return deferred execution.\n    if (this.prefsLoaded_) {\n      resolve();\n      return;\n    }\n\n    this.storage_.getSettings((settings) => {\n      const err = lib.f.lastError();\n      if (err) {\n        console.error(err);\n      } else {\n        this.prefValue_ = lib.notNull(settings);\n      }\n      this.prefsLoaded_ = true;\n      resolve();\n    });\n  });\n};\n\n/**\n * Called when settings change.\n *\n * @param {!Object<string, *>} settings\n * @private\n */\nlib.Storage.TerminalPrivate.prototype.onSettingsChanged_ = function(settings) {\n  // Check what is deleted.\n  const changes = lib.Storage.generateStorageChanges(this.prefValue_, settings);\n  this.prefValue_ = settings;\n\n  // Don't bother notifying if there are no changes.\n  if (Object.keys(changes).length) {\n    setTimeout(() => {\n      this.observers_.forEach((o) => o(changes));\n    });\n  }\n};\n\n/**\n * Set pref then run callback.  Writes are done async to allow multiple\n * concurrent calls to this function to be batched into a single write.\n *\n * @return {!Promise<void>} Resolves once the pref is set.\n * @private\n */\nlib.Storage.TerminalPrivate.prototype.setPref_ = function() {\n  lib.assert(this.prefsLoaded_);\n\n  return new Promise((resolve) => {\n    this.prefValueWriteToResolve_.push(resolve);\n    if (this.prefValueWriteToResolve_.length > 1) {\n      return;\n    }\n\n    // Force deferment to help coalesce.\n    setTimeout(() => {\n      this.storage_.setSettings(this.prefValue_, () => {\n        const err = lib.f.lastError();\n        if (err) {\n          console.error(err);\n        }\n        // Resolve all the pending promises so their callbacks will be invoked\n        // once this function returns.\n        this.prefValueWriteToResolve_.forEach((r) => r());\n        this.prefValueWriteToResolve_ = [];\n      });\n    });\n  });\n};\n\n/**\n * Register a function to observe storage changes.\n *\n * @param {function(!Object)} callback The function to invoke when the storage\n *     changes.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.addObserver = function(callback) {\n  this.observers_.push(callback);\n};\n\n/**\n * Unregister a change observer.\n *\n * @param {function(!Object)} callback A previously registered callback.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.removeObserver = function(callback) {\n  const i = this.observers_.indexOf(callback);\n  if (i !== -1) {\n    this.observers_.splice(i, 1);\n  }\n};\n\n/**\n * Update the internal storage state and generate change events for it.\n *\n * @param {!Object<string, *>} newStorage\n */\nlib.Storage.TerminalPrivate.prototype.update_ = async function(newStorage) {\n  const changes = lib.Storage.generateStorageChanges(\n      this.prefValue_, newStorage);\n  this.prefValue_ = newStorage;\n\n  await this.setPref_();\n\n  // Don't bother notifying if there are no changes.\n  if (Object.keys(changes).length) {\n    this.observers_.forEach((o) => o(changes));\n  }\n};\n\n/**\n * Delete everything in this storage.\n *\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.clear = async function() {\n  await this.initCache_();\n  return this.update_({});\n};\n\n/**\n * Return the current value of a storage item.\n *\n * @param {string} key The key to look up.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.getItem = async function(key) {\n  await this.initCache_();\n  return this.prefValue_[key];\n};\n\n/**\n * Fetch the values of multiple storage items.\n *\n * @param {?Array<string>} keys The keys to look up.  Pass null for all keys.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.getItems = async function(keys) {\n  await this.initCache_();\n\n  const rv = {};\n  if (!keys) {\n    keys = Object.keys(this.prefValue_);\n  }\n\n  for (const key of keys) {\n    if (this.prefValue_.hasOwnProperty(key)) {\n      rv[key] = this.prefValue_[key];\n    }\n  }\n\n  return rv;\n};\n\n/**\n * Set a value in storage.\n *\n * @param {string} key The key for the value to be stored.\n * @param {*} value The value to be stored.  Anything that can be serialized\n *     with JSON is acceptable.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.setItem = async function(key, value) {\n  return this.setItems({[key]: value});\n};\n\n/**\n * Set multiple values in storage.\n *\n * @param {!Object} obj A map of key/values to set in storage.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.setItems = async function(obj) {\n  await this.initCache_();\n  return this.update_(Object.assign({}, this.prefValue_, obj));\n};\n\n/**\n * Remove an item from storage.\n *\n * @param {string} key The key to be removed.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.removeItem = async function(key) {\n  return this.removeItems([key]);\n};\n\n/**\n * Remove multiple items from storage.\n *\n * @param {!Array<string>} keys The keys to be removed.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.removeItems = async function(keys) {\n  await this.initCache_();\n  const newStorage = Object.assign({}, this.prefValue_);\n  keys.forEach((key) => delete newStorage[key]);\n  return this.update_(newStorage);\n};\n// SOURCE FILE: libdot/third_party/intl-segmenter/intl-segmenter.js\n// Rough polyfill for Intl.Segmenter proposal\n//\n// https://github.com/tc39/proposal-intl-segmenter/blob/HEAD/README.md\n//\n// Caveats and Limitations\n//  * granularity: 'line': 'strictness' option is not supported (ignored)\n//  * In Chrome, uses v8BreakIterator\n//  * Otherwise, uses very simplistic rules\n//    * Ignores locale; only \"usable\" on English\n//    * granularity: 'grapheme' does not understand combining characters\n//    * granularity: 'sentence' does not understand decimals\n\n(function(global) {\n  if ('Intl' in global && 'Segmenter' in global.Intl) {\n    return;\n  }\n\n  global.Intl = global.Intl || {};\n\n  const GRANULARITIES = ['grapheme', 'word', 'sentence', 'line'];\n\n  // TODO: Implement https://www.unicode.org/reports/tr29/\n  const RULES = {\n    grapheme: {\n      grapheme: /^(.|\\n)/,\n    },\n    word: {\n      letter: /^[a-z](?:'?[a-z])*/i,\n      number: /^\\d+([,.]\\d+)*/,\n    },\n    sentence: {\n      terminator: /^[^.?!\\r\\n]+[.?!]+[\\r\\n]?/,\n      separator: /^[^.?!\\r\\n]+[\\r\\n]?/,\n    },\n    line: {\n      hard: /^\\S*[\\r\\n]/,\n      soft: /^\\S*\\s*/,\n    },\n  };\n\n  // Work around bug in v8BreakIterator where ICU's UWordBreak enum is\n  // used even if granularity is not \"word\". See the code in\n  // Runtime_BreakIteratorBreakType in runtime/runtime-i18n.cc for\n  // details.\n  function fixBreakType(value, granularity) {\n    // Undo the mapping of UWordBreak to string\n    const ruleStatus = {\n      none: 0, // UBRK_WORD_NONE\n      number: 100, // UBRK_WORD_NUMBER\n      letter: 200, // UBRK_WORD_LETTER\n      kana: 300, // UBRK_WORD_KANA\n      ideo: 400, // UBRK_WORD_IDEO\n      unknown: -1,\n    }[value] || 0;\n\n\n    switch (granularity) {\n    case 'character':\n      return undefined;\n    case 'word':\n      return value;\n    case 'sentence':\n      // Map ULineBreakTag rule status to string.\n      return {\n        0: 'terminator',\n        100: 'separator',\n      }[ruleStatus] || value;\n    case 'line':\n      // Map ULineBreakTag rule status to string.\n      return {\n        0: 'soft',\n        100: 'hard',\n      }[ruleStatus] || value;\n    default:\n      return value;\n    }\n  }\n\n  function segment(locale, granularity, string) {\n    const breaks = [];\n    if ('v8BreakIterator' in global.Intl) {\n      if (granularity === 'grapheme') {\n        granularity = 'character';\n      }\n      const vbi = new global.Intl.v8BreakIterator(locale, {type: granularity});\n      vbi.adoptText(string);\n      let last = 0;\n      let pos = vbi.next();\n      while (pos !== -1) {\n        breaks.push({\n          pos: vbi.current(),\n          segment: string.slice(last, pos),\n          breakType: fixBreakType(vbi.breakType(), granularity),\n        });\n        last = pos;\n        pos = vbi.next();\n      }\n    } else {\n      const rules = RULES[granularity];\n      let pos = 0;\n      while (pos < string.length) {\n        let found = false;\n        for (const rule of Object.keys(rules)) {\n          const re = rules[rule];\n          const m = string.slice(pos).match(re);\n          if (m) {\n            pos += m[0].length;\n            breaks.push({\n              pos: pos,\n              segment: m[0],\n              breakType: granularity === 'grapheme' ? undefined : rule,\n            });\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          breaks.push({\n            pos: pos + 1,\n            segment: string.slice(pos, ++pos),\n            breakType: 'none',\n          });\n        }\n      }\n    }\n    return breaks;\n  }\n\n  class $SegmentIterator$ {\n    constructor(string, breaks) {\n      this._cur = -1;\n      this._type = undefined;\n      this._breaks = breaks;\n    }\n\n    [Symbol.iterator]() {\n      return this;\n    }\n\n    next() {\n      if (this._cur < this._breaks.length) {\n        ++this._cur;\n      }\n\n      if (this._cur >= this._breaks.length) {\n        this._type = undefined;\n        return {done: true, value: undefined};\n      }\n\n      this._type = this._breaks[this._cur].breakType;\n      return {\n        done: false,\n        value: {\n          segment: this._breaks[this._cur].segment,\n          breakType: this._breaks[this._cur].breakType,\n        },\n      };\n    }\n\n    following(index = undefined) {\n      if (!this._breaks.length) {\n        return true;\n      }\n      if (index === undefined) {\n        if (this._cur < this._breaks.length) {\n          ++this._cur;\n        }\n      } else {\n        // TODO: binary search\n        for (this._cur = 0;\n             this._cur < this._breaks.length\n             && this._breaks[this._cur].pos < index;\n             ++this._cur) { /* TODO */ }\n      }\n\n      this._type = this._cur < this._breaks.length\n        ? this._breaks[this._cur].breakType : undefined;\n      return this._cur + 1 >= this._breaks.length;\n    }\n\n    preceding(index = undefined) {\n      if (!this._breaks.length) {\n        return true;\n      }\n      if (index === undefined) {\n        if (this._cur >= this._breaks.length) {\n          --this._cur;\n        }\n        if (this._cur >= 0) {\n          --this._cur;\n        }\n      } else {\n        // TODO: binary search\n        for (this._cur = this._breaks.length - 1;\n             this._cur >= 0\n             && this._breaks[this._cur].pos >= index;\n             --this._cur) { /* TODO */ }\n      }\n\n      this._type =\n        this._cur + 1 >= this._breaks.length ? undefined :\n        this._breaks[this._cur + 1].breakType;\n      return this._cur < 0;\n    }\n\n    get position() {\n      if (this._cur < 0 || !this._breaks.length) {\n        return 0;\n      }\n      if (this._cur >= this._breaks.length) {\n        return this._breaks[this._breaks.length - 1].pos;\n      }\n      return this._breaks[this._cur].pos;\n    }\n\n    get breakType() {\n      return this._type;\n    }\n  }\n\n  global.Intl.Segmenter = class Segmenter {\n    constructor(locale, {localeMatcher, granularity = 'grapheme'} = {}) {\n      this._locale = Array.isArray(locale)\n        ? locale.map((s) => String(s)) : String(locale || navigator.language);\n      this._granularity = GRANULARITIES.includes(granularity)\n        ? granularity : 'grapheme';\n    }\n\n    segment(string) {\n      return new $SegmentIterator$(\n        string, segment(this._locale, this._granularity, string));\n    }\n  };\n}(typeof window !== 'undefined' ?\n      window :\n      (typeof global !== 'undefined' ? global : this)));\n// SOURCE FILE: libdot/third_party/wcwidth/lib_wc.js\n// Copyright (c) 2014 The Chromium OS Authors. All rights reserved.\n// Use of lib.wc source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview\n * This JavaScript library is ported from the wcwidth.js module of node.js.\n * The original implementation can be found at:\n * https://npmjs.org/package/wcwidth.js\n */\n\n/**\n * JavaScript porting of Markus Kuhn's wcwidth() implementation\n *\n * The following explanation comes from the original C implementation:\n *\n * This is an implementation of wcwidth() and wcswidth() (defined in\n * IEEE Std 1002.1-2001) for Unicode.\n *\n * https://www.opengroup.org/onlinepubs/007904975/functions/wcwidth.html\n * https://www.opengroup.org/onlinepubs/007904975/functions/wcswidth.html\n *\n * In fixed-width output devices, Latin characters all occupy a single\n * \"cell\" position of equal width, whereas ideographic CJK characters\n * occupy two such cells. Interoperability between terminal-line\n * applications and (teletype-style) character terminals using the\n * UTF-8 encoding requires agreement on which character should advance\n * the cursor by how many cell positions. No established formal\n * standards exist at present on which Unicode character shall occupy\n * how many cell positions on character terminals. These routines are\n * a first attempt of defining such behavior based on simple rules\n * applied to data provided by the Unicode Consortium.\n *\n * For some graphical characters, the Unicode standard explicitly\n * defines a character-cell width via the definition of the East Asian\n * FullWidth (F), Wide (W), Half-width (H), and Narrow (Na) classes.\n * In all these cases, there is no ambiguity about which width a\n * terminal shall use. For characters in the East Asian Ambiguous (A)\n * class, the width choice depends purely on a preference of backward\n * compatibility with either historic CJK or Western practice.\n * Choosing single-width for these characters is easy to justify as\n * the appropriate long-term solution, as the CJK practice of\n * displaying these characters as double-width comes from historic\n * implementation simplicity (8-bit encoded characters were displayed\n * single-width and 16-bit ones double-width, even for Greek,\n * Cyrillic, etc.) and not any typographic considerations.\n *\n * Much less clear is the choice of width for the Not East Asian\n * (Neutral) class. Existing practice does not dictate a width for any\n * of these characters. It would nevertheless make sense\n * typographically to allocate two character cells to characters such\n * as for instance EM SPACE or VOLUME INTEGRAL, which cannot be\n * represented adequately with a single-width glyph. The following\n * routines at present merely assign a single-cell width to all\n * neutral characters, in the interest of simplicity. This is not\n * entirely satisfactory and should be reconsidered before\n * establishing a formal standard in lib.wc area. At the moment, the\n * decision which Not East Asian (Neutral) characters should be\n * represented by double-width glyphs cannot yet be answered by\n * applying a simple rule from the Unicode database content. Setting\n * up a proper standard for the behavior of UTF-8 character terminals\n * will require a careful analysis not only of each Unicode character,\n * but also of each presentation form, something the author of these\n * routines has avoided to do so far.\n *\n * https://www.unicode.org/unicode/reports/tr11/\n *\n * Markus Kuhn -- 2007-05-26 (Unicode 5.0)\n *\n * Permission to use, copy, modify, and distribute lib.wc software\n * for any purpose and without fee is hereby granted. The author\n * disclaims all warranties with regard to lib.wc software.\n *\n * Latest version: https://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c\n */\n\n/**\n * The following function defines the column width of an ISO 10646 character\n * as follows:\n *\n *  - The null character (U+0000) has a column width of 0.\n *  - Other C0/C1 control characters and DEL will lead to a return value of -1.\n *  - Non-spacing and enclosing combining characters (general category code Mn\n *    or Me in the Unicode database) have a column width of 0.\n *  - SOFT HYPHEN (U+00AD) has a column width of 1.\n *  - Other format characters (general category code Cf in the Unicode database)\n *    and ZERO WIDTH SPACE (U+200B) have a column width of 0.\n *  - Hangul Jamo medial vowels and final consonants (U+1160-U+11FF) have a\n *    column width of 0.\n *  - Spacing characters in the East Asian Wide (W) or East Asian Full-width (F)\n *    category as defined in Unicode Technical Report #11 have a column width of\n *    2.\n *  - East Asian Ambiguous characters are taken into account if\n *    regardCjkAmbiguous flag is enabled. They have a column width of 2.\n *  - All remaining characters (including all printable ISO 8859-1 and WGL4\n *    characters, Unicode control characters, etc.) have a column width of 1.\n *\n * This implementation assumes that characters are encoded in ISO 10646.\n */\n\nlib.wc = {};\n\n// Width of a nul character.\nlib.wc.nulWidth = 0;\n\n// Width of a control character.\nlib.wc.controlWidth = 0;\n\n// Flag whether to consider East Asian Ambiguous characters.\nlib.wc.regardCjkAmbiguous = false;\n\n// Width of an East Asian Ambiguous character.\nlib.wc.cjkAmbiguousWidth = 2;\n\n// Sorted list of non-overlapping intervals of non-spacing characters\n// generated by the `./ranges.py` helper.\nlib.wc.combining = [\n  [0x00ad, 0x00ad], [0x0300, 0x036f], [0x0483, 0x0489],\n  [0x0591, 0x05bd], [0x05bf, 0x05bf], [0x05c1, 0x05c2],\n  [0x05c4, 0x05c5], [0x05c7, 0x05c7], [0x0610, 0x061a],\n  [0x061c, 0x061c], [0x064b, 0x065f], [0x0670, 0x0670],\n  [0x06d6, 0x06dc], [0x06df, 0x06e4], [0x06e7, 0x06e8],\n  [0x06ea, 0x06ed], [0x0711, 0x0711], [0x0730, 0x074a],\n  [0x07a6, 0x07b0], [0x07eb, 0x07f3], [0x07fd, 0x07fd],\n  [0x0816, 0x0819], [0x081b, 0x0823], [0x0825, 0x0827],\n  [0x0829, 0x082d], [0x0859, 0x085b], [0x0898, 0x089f],\n  [0x08ca, 0x08e1], [0x08e3, 0x0902], [0x093a, 0x093a],\n  [0x093c, 0x093c], [0x0941, 0x0948], [0x094d, 0x094d],\n  [0x0951, 0x0957], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09bc, 0x09bc], [0x09c1, 0x09c4], [0x09cd, 0x09cd],\n  [0x09e2, 0x09e3], [0x09fe, 0x09fe], [0x0a01, 0x0a02],\n  [0x0a3c, 0x0a3c], [0x0a41, 0x0a42], [0x0a47, 0x0a48],\n  [0x0a4b, 0x0a4d], [0x0a51, 0x0a51], [0x0a70, 0x0a71],\n  [0x0a75, 0x0a75], [0x0a81, 0x0a82], [0x0abc, 0x0abc],\n  [0x0ac1, 0x0ac5], [0x0ac7, 0x0ac8], [0x0acd, 0x0acd],\n  [0x0ae2, 0x0ae3], [0x0afa, 0x0aff], [0x0b01, 0x0b01],\n  [0x0b3c, 0x0b3c], [0x0b3f, 0x0b3f], [0x0b41, 0x0b44],\n  [0x0b4d, 0x0b4d], [0x0b55, 0x0b56], [0x0b62, 0x0b63],\n  [0x0b82, 0x0b82], [0x0bc0, 0x0bc0], [0x0bcd, 0x0bcd],\n  [0x0c00, 0x0c00], [0x0c04, 0x0c04], [0x0c3c, 0x0c3c],\n  [0x0c3e, 0x0c40], [0x0c46, 0x0c48], [0x0c4a, 0x0c4d],\n  [0x0c55, 0x0c56], [0x0c62, 0x0c63], [0x0c81, 0x0c81],\n  [0x0cbc, 0x0cbc], [0x0cbf, 0x0cbf], [0x0cc6, 0x0cc6],\n  [0x0ccc, 0x0ccd], [0x0ce2, 0x0ce3], [0x0d00, 0x0d01],\n  [0x0d3b, 0x0d3c], [0x0d41, 0x0d44], [0x0d4d, 0x0d4d],\n  [0x0d62, 0x0d63], [0x0d81, 0x0d81], [0x0dca, 0x0dca],\n  [0x0dd2, 0x0dd4], [0x0dd6, 0x0dd6], [0x0e31, 0x0e31],\n  [0x0e34, 0x0e3a], [0x0e47, 0x0e4e], [0x0eb1, 0x0eb1],\n  [0x0eb4, 0x0ebc], [0x0ec8, 0x0ecd], [0x0f18, 0x0f19],\n  [0x0f35, 0x0f35], [0x0f37, 0x0f37], [0x0f39, 0x0f39],\n  [0x0f71, 0x0f7e], [0x0f80, 0x0f84], [0x0f86, 0x0f87],\n  [0x0f8d, 0x0f97], [0x0f99, 0x0fbc], [0x0fc6, 0x0fc6],\n  [0x102d, 0x1030], [0x1032, 0x1037], [0x1039, 0x103a],\n  [0x103d, 0x103e], [0x1058, 0x1059], [0x105e, 0x1060],\n  [0x1071, 0x1074], [0x1082, 0x1082], [0x1085, 0x1086],\n  [0x108d, 0x108d], [0x109d, 0x109d], [0x1160, 0x11ff],\n  [0x135d, 0x135f], [0x1712, 0x1714], [0x1732, 0x1733],\n  [0x1752, 0x1753], [0x1772, 0x1773], [0x17b4, 0x17b5],\n  [0x17b7, 0x17bd], [0x17c6, 0x17c6], [0x17c9, 0x17d3],\n  [0x17dd, 0x17dd], [0x180b, 0x180f], [0x1885, 0x1886],\n  [0x18a9, 0x18a9], [0x1920, 0x1922], [0x1927, 0x1928],\n  [0x1932, 0x1932], [0x1939, 0x193b], [0x1a17, 0x1a18],\n  [0x1a1b, 0x1a1b], [0x1a56, 0x1a56], [0x1a58, 0x1a5e],\n  [0x1a60, 0x1a60], [0x1a62, 0x1a62], [0x1a65, 0x1a6c],\n  [0x1a73, 0x1a7c], [0x1a7f, 0x1a7f], [0x1ab0, 0x1ace],\n  [0x1b00, 0x1b03], [0x1b34, 0x1b34], [0x1b36, 0x1b3a],\n  [0x1b3c, 0x1b3c], [0x1b42, 0x1b42], [0x1b6b, 0x1b73],\n  [0x1b80, 0x1b81], [0x1ba2, 0x1ba5], [0x1ba8, 0x1ba9],\n  [0x1bab, 0x1bad], [0x1be6, 0x1be6], [0x1be8, 0x1be9],\n  [0x1bed, 0x1bed], [0x1bef, 0x1bf1], [0x1c2c, 0x1c33],\n  [0x1c36, 0x1c37], [0x1cd0, 0x1cd2], [0x1cd4, 0x1ce0],\n  [0x1ce2, 0x1ce8], [0x1ced, 0x1ced], [0x1cf4, 0x1cf4],\n  [0x1cf8, 0x1cf9], [0x1dc0, 0x1dff], [0x200b, 0x200f],\n  [0x202a, 0x202e], [0x2060, 0x2064], [0x2066, 0x206f],\n  [0x20d0, 0x20f0], [0x2cef, 0x2cf1], [0x2d7f, 0x2d7f],\n  [0x2de0, 0x2dff], [0x302a, 0x302d], [0x3099, 0x309a],\n  [0xa66f, 0xa672], [0xa674, 0xa67d], [0xa69e, 0xa69f],\n  [0xa6f0, 0xa6f1], [0xa802, 0xa802], [0xa806, 0xa806],\n  [0xa80b, 0xa80b], [0xa825, 0xa826], [0xa82c, 0xa82c],\n  [0xa8c4, 0xa8c5], [0xa8e0, 0xa8f1], [0xa8ff, 0xa8ff],\n  [0xa926, 0xa92d], [0xa947, 0xa951], [0xa980, 0xa982],\n  [0xa9b3, 0xa9b3], [0xa9b6, 0xa9b9], [0xa9bc, 0xa9bd],\n  [0xa9e5, 0xa9e5], [0xaa29, 0xaa2e], [0xaa31, 0xaa32],\n  [0xaa35, 0xaa36], [0xaa43, 0xaa43], [0xaa4c, 0xaa4c],\n  [0xaa7c, 0xaa7c], [0xaab0, 0xaab0], [0xaab2, 0xaab4],\n  [0xaab7, 0xaab8], [0xaabe, 0xaabf], [0xaac1, 0xaac1],\n  [0xaaec, 0xaaed], [0xaaf6, 0xaaf6], [0xabe5, 0xabe5],\n  [0xabe8, 0xabe8], [0xabed, 0xabed], [0xfb1e, 0xfb1e],\n  [0xfe00, 0xfe0f], [0xfe20, 0xfe2f], [0xfeff, 0xfeff],\n  [0xfff9, 0xfffb], [0x101fd, 0x101fd], [0x102e0, 0x102e0],\n  [0x10376, 0x1037a], [0x10a01, 0x10a03], [0x10a05, 0x10a06],\n  [0x10a0c, 0x10a0f], [0x10a38, 0x10a3a], [0x10a3f, 0x10a3f],\n  [0x10ae5, 0x10ae6], [0x10d24, 0x10d27], [0x10eab, 0x10eac],\n  [0x10f46, 0x10f50], [0x10f82, 0x10f85], [0x11001, 0x11001],\n  [0x11038, 0x11046], [0x11070, 0x11070], [0x11073, 0x11074],\n  [0x1107f, 0x11081], [0x110b3, 0x110b6], [0x110b9, 0x110ba],\n  [0x110c2, 0x110c2], [0x11100, 0x11102], [0x11127, 0x1112b],\n  [0x1112d, 0x11134], [0x11173, 0x11173], [0x11180, 0x11181],\n  [0x111b6, 0x111be], [0x111c9, 0x111cc], [0x111cf, 0x111cf],\n  [0x1122f, 0x11231], [0x11234, 0x11234], [0x11236, 0x11237],\n  [0x1123e, 0x1123e], [0x112df, 0x112df], [0x112e3, 0x112ea],\n  [0x11300, 0x11301], [0x1133b, 0x1133c], [0x11340, 0x11340],\n  [0x11366, 0x1136c], [0x11370, 0x11374], [0x11438, 0x1143f],\n  [0x11442, 0x11444], [0x11446, 0x11446], [0x1145e, 0x1145e],\n  [0x114b3, 0x114b8], [0x114ba, 0x114ba], [0x114bf, 0x114c0],\n  [0x114c2, 0x114c3], [0x115b2, 0x115b5], [0x115bc, 0x115bd],\n  [0x115bf, 0x115c0], [0x115dc, 0x115dd], [0x11633, 0x1163a],\n  [0x1163d, 0x1163d], [0x1163f, 0x11640], [0x116ab, 0x116ab],\n  [0x116ad, 0x116ad], [0x116b0, 0x116b5], [0x116b7, 0x116b7],\n  [0x1171d, 0x1171f], [0x11722, 0x11725], [0x11727, 0x1172b],\n  [0x1182f, 0x11837], [0x11839, 0x1183a], [0x1193b, 0x1193c],\n  [0x1193e, 0x1193e], [0x11943, 0x11943], [0x119d4, 0x119d7],\n  [0x119da, 0x119db], [0x119e0, 0x119e0], [0x11a01, 0x11a0a],\n  [0x11a33, 0x11a38], [0x11a3b, 0x11a3e], [0x11a47, 0x11a47],\n  [0x11a51, 0x11a56], [0x11a59, 0x11a5b], [0x11a8a, 0x11a96],\n  [0x11a98, 0x11a99], [0x11c30, 0x11c36], [0x11c38, 0x11c3d],\n  [0x11c3f, 0x11c3f], [0x11c92, 0x11ca7], [0x11caa, 0x11cb0],\n  [0x11cb2, 0x11cb3], [0x11cb5, 0x11cb6], [0x11d31, 0x11d36],\n  [0x11d3a, 0x11d3a], [0x11d3c, 0x11d3d], [0x11d3f, 0x11d45],\n  [0x11d47, 0x11d47], [0x11d90, 0x11d91], [0x11d95, 0x11d95],\n  [0x11d97, 0x11d97], [0x11ef3, 0x11ef4], [0x13430, 0x13438],\n  [0x16af0, 0x16af4], [0x16b30, 0x16b36], [0x16f4f, 0x16f4f],\n  [0x16f8f, 0x16f92], [0x16fe4, 0x16fe4], [0x1bc9d, 0x1bc9e],\n  [0x1bca0, 0x1bca3], [0x1cf00, 0x1cf2d], [0x1cf30, 0x1cf46],\n  [0x1d167, 0x1d169], [0x1d173, 0x1d182], [0x1d185, 0x1d18b],\n  [0x1d1aa, 0x1d1ad], [0x1d242, 0x1d244], [0x1da00, 0x1da36],\n  [0x1da3b, 0x1da6c], [0x1da75, 0x1da75], [0x1da84, 0x1da84],\n  [0x1da9b, 0x1da9f], [0x1daa1, 0x1daaf], [0x1e000, 0x1e006],\n  [0x1e008, 0x1e018], [0x1e01b, 0x1e021], [0x1e023, 0x1e024],\n  [0x1e026, 0x1e02a], [0x1e130, 0x1e136], [0x1e2ae, 0x1e2ae],\n  [0x1e2ec, 0x1e2ef], [0x1e8d0, 0x1e8d6], [0x1e944, 0x1e94a],\n  [0xe0001, 0xe0001], [0xe0020, 0xe007f], [0xe0100, 0xe01ef],\n];\n\n// Sorted list of non-overlapping intervals of East Asian Ambiguous characters\n// generated by the `./ranges.py` helper.\nlib.wc.ambiguous = [\n  [0x00a1, 0x00a1], [0x00a4, 0x00a4], [0x00a7, 0x00a8],\n  [0x00aa, 0x00aa], [0x00ad, 0x00ae], [0x00b0, 0x00b4],\n  [0x00b6, 0x00ba], [0x00bc, 0x00bf], [0x00c6, 0x00c6],\n  [0x00d0, 0x00d0], [0x00d7, 0x00d8], [0x00de, 0x00e1],\n  [0x00e6, 0x00e6], [0x00e8, 0x00ea], [0x00ec, 0x00ed],\n  [0x00f0, 0x00f0], [0x00f2, 0x00f3], [0x00f7, 0x00fa],\n  [0x00fc, 0x00fc], [0x00fe, 0x00fe], [0x0101, 0x0101],\n  [0x0111, 0x0111], [0x0113, 0x0113], [0x011b, 0x011b],\n  [0x0126, 0x0127], [0x012b, 0x012b], [0x0131, 0x0133],\n  [0x0138, 0x0138], [0x013f, 0x0142], [0x0144, 0x0144],\n  [0x0148, 0x014b], [0x014d, 0x014d], [0x0152, 0x0153],\n  [0x0166, 0x0167], [0x016b, 0x016b], [0x01ce, 0x01ce],\n  [0x01d0, 0x01d0], [0x01d2, 0x01d2], [0x01d4, 0x01d4],\n  [0x01d6, 0x01d6], [0x01d8, 0x01d8], [0x01da, 0x01da],\n  [0x01dc, 0x01dc], [0x0251, 0x0251], [0x0261, 0x0261],\n  [0x02c4, 0x02c4], [0x02c7, 0x02c7], [0x02c9, 0x02cb],\n  [0x02cd, 0x02cd], [0x02d0, 0x02d0], [0x02d8, 0x02db],\n  [0x02dd, 0x02dd], [0x02df, 0x02df], [0x0300, 0x036f],\n  [0x0391, 0x03a1], [0x03a3, 0x03a9], [0x03b1, 0x03c1],\n  [0x03c3, 0x03c9], [0x0401, 0x0401], [0x0410, 0x044f],\n  [0x0451, 0x0451], [0x1100, 0x115f], [0x2010, 0x2010],\n  [0x2013, 0x2016], [0x2018, 0x2019], [0x201c, 0x201d],\n  [0x2020, 0x2022], [0x2024, 0x2027], [0x2030, 0x2030],\n  [0x2032, 0x2033], [0x2035, 0x2035], [0x203b, 0x203b],\n  [0x203e, 0x203e], [0x2074, 0x2074], [0x207f, 0x207f],\n  [0x2081, 0x2084], [0x20ac, 0x20ac], [0x2103, 0x2103],\n  [0x2105, 0x2105], [0x2109, 0x2109], [0x2113, 0x2113],\n  [0x2116, 0x2116], [0x2121, 0x2122], [0x2126, 0x2126],\n  [0x212b, 0x212b], [0x2153, 0x2154], [0x215b, 0x215e],\n  [0x2160, 0x216b], [0x2170, 0x2179], [0x2189, 0x2189],\n  [0x2190, 0x2199], [0x21b8, 0x21b9], [0x21d2, 0x21d2],\n  [0x21d4, 0x21d4], [0x21e7, 0x21e7], [0x2200, 0x2200],\n  [0x2202, 0x2203], [0x2207, 0x2208], [0x220b, 0x220b],\n  [0x220f, 0x220f], [0x2211, 0x2211], [0x2215, 0x2215],\n  [0x221a, 0x221a], [0x221d, 0x2220], [0x2223, 0x2223],\n  [0x2225, 0x2225], [0x2227, 0x222c], [0x222e, 0x222e],\n  [0x2234, 0x2237], [0x223c, 0x223d], [0x2248, 0x2248],\n  [0x224c, 0x224c], [0x2252, 0x2252], [0x2260, 0x2261],\n  [0x2264, 0x2267], [0x226a, 0x226b], [0x226e, 0x226f],\n  [0x2282, 0x2283], [0x2286, 0x2287], [0x2295, 0x2295],\n  [0x2299, 0x2299], [0x22a5, 0x22a5], [0x22bf, 0x22bf],\n  [0x2312, 0x2312], [0x231a, 0x231b], [0x2329, 0x232a],\n  [0x23e9, 0x23ec], [0x23f0, 0x23f0], [0x23f3, 0x23f3],\n  [0x2460, 0x24e9], [0x24eb, 0x254b], [0x2550, 0x2573],\n  [0x2580, 0x258f], [0x2592, 0x2595], [0x25a0, 0x25a1],\n  [0x25a3, 0x25a9], [0x25b2, 0x25b3], [0x25b6, 0x25b7],\n  [0x25bc, 0x25bd], [0x25c0, 0x25c1], [0x25c6, 0x25c8],\n  [0x25cb, 0x25cb], [0x25ce, 0x25d1], [0x25e2, 0x25e5],\n  [0x25ef, 0x25ef], [0x25fd, 0x25fe], [0x2605, 0x2606],\n  [0x2609, 0x2609], [0x260e, 0x260f], [0x2614, 0x2615],\n  [0x261c, 0x261c], [0x261e, 0x261e], [0x2640, 0x2640],\n  [0x2642, 0x2642], [0x2648, 0x2653], [0x2660, 0x2661],\n  [0x2663, 0x2665], [0x2667, 0x266a], [0x266c, 0x266d],\n  [0x266f, 0x266f], [0x267f, 0x267f], [0x2693, 0x2693],\n  [0x269e, 0x269f], [0x26a1, 0x26a1], [0x26aa, 0x26ab],\n  [0x26bd, 0x26bf], [0x26c4, 0x26e1], [0x26e3, 0x26e3],\n  [0x26e8, 0x26ff], [0x2705, 0x2705], [0x270a, 0x270b],\n  [0x2728, 0x2728], [0x273d, 0x273d], [0x274c, 0x274c],\n  [0x274e, 0x274e], [0x2753, 0x2755], [0x2757, 0x2757],\n  [0x2776, 0x277f], [0x2795, 0x2797], [0x27b0, 0x27b0],\n  [0x27bf, 0x27bf], [0x2b1b, 0x2b1c], [0x2b50, 0x2b50],\n  [0x2b55, 0x2b59], [0x2e80, 0x2fdf], [0x2ff0, 0x303e],\n  [0x3040, 0x4dbf], [0x4e00, 0xa4cf], [0xa960, 0xa97f],\n  [0xac00, 0xd7a3], [0xe000, 0xfaff], [0xfe00, 0xfe19],\n  [0xfe30, 0xfe6f], [0xff01, 0xff60], [0xffe0, 0xffe6],\n  [0xfffd, 0xfffd], [0x16fe0, 0x16fe4], [0x16ff0, 0x16ff1],\n  [0x17000, 0x18cd5], [0x18d00, 0x18d08], [0x1aff0, 0x1aff3],\n  [0x1aff5, 0x1affb], [0x1affd, 0x1affe], [0x1b000, 0x1b12f],\n  [0x1b150, 0x1b152], [0x1b164, 0x1b167], [0x1b170, 0x1b2ff],\n  [0x1f004, 0x1f004], [0x1f0cf, 0x1f0cf], [0x1f100, 0x1f10a],\n  [0x1f110, 0x1f12d], [0x1f130, 0x1f169], [0x1f170, 0x1f1ac],\n  [0x1f200, 0x1f202], [0x1f210, 0x1f23b], [0x1f240, 0x1f248],\n  [0x1f250, 0x1f251], [0x1f260, 0x1f265], [0x1f300, 0x1f320],\n  [0x1f32d, 0x1f335], [0x1f337, 0x1f37c], [0x1f37e, 0x1f393],\n  [0x1f3a0, 0x1f3ca], [0x1f3cf, 0x1f3d3], [0x1f3e0, 0x1f3f0],\n  [0x1f3f4, 0x1f3f4], [0x1f3f8, 0x1f43e], [0x1f440, 0x1f440],\n  [0x1f442, 0x1f4fc], [0x1f4ff, 0x1f53d], [0x1f54b, 0x1f54e],\n  [0x1f550, 0x1f567], [0x1f57a, 0x1f57a], [0x1f595, 0x1f596],\n  [0x1f5a4, 0x1f5a4], [0x1f5fb, 0x1f64f], [0x1f680, 0x1f6c5],\n  [0x1f6cc, 0x1f6cc], [0x1f6d0, 0x1f6d2], [0x1f6d5, 0x1f6d7],\n  [0x1f6dd, 0x1f6df], [0x1f6eb, 0x1f6ec], [0x1f6f4, 0x1f6fc],\n  [0x1f7e0, 0x1f7eb], [0x1f7f0, 0x1f7f0], [0x1f90c, 0x1f93a],\n  [0x1f93c, 0x1f945], [0x1f947, 0x1f9ff], [0x1fa70, 0x1fa74],\n  [0x1fa78, 0x1fa7c], [0x1fa80, 0x1fa86], [0x1fa90, 0x1faac],\n  [0x1fab0, 0x1faba], [0x1fac0, 0x1fac5], [0x1fad0, 0x1fad9],\n  [0x1fae0, 0x1fae7], [0x1faf0, 0x1faf6], [0x20000, 0x2fffd],\n  [0x30000, 0x3fffd], [0xe0100, 0xe01ef], [0xf0000, 0xffffd],\n  [0x100000, 0x10fffd],\n];\n\n// Sorted list of non-overlapping intervals of East Asian Unambiguous characters\n// generated by the `./ranges.py` helper.\nlib.wc.unambiguous = [\n  [0x1100, 0x115f], [0x231a, 0x231b], [0x2329, 0x232a],\n  [0x23e9, 0x23ec], [0x23f0, 0x23f0], [0x23f3, 0x23f3],\n  [0x25fd, 0x25fe], [0x2614, 0x2615], [0x2648, 0x2653],\n  [0x267f, 0x267f], [0x2693, 0x2693], [0x26a1, 0x26a1],\n  [0x26aa, 0x26ab], [0x26bd, 0x26be], [0x26c4, 0x26c5],\n  [0x26ce, 0x26ce], [0x26d4, 0x26d4], [0x26ea, 0x26ea],\n  [0x26f2, 0x26f3], [0x26f5, 0x26f5], [0x26fa, 0x26fa],\n  [0x26fd, 0x26fd], [0x2705, 0x2705], [0x270a, 0x270b],\n  [0x2728, 0x2728], [0x274c, 0x274c], [0x274e, 0x274e],\n  [0x2753, 0x2755], [0x2757, 0x2757], [0x2795, 0x2797],\n  [0x27b0, 0x27b0], [0x27bf, 0x27bf], [0x2b1b, 0x2b1c],\n  [0x2b50, 0x2b50], [0x2b55, 0x2b55], [0x2e80, 0x2fdf],\n  [0x2ff0, 0x303e], [0x3040, 0x3247], [0x3250, 0x4dbf],\n  [0x4e00, 0xa4cf], [0xa960, 0xa97f], [0xac00, 0xd7a3],\n  [0xf900, 0xfaff], [0xfe10, 0xfe19], [0xfe30, 0xfe6f],\n  [0xff01, 0xff60], [0xffe0, 0xffe6], [0x16fe0, 0x16fe4],\n  [0x16ff0, 0x16ff1], [0x17000, 0x18cd5], [0x18d00, 0x18d08],\n  [0x1aff0, 0x1aff3], [0x1aff5, 0x1affb], [0x1affd, 0x1affe],\n  [0x1b000, 0x1b12f], [0x1b150, 0x1b152], [0x1b164, 0x1b167],\n  [0x1b170, 0x1b2ff], [0x1f004, 0x1f004], [0x1f0cf, 0x1f0cf],\n  [0x1f18e, 0x1f18e], [0x1f191, 0x1f19a], [0x1f200, 0x1f202],\n  [0x1f210, 0x1f23b], [0x1f240, 0x1f248], [0x1f250, 0x1f251],\n  [0x1f260, 0x1f265], [0x1f300, 0x1f320], [0x1f32d, 0x1f335],\n  [0x1f337, 0x1f37c], [0x1f37e, 0x1f393], [0x1f3a0, 0x1f3ca],\n  [0x1f3cf, 0x1f3d3], [0x1f3e0, 0x1f3f0], [0x1f3f4, 0x1f3f4],\n  [0x1f3f8, 0x1f43e], [0x1f440, 0x1f440], [0x1f442, 0x1f4fc],\n  [0x1f4ff, 0x1f53d], [0x1f54b, 0x1f54e], [0x1f550, 0x1f567],\n  [0x1f57a, 0x1f57a], [0x1f595, 0x1f596], [0x1f5a4, 0x1f5a4],\n  [0x1f5fb, 0x1f64f], [0x1f680, 0x1f6c5], [0x1f6cc, 0x1f6cc],\n  [0x1f6d0, 0x1f6d2], [0x1f6d5, 0x1f6d7], [0x1f6dd, 0x1f6df],\n  [0x1f6eb, 0x1f6ec], [0x1f6f4, 0x1f6fc], [0x1f7e0, 0x1f7eb],\n  [0x1f7f0, 0x1f7f0], [0x1f90c, 0x1f93a], [0x1f93c, 0x1f945],\n  [0x1f947, 0x1f9ff], [0x1fa70, 0x1fa74], [0x1fa78, 0x1fa7c],\n  [0x1fa80, 0x1fa86], [0x1fa90, 0x1faac], [0x1fab0, 0x1faba],\n  [0x1fac0, 0x1fac5], [0x1fad0, 0x1fad9], [0x1fae0, 0x1fae7],\n  [0x1faf0, 0x1faf6], [0x20000, 0x2fffd], [0x30000, 0x3fffd],\n];\n\n/**\n * Binary search to check if the given unicode character is in the table.\n *\n * @param {number} ucs A unicode character code.\n * @param {!Array<!Array<number>>} table A sorted list of internals to match\n *     against.\n * @return {boolean} True if the given character is in the table.\n */\nlib.wc.binaryTableSearch_ = function(ucs, table) {\n  let min = 0;\n  let max = table.length - 1;\n  let mid;\n\n  if (ucs < table[min][0] || ucs > table[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = Math.floor((min + max) / 2);\n    if (ucs > table[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < table[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Binary search to check if the given unicode character is a space character.\n *\n * @param {number} ucs A unicode character code.\n * @return {boolean} True if the given character is a space character; false\n *     otherwise.\n */\nlib.wc.isSpace = function(ucs) {\n  return lib.wc.binaryTableSearch_(ucs, lib.wc.combining);\n};\n\n/**\n * Auxiliary function for checking if the given unicode character is a East\n * Asian Ambiguous character.\n *\n * @param {number} ucs A unicode character code.\n * @return {boolean} True if the given character is a East Asian Ambiguous\n *     character.\n */\nlib.wc.isCjkAmbiguous = function(ucs) {\n  return lib.wc.binaryTableSearch_(ucs, lib.wc.ambiguous);\n};\n\n/**\n * Determine the column width of the given character.\n *\n * @param {number} ucs A unicode character code.\n * @return {number} The column width of the given character.\n */\nlib.wc.charWidth = function(ucs) {\n  if (lib.wc.regardCjkAmbiguous) {\n    return lib.wc.charWidthRegardAmbiguous(ucs);\n  } else {\n    return lib.wc.charWidthDisregardAmbiguous(ucs);\n  }\n};\n\n/**\n * Determine the column width of the given character without considering East\n * Asian Ambiguous characters.\n *\n * @param {number} ucs A unicode character code.\n * @return {number} The column width of the given character.\n */\nlib.wc.charWidthDisregardAmbiguous = function(ucs) {\n  // Optimize for ASCII characters.\n  if (ucs < 0x7f) {\n    if (ucs >= 0x20) {\n      return 1;\n    } else if (ucs == 0) {\n      return lib.wc.nulWidth;\n    } else /* if (ucs < 0x20) */ {\n      return lib.wc.controlWidth;\n    }\n  }\n\n  // Test for 8-bit control characters.\n  if (ucs < 0xa0) {\n    return lib.wc.controlWidth;\n  }\n\n  // Binary search in table of non-spacing characters.\n  if (lib.wc.isSpace(ucs)) {\n    return 0;\n  }\n\n  // Binary search in table of wide characters.\n  return lib.wc.binaryTableSearch_(ucs, lib.wc.unambiguous) ? 2 : 1;\n};\n\n/**\n * Determine the column width of the given character considering East Asian\n * Ambiguous characters.\n *\n * @param {number} ucs A unicode character code.\n * @return {number} The column width of the given character.\n */\nlib.wc.charWidthRegardAmbiguous = function(ucs) {\n  if (lib.wc.isCjkAmbiguous(ucs)) {\n    return lib.wc.cjkAmbiguousWidth;\n  }\n\n  return lib.wc.charWidthDisregardAmbiguous(ucs);\n};\n\n/**\n * Determine the column width of the given string.\n *\n * @param {string} str A string.\n * @return {number} The column width of the given string.\n */\nlib.wc.strWidth = function(str) {\n  let rv = 0;\n\n  for (let i = 0; i < str.length;) {\n    const codePoint = str.codePointAt(i);\n    const width = lib.wc.charWidth(codePoint);\n    if (width < 0) {\n      return -1;\n    }\n    rv += width;\n    i += (codePoint <= 0xffff) ? 1 : 2;\n  }\n\n  return rv;\n};\n\n/**\n * Get the substring at the given column offset of the given column width.\n *\n * @param {string} str The string to get substring from.\n * @param {number} start The starting column offset to get substring.\n * @param {number=} subwidth The column width of the substring.\n * @return {string} The substring.\n */\nlib.wc.substr = function(str, start, subwidth = undefined) {\n  let startIndex = 0;\n\n  // Fun edge case: Normally we associate zero width codepoints (like combining\n  // characters) with the previous codepoint, so we skip any leading ones while\n  // including trailing ones.  However, if there are zero width codepoints at\n  // the start of the string, and the substring starts at 0, lets include them\n  // in the result.  This also makes for a simple optimization for a common\n  // request.\n  if (start) {\n    for (let width = 0; startIndex < str.length;) {\n      const codePoint = str.codePointAt(startIndex);\n      width += lib.wc.charWidth(codePoint);\n      if (width > start) {\n        break;\n      }\n      startIndex += (codePoint <= 0xffff) ? 1 : 2;\n    }\n  }\n\n  if (subwidth !== undefined) {\n    let endIndex = startIndex;\n    for (let width = 0; endIndex < str.length;) {\n      const codePoint = str.codePointAt(endIndex);\n      width += lib.wc.charWidth(codePoint);\n      if (width > subwidth) {\n        break;\n      }\n      endIndex += (codePoint <= 0xffff) ? 1 : 2;\n    }\n    return str.substring(startIndex, endIndex);\n  }\n\n  return str.substr(startIndex);\n};\n\n/**\n * Get substring at the given start and end column offset.\n *\n * @param {string} str The string to get substring from.\n * @param {number} start The starting column offset.\n * @param {number} end The ending column offset.\n * @return {string} The substring.\n */\nlib.wc.substring = function(str, start, end) {\n  return lib.wc.substr(str, start, end - start);\n};\nlib.resource.add('libdot/changelog/version', 'text/plain',\n'9.0.0'\n);\n\nlib.resource.add('libdot/changelog/date', 'text/plain',\n'2022-02-24'\n);\n\n// SOURCE FILE: hterm/js/hterm.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview Declares the hterm.* namespace and some basic shared utilities\n * that are too small to deserve dedicated files.\n */\nconst hterm = {};\n\n/**\n * The type of window hosting hterm.\n *\n * This is set as part of hterm.init().  The value is invalid until\n * initialization completes.\n */\nhterm.windowType = null;\n\n/**\n * The OS we're running under.\n *\n * Used when setting up OS-specific behaviors.\n *\n * This is set as part of hterm.init().  The value is invalid until\n * initialization completes.\n */\nhterm.os = null;\n\n/**\n * Text shown in a desktop notification for the terminal\n * bell.  \\u226a is a unicode EIGHTH NOTE, %(title) will\n * be replaced by the terminal title.\n */\nhterm.desktopNotificationTitle = '\\u266A %(title) \\u266A';\n\n/** @type {?lib.MessageManager} */\nhterm.messageManager = null;\n\nlib.registerInit(\n    'hterm',\n    /**\n     * The hterm init function, registered with lib.registerInit().\n     *\n     * This is called during lib.init().\n     *\n     * @return {!Promise<void>}\n     */\n    async () => {\n      function initMessageManager() {\n        return lib.i18n.getAcceptLanguages()\n          .then((languages) => {\n            if (!hterm.messageManager) {\n              hterm.messageManager = new lib.MessageManager(languages);\n            }\n          })\n          .then(() => {\n            // If OS detection fails, then we'll still set the value to\n            // something.  The OS logic in hterm tends to be best effort\n            // anyways.\n            const initOs = (os) => { hterm.os = os; };\n            return lib.f.getOs().then(initOs).catch(initOs);\n          });\n      }\n\n      function onWindow(window) {\n        hterm.windowType = window.type;\n        return initMessageManager();\n      }\n\n      function onTab(tab = undefined) {\n        if (tab && window.chrome) {\n          return new Promise((resolve) => {\n            chrome.windows.get(tab.windowId, null, (win) => {\n              onWindow(win).then(resolve);\n            });\n          });\n        } else {\n          // TODO(rginda): This is where we end up for a v1 app's background\n          // page. Maybe windowType = 'none' would be more appropriate, or\n          // something.\n          hterm.windowType = 'normal';\n          return initMessageManager();\n        }\n      }\n\n      if (!hterm.defaultStorage) {\n        if (window.chrome && chrome.storage && chrome.storage.sync) {\n          hterm.defaultStorage = new lib.Storage.Chrome(chrome.storage.sync);\n        } else {\n          hterm.defaultStorage = new lib.Storage.Local();\n        }\n      }\n\n      return new Promise((resolve) => {\n        if (window.chrome && chrome.tabs) {\n          // The getCurrent method gets the tab that is \"currently running\",\n          // not the topmost or focused tab.\n          chrome.tabs.getCurrent((tab) => onTab(tab).then(resolve));\n        } else {\n          onWindow({type: 'normal'}).then(resolve);\n        }\n      });\n    });\n\n/**\n * Copy the specified text to the system clipboard.\n *\n * We'll create selections on demand based on the content to copy.\n *\n * @param {!Document} document The document with the selection to copy.\n * @param {string} str The string data to copy out.\n * @return {!Promise<void>}\n */\nhterm.copySelectionToClipboard = function(document, str) {\n  // Request permission if need be.\n  const requestPermission = () => {\n    // Use the Permissions API if available.\n    if (navigator.permissions && navigator.permissions.query) {\n      return navigator.permissions.query({name: 'clipboard-write'})\n        .then((status) => {\n          const checkState = (resolve, reject) => {\n            switch (status.state) {\n              case 'granted':\n                return resolve();\n              case 'denied':\n                return reject();\n              default:\n                // Wait for the user to approve/disprove.\n                return new Promise((resolve, reject) => {\n                  status.onchange = () => checkState(resolve, reject);\n                });\n            }\n          };\n\n          return new Promise(checkState);\n        })\n        // If the platform doesn't support \"clipboard-write\", or is denied,\n        // we move on to the copying step anyways.\n        .catch(() => Promise.resolve());\n    } else {\n      // No permissions API, so resolve right away.\n      return Promise.resolve();\n    }\n  };\n\n  // Write to the clipboard.\n  const writeClipboard = () => {\n    // Use the Clipboard API if available.\n    if (navigator.clipboard && navigator.clipboard.writeText) {\n      // If this fails (perhaps due to focus changing windows), fallback to the\n      // legacy copy method.\n      return navigator.clipboard.writeText(str)\n        .catch(execCommand);\n    } else {\n      // No Clipboard API, so use the old execCommand style.\n      return execCommand();\n    }\n  };\n\n  // Write to the clipboard using the legacy execCommand method.\n  // TODO: Once we can rely on the Clipboard API everywhere, we can simplify\n  // this a lot by deleting the custom selection logic.\n  const execCommand = () => {\n    const copySource = document.createElement('pre');\n    copySource.id = 'hterm:copy-to-clipboard-source';\n    copySource.textContent = str;\n    copySource.style.cssText = (\n        'user-select: text;' +\n        'position: absolute;' +\n        'top: -99px');\n\n    document.body.appendChild(copySource);\n\n    const selection = document.getSelection();\n    const anchorNode = selection.anchorNode;\n    const anchorOffset = selection.anchorOffset;\n    const focusNode = selection.focusNode;\n    const focusOffset = selection.focusOffset;\n\n    // FF sometimes throws NS_ERROR_FAILURE exceptions when we make this call.\n    // Catch it because a failure here leaks the copySource node.\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1178676\n    try {\n      selection.selectAllChildren(copySource);\n    } catch (ex) {\n      // FF workaround.\n    }\n\n    try {\n      document.execCommand('copy');\n    } catch (firefoxException) {\n      // Ignore this. FF throws an exception if there was an error, even\n      // though the spec says just return false.\n    }\n\n    // IE doesn't support selection.extend.  This means that the selection won't\n    // return on IE.\n    if (selection.extend) {\n      // When running in the test harness, we won't have any related nodes.\n      if (anchorNode) {\n        selection.collapse(anchorNode, anchorOffset);\n      }\n      if (focusNode) {\n        selection.extend(focusNode, focusOffset);\n      }\n    }\n\n    copySource.remove();\n\n    // Since execCommand is synchronous, resolve right away.\n    return Promise.resolve();\n  };\n\n  // Kick it all off!\n  return requestPermission().then(writeClipboard);\n};\n\n/**\n * Return a formatted message in the current locale.\n *\n * @param {string} name The name of the message to return.\n * @param {!Array<string>=} args The message arguments, if required.\n * @param {string=} string The default message text.\n * @return {string} The localized message.\n */\nhterm.msg = function(name, args = [], string = '') {\n  return hterm.messageManager.get('HTERM_' + name, args, string);\n};\n\n/**\n * Create a new notification.\n *\n * @param {{title:(string|undefined), body:(string|undefined)}=} params Various\n *     parameters for the notification.\n *     title The title (defaults to the window's title).\n *     body The message body (main text).\n * @return {!Notification}\n */\nhterm.notify = function(params) {\n  const def = (curr, fallback) => curr !== undefined ? curr : fallback;\n  if (params === undefined || params === null) {\n    params = {};\n  }\n\n  // Merge the user's choices with the default settings.  We don't take it\n  // directly in case it was stuffed with excess junk.\n  const options = {\n      'body': params.body,\n      'icon': def(params.icon, lib.resource.getDataUrl('hterm/images/icon-96')),\n  };\n\n  let title = def(params.title, window.document.title);\n  if (!title) {\n    title = 'hterm';\n  }\n  title = lib.f.replaceVars(hterm.desktopNotificationTitle, {'title': title});\n\n  const n = new Notification(title, options);\n  n.onclick = function() {\n    window.focus();\n    n.close();\n  };\n  return n;\n};\n\n/**\n * Launches url in a new tab.\n *\n * @param {string} url URL to launch in a new tab.\n */\nhterm.openUrl = function(url) {\n  if (window.chrome && chrome.browser && chrome.browser.openTab) {\n    // For Chrome v2 apps, we need to use this API to properly open windows.\n    chrome.browser.openTab({'url': url});\n  } else {\n    const win = lib.f.openWindow(url, '_blank');\n    win.focus();\n  }\n};\n\n/**\n * Tracks size of the terminal.\n *\n * Instances of this class have public read/write members for width and height.\n */\nhterm.Size = class {\n  /**\n   * @param {number} width The width of this record.\n   * @param {number} height The height of this record.\n   */\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Adjust the width and height of this record.\n   *\n   * @param {number} width The new width of this record.\n   * @param {number} height The new height of this record.\n   */\n  resize(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Return a copy of this record.\n   *\n   * @return {!hterm.Size} A new hterm.Size instance with the same width and\n   *     height.\n   */\n  clone() {\n    return new this.constructor(this.width, this.height);\n  }\n\n  /**\n   * Set the height and width of this instance based on another hterm.Size.\n   *\n   * @param {!hterm.Size} that The object to copy from.\n   */\n  setTo(that) {\n    this.width = that.width;\n    this.height = that.height;\n  }\n\n  /**\n   * Test if another hterm.Size instance is equal to this one.\n   *\n   * @param {!hterm.Size} that The other hterm.Size instance.\n   * @return {boolean} True if both instances have the same width/height, false\n   *     otherwise.\n   */\n  equals(that) {\n    return this.width == that.width && this.height == that.height;\n  }\n\n  /**\n   * Return a string representation of this instance.\n   *\n   * @return {string} A string that identifies the width and height of this\n   *     instance.\n   * @override\n   */\n  toString() {\n    return `[hterm.Size: ${this.width}, ${this.height}]`;\n  }\n};\n\n/**\n * Constructor for a hterm.RowCol record.\n *\n * Instances of this class have public read/write members for row and column.\n *\n * This class includes an 'overflow' bit which is use to indicate that an\n * attempt has been made to move the cursor column passed the end of the\n * screen.  When this happens we leave the cursor column set to the last column\n * of the screen but set the overflow bit.  In this state cursor movement\n * happens normally, but any attempt to print new characters causes a cr/lf\n * first.\n *\n */\nhterm.RowCol = class {\n  /**\n   * @param {number} row The row of this record.\n   * @param {number} column The column of this record.\n   * @param {boolean=} overflow Optional boolean indicating that the RowCol\n   *     has overflowed.\n   */\n  constructor(row, column, overflow = false) {\n    this.row = row;\n    this.column = column;\n    this.overflow = !!overflow;\n  }\n\n  /**\n   * Adjust the row and column of this record.\n   *\n   * @param {number} row The new row of this record.\n   * @param {number} column The new column of this record.\n   * @param {boolean=} overflow Optional boolean indicating that the RowCol\n   *     has overflowed.\n   */\n  move(row, column, overflow = false) {\n    this.row = row;\n    this.column = column;\n    this.overflow = !!overflow;\n  }\n\n  /**\n   * Return a copy of this record.\n   *\n   * @return {!hterm.RowCol} A new hterm.RowCol instance with the same row and\n   *     column.\n   */\n  clone() {\n    return new this.constructor(this.row, this.column, this.overflow);\n  }\n\n  /**\n   * Set the row and column of this instance based on another hterm.RowCol.\n   *\n   * @param {!hterm.RowCol} that The object to copy from.\n   */\n  setTo(that) {\n    this.row = that.row;\n    this.column = that.column;\n    this.overflow = that.overflow;\n  }\n\n  /**\n   * Test if another hterm.RowCol instance is equal to this one.\n   *\n   * @param {!hterm.RowCol} that The other hterm.RowCol instance.\n   * @return {boolean} True if both instances have the same row/column, false\n   *     otherwise.\n   */\n  equals(that) {\n    return (this.row == that.row && this.column == that.column &&\n            this.overflow == that.overflow);\n  }\n\n  /**\n   * Return a string representation of this instance.\n   *\n   * @return {string} A string that identifies the row and column of this\n   *     instance.\n   * @override\n   */\n  toString() {\n    return `[hterm.RowCol: ${this.row}, ${this.column}, ${this.overflow}]`;\n  }\n};\n// SOURCE FILE: hterm/js/hterm_accessibility_reader.js\n// Copyright 2018 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * AccessibilityReader responsible for rendering command output for AT.\n *\n * Renders command output for Assistive Technology using a live region. We don't\n * use the visible rows of the terminal for rendering command output to the\n * screen reader because the rendered content may be different from what we want\n * read out by a screen reader. For example, we may not actually render every\n * row of a large piece of output to the screen as it wouldn't be performant.\n * But we want the screen reader to read it all out in order.\n *\n * @param {!Element} div The div element where the live region should be\n *     added.\n * @constructor\n */\nhterm.AccessibilityReader = function(div) {\n  this.document_ = div.ownerDocument;\n\n  // The live region element to add text to.\n  const liveRegion = this.document_.createElement('div');\n  liveRegion.id = 'hterm:accessibility-live-region';\n  liveRegion.style.cssText = `position: absolute;\n                              width: 0; height: 0;\n                              overflow: hidden;\n                              left: -1000px; top: -1000px;`;\n  div.appendChild(liveRegion);\n\n  // Whether command output should be rendered for Assistive Technology.\n  // This isn't always enabled because it has an impact on performance.\n  this.accessibilityEnabled = false;\n\n  // This live element is used for command output.\n  this.liveElement_ = this.document_.createElement('p');\n  this.liveElement_.setAttribute('aria-live', 'polite');\n  liveRegion.appendChild(this.liveElement_);\n\n  // This live element is used for speaking out the current screen when\n  // navigating through the scrollback buffer. It will interrupt existing\n  // announcements.\n  this.assertiveLiveElement_ = this.document_.createElement('p');\n  this.assertiveLiveElement_.setAttribute('aria-live', 'assertive');\n  liveRegion.appendChild(this.assertiveLiveElement_);\n\n  // A queue of updates to announce.\n  this.queue_ = [];\n\n  // A timer which tracks when next to add items to the live region. null when\n  // not running. This is used to combine updates that occur in a small window,\n  // as well as to avoid too much output being added to the live region in one\n  // go which can cause the renderer to hang.\n  this.nextReadTimer_ = null;\n\n  // This is set to true if the cursor is about to update position on the\n  // screen. i.e. beforeCursorChange has been called but not afterCursorChange.\n  this.cursorIsChanging_ = false;\n\n  // This tracks changes that would be added to queue_ while the cursor is\n  // changing. This is done so that we can decide to discard these changes if\n  // we announce something as a result of the cursor change.\n  this.cursorChangeQueue_ = [];\n\n  // The string of text on the row that the cursor was last on. Only valid while\n  // cursorIsChanging_ is true.\n  this.lastCursorRowString_ = null;\n\n  // The row that the cursor was last on. Only valid while cursorIsChanging_ is\n  // true.\n  this.lastCursorRow_ = null;\n\n  // The column that the cursor was last on. Only valid while cursorIsChanging_\n  // is true.\n  this.lastCursorColumn_ = null;\n\n  // True if a keypress has been performed since the last cursor change.\n  this.hasUserGesture = false;\n};\n\n/**\n * Delay in ms to use for merging strings to output.\n *\n * We merge strings together to avoid hanging the terminal and to ensure that\n * aria updates make it to the screen reader. We want this to be short so\n * there's not a big delay between typing/executing commands and hearing output.\n *\n * @const\n * @type {number}\n */\nhterm.AccessibilityReader.DELAY = 50;\n\n/**\n * Enable accessibility-friendly features that have a performance impact.\n *\n * @param {boolean} enabled Whether to enable accessibility-friendly features.\n */\nhterm.AccessibilityReader.prototype.setAccessibilityEnabled =\n    function(enabled) {\n  if (!enabled) {\n    this.clear();\n  }\n\n  this.accessibilityEnabled = enabled;\n};\n\n/**\n * Decorate the document where the terminal <x-screen> resides. This is needed\n * for listening to keystrokes on the screen.\n *\n * @param {!Document} doc The document where the <x-screen> resides.\n */\nhterm.AccessibilityReader.prototype.decorate = function(doc) {\n  const handlers = ['keydown', 'keypress', 'keyup', 'textInput'];\n  handlers.forEach((handler) => {\n    doc.addEventListener(handler, () => { this.hasUserGesture = true; });\n  });\n};\n\n/**\n * This should be called before the cursor on the screen is about to get\n * updated. This allows cursor changes to be tracked and related notifications\n * to be announced.\n *\n * @param {string} cursorRowString The text in the row that the cursor is\n *     currently on.\n * @param {number} cursorRow The index of the row that the cursor is currently\n *     on, including rows in the scrollback buffer.\n * @param {number} cursorColumn The index of the column that the cursor is\n *     currently on.\n */\nhterm.AccessibilityReader.prototype.beforeCursorChange =\n    function(cursorRowString, cursorRow, cursorColumn) {\n  // If accessibility is enabled we don't announce selection changes as these\n  // can have a performance impact.\n  if (!this.accessibilityEnabled) {\n    return;\n  }\n\n  // If there is no user gesture that can be tied to the cursor change, we\n  // don't want to announce anything.\n  if (!this.hasUserGesture || this.cursorIsChanging_) {\n    return;\n  }\n\n  this.cursorIsChanging_ = true;\n  this.lastCursorRowString_ = cursorRowString;\n  this.lastCursorRow_ = cursorRow;\n  this.lastCursorColumn_ = cursorColumn;\n};\n\n/**\n * This should be called after the cursor on the screen has been updated. Note\n * that several updates to the cursor may have happened between\n * beforeCursorChange and afterCursorChange.\n *\n * This allows cursor changes to be tracked and related notifications to be\n * announced.\n *\n * @param {string} cursorRowString The text in the row that the cursor is\n *     currently on.\n * @param {number} cursorRow The index of the row that the cursor is currently\n *     on, including rows in the scrollback buffer.\n * @param {number} cursorColumn The index of the column that the cursor is\n *     currently on.\n */\nhterm.AccessibilityReader.prototype.afterCursorChange =\n    function(cursorRowString, cursorRow, cursorColumn) {\n  // This can happen if clear() is called midway through a cursor change.\n  if (!this.cursorIsChanging_) {\n    return;\n  }\n  this.cursorIsChanging_ = false;\n\n  if (!this.announceAction_(cursorRowString, cursorRow, cursorColumn)) {\n    // If we don't announce a special action, we re-queue all the output that\n    // was queued during the selection change.\n    for (let i = 0; i < this.cursorChangeQueue_.length; ++i) {\n      this.announce(this.cursorChangeQueue_[i]);\n    }\n  }\n\n  this.cursorChangeQueue_ = [];\n  this.lastCursorRowString_ = null;\n  this.lastCursorRow_ = null;\n  this.lastCursorColumn_ = null;\n  this.hasUserGesture = false;\n};\n\n/**\n * Announce the command output.\n *\n * @param {string} str The string to announce using a live region.\n */\nhterm.AccessibilityReader.prototype.announce = function(str) {\n  if (!this.accessibilityEnabled) {\n    return;\n  }\n\n  // If the cursor is in the middle of changing, we queue up the output\n  // separately as we may not want it to be announced if it's part of a cursor\n  // change announcement.\n  if (this.cursorIsChanging_) {\n    this.cursorChangeQueue_.push(str);\n    return;\n  }\n\n  // Don't append newlines to the queue if the queue is empty. It won't have any\n  // impact.\n  if (str == '\\n' && this.queue_.length > 0) {\n    this.queue_.push('');\n    // We don't need to trigger an announcement on newlines because they won't\n    // change the existing content that's output.\n    return;\n  }\n\n  if (this.queue_.length == 0) {\n    this.queue_.push(str);\n  } else {\n    // We put a space between strings that appear on the same line.\n    // TODO(raymes): We should check the location on the row and not add a space\n    // if the strings are joined together.\n    let padding = '';\n    if (this.queue_[this.queue_.length - 1].length != 0) {\n      padding = ' ';\n    }\n    this.queue_[this.queue_.length - 1] += padding + str;\n  }\n\n  // If we've already scheduled text being added to the live region, wait for it\n  // to happen.\n  if (this.nextReadTimer_) {\n    return;\n  }\n\n  // If there's only one item in the queue, we may get other text being added\n  // very soon after. In that case, wait a small delay so we can merge the\n  // related strings.\n  if (this.queue_.length == 1) {\n    this.nextReadTimer_ = setTimeout(this.addToLiveRegion_.bind(this),\n                                     hterm.AccessibilityReader.DELAY);\n  } else {\n    throw new Error(\n        'Expected only one item in queue_ or nextReadTimer_ to be running.');\n  }\n};\n\n/**\n * Voice an announcement that will interrupt other announcements.\n *\n * @param {string} str The string to announce using a live region.\n */\nhterm.AccessibilityReader.prototype.assertiveAnnounce = function(str) {\n  if (this.hasUserGesture && str == ' ') {\n    str = hterm.msg('SPACE_CHARACTER', [], 'Space');\n  }\n\n  // If the same string is announced twice, an attribute change won't be\n  // registered and the screen reader won't know that the string has changed.\n  // So we slightly change the string to ensure that the attribute change gets\n  // registered.\n  str = str.trim();\n  if (str == this.assertiveLiveElement_.innerText) {\n    str = '\\n' + str;\n  }\n\n  this.clear();\n  this.assertiveLiveElement_.innerText = str;\n};\n\n/**\n * Add a newline to the text that will be announced to the live region.\n */\nhterm.AccessibilityReader.prototype.newLine = function() {\n  this.announce('\\n');\n};\n\n/**\n * Clear the live region and any in-flight announcements.\n */\nhterm.AccessibilityReader.prototype.clear = function() {\n  this.liveElement_.innerText = '';\n  this.assertiveLiveElement_.innerText = '';\n  clearTimeout(this.nextReadTimer_);\n  this.nextReadTimer_ = null;\n  this.queue_ = [];\n\n  this.cursorIsChanging_ = false;\n  this.cursorChangeQueue_ = [];\n  this.lastCursorRowString_ = null;\n  this.lastCursorRow_ = null;\n  this.lastCursorColumn_ = null;\n  this.hasUserGesture = false;\n};\n\n/**\n * This will announce an action that is related to a cursor change, for example\n * when the user deletes a character we want the character deleted to be\n * announced. Similarly, when the user moves the cursor along the line, we want\n * the characters selected to be announced.\n *\n * Note that this function is a heuristic. Because of the nature of terminal\n * emulators, we can't distinguish input and output, which means we don't really\n * know what output is the result of a keypress and what isn't. Also in some\n * terminal applications certain announcements may make sense whereas others may\n * not. This function should try to account for the most common cases.\n *\n * @param {string} cursorRowString The text in the row that the cursor is\n *     currently on.\n * @param {number} cursorRow The index of the row that the cursor is currently\n *     on, including rows in the scrollback buffer.\n * @param {number} cursorColumn The index of the column that the cursor is\n *     currently on.\n * @return {boolean} Whether anything was announced.\n */\nhterm.AccessibilityReader.prototype.announceAction_ =\n    function(cursorRowString, cursorRow, cursorColumn) {\n  // If the cursor changes rows, we don't announce anything at present.\n  if (this.lastCursorRow_ != cursorRow) {\n    return false;\n  }\n\n  // The case when the row of text hasn't changed at all.\n  if (lib.notNull(this.lastCursorRowString_) === cursorRowString) {\n    // Moving the cursor along the line. We check that no significant changes\n    // have been queued. If they have, it may not just be a cursor movement and\n    // it may be better to read those out.\n    if (lib.notNull(this.lastCursorColumn_) !== cursorColumn &&\n        this.cursorChangeQueue_.join('').trim() == '') {\n      // Announce the text between the old cursor position and the new one.\n      const start = Math.min(this.lastCursorColumn_, cursorColumn);\n      const len = Math.abs(cursorColumn - this.lastCursorColumn_);\n      this.assertiveAnnounce(\n          lib.wc.substr(this.lastCursorRowString_, start, len));\n      return true;\n    }\n    return false;\n  }\n\n  // The case when the row of text has changed.\n  if (this.lastCursorRowString_ != cursorRowString) {\n    // Spacebar. We manually announce this character since the screen reader may\n    // not announce the whitespace in a live region.\n    if (this.lastCursorColumn_ + 1 == cursorColumn) {\n      if (lib.wc.substr(cursorRowString, cursorColumn - 1, 1) == ' ' &&\n          this.cursorChangeQueue_.length > 0 &&\n          this.cursorChangeQueue_[0] == ' ') {\n        this.assertiveAnnounce(' ');\n        return true;\n      }\n    }\n\n    // Backspace and deletion.\n    // The position of the characters deleted is right after the current\n    // position of the cursor in the case of backspace and delete.\n    const cursorDeleted = cursorColumn;\n    // Check that the current row string is shorter than the previous. Also\n    // check that the start of the strings (up to the cursor) match.\n    if (lib.wc.strWidth(cursorRowString) <=\n        lib.wc.strWidth(this.lastCursorRowString_) &&\n        lib.wc.substr(this.lastCursorRowString_, 0, cursorDeleted) ==\n        lib.wc.substr(cursorRowString, 0, cursorDeleted)) {\n      // Find the length of the current row string ignoring space characters.\n      // These may be inserted at the end of the string when deleting characters\n      // so they should be ignored.\n      let lengthOfCurrentRow = lib.wc.strWidth(cursorRowString);\n      for (; lengthOfCurrentRow > 0; --lengthOfCurrentRow) {\n        if (lengthOfCurrentRow == cursorDeleted ||\n            lib.wc.substr(cursorRowString, lengthOfCurrentRow - 1, 1) != ' ') {\n          break;\n        }\n      }\n\n      const numCharsDeleted =\n          lib.wc.strWidth(this.lastCursorRowString_) - lengthOfCurrentRow;\n\n      // Check that the end of the strings match.\n      const lengthOfEndOfString = lengthOfCurrentRow - cursorDeleted;\n      const endOfLastRowString = lib.wc.substr(\n          this.lastCursorRowString_, cursorDeleted + numCharsDeleted,\n          lengthOfEndOfString);\n      const endOfCurrentRowString =\n          lib.wc.substr(cursorRowString, cursorDeleted, lengthOfEndOfString);\n      if (endOfLastRowString == endOfCurrentRowString) {\n        const deleted = lib.wc.substr(\n            this.lastCursorRowString_, cursorDeleted, numCharsDeleted);\n        if (deleted != '') {\n          this.assertiveAnnounce(deleted);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  return false;\n};\n\n/**\n * Add text from queue_ to the live region.\n *\n */\nhterm.AccessibilityReader.prototype.addToLiveRegion_ = function() {\n  this.nextReadTimer_ = null;\n\n  let str = this.queue_.join('\\n').trim();\n\n  // If the same string is announced twice, an attribute change won't be\n  // registered and the screen reader won't know that the string has changed.\n  // So we slightly change the string to ensure that the attribute change gets\n  // registered.\n  if (str == this.liveElement_.innerText) {\n    str = '\\n' + str;\n  }\n\n  this.liveElement_.innerText = str;\n  this.queue_ = [];\n};\n// SOURCE FILE: hterm/js/hterm_contextmenu.js\n// Copyright 2018 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview Context menu handling.\n */\n\n/**\n * Manage the context menu usually shown when right clicking.\n *\n * @constructor\n */\nhterm.ContextMenu = function() {\n  // The document that contains this context menu.\n  this.document_ = null;\n  // The generated context menu (i.e. HTML elements).\n  this.element_ = null;\n  // The structured menu (i.e. JS objects).\n  /** @type {!Array<!hterm.ContextMenu.Item>} */\n  this.menu_ = [];\n};\n\n/** @typedef {{name:(string|symbol), action:function(!Event)}} */\nhterm.ContextMenu.Item;\n\n/**\n * Constant to add a separator to the context menu.\n */\nhterm.ContextMenu.SEPARATOR = Symbol('-');\n\n/**\n * Bind context menu to a specific document element.\n *\n * @param {!Document} document The document to use when creating elements.\n */\nhterm.ContextMenu.prototype.setDocument = function(document) {\n  if (this.element_) {\n    this.element_.remove();\n    this.element_ = null;\n  }\n  this.document_ = document;\n  this.regenerate_();\n  this.document_.body.appendChild(this.element_);\n};\n\n/**\n * Regenerate the HTML elements based on internal menu state.\n */\nhterm.ContextMenu.prototype.regenerate_ = function() {\n  if (!this.element_) {\n    this.element_ = this.document_.createElement('menu');\n    this.element_.id = 'hterm:context-menu';\n  } else {\n    this.hide();\n  }\n\n  // Clear out existing menu entries.\n  while (this.element_.firstChild) {\n    this.element_.removeChild(this.element_.firstChild);\n  }\n\n  this.menu_.forEach(({name, action}) => {\n    const menuitem = this.document_.createElement('menuitem');\n    if (name === hterm.ContextMenu.SEPARATOR) {\n      menuitem.innerHTML = '<hr>';\n      menuitem.className = 'separator';\n    } else {\n      menuitem.innerText = name;\n      menuitem.addEventListener('mousedown', function(e) {\n        e.preventDefault();\n        action(e);\n      });\n    }\n    this.element_.appendChild(menuitem);\n  });\n};\n\n/**\n * Set all the entries in the context menu.\n *\n * This is an array of arrays.  The first element in the array is the string to\n * display while the second element is the function to call.\n *\n * The first element may also be the SEPARATOR constant to add a separator.\n *\n * This resets all existing menu entries.\n *\n * @param {!Array<!hterm.ContextMenu.Item>} items The menu entries.\n */\nhterm.ContextMenu.prototype.setItems = function(items) {\n  this.menu_ = items;\n  this.regenerate_();\n};\n\n/**\n * Show the context menu.\n *\n * The event is used to determine where to show the menu.\n *\n * If no menu entries are defined, then nothing will be shown.\n *\n * @param {!Event} e The event triggering this display.\n * @param {!hterm.Terminal=} terminal The terminal object to get style info\n *     from.\n */\nhterm.ContextMenu.prototype.show = function(e, terminal) {\n  // If there are no menu entries, then don't try to show anything.\n  if (this.menu_.length == 0) {\n    return;\n  }\n\n  // If we have the terminal, sync the style preferences over.\n  if (terminal) {\n    this.element_.style.fontSize = terminal.getFontSize();\n    this.element_.style.fontFamily = terminal.getFontFamily();\n  }\n\n  this.element_.style.top = `${e.clientY}px`;\n  this.element_.style.left = `${e.clientX}px`;\n  const docSize = this.document_.body.getBoundingClientRect();\n\n  this.element_.style.display = 'block';\n\n  // We can't calculate sizes until after it's displayed.\n  const eleSize = this.element_.getBoundingClientRect();\n  // Make sure the menu isn't clipped outside of the current element.\n  const minY = Math.max(0, docSize.height - eleSize.height);\n  const minX = Math.max(0, docSize.width - eleSize.width);\n  if (minY < e.clientY) {\n    this.element_.style.top = `${minY}px`;\n  }\n  if (minX < e.clientX) {\n    this.element_.style.left = `${minX}px`;\n  }\n};\n\n/**\n * Hide the context menu.\n */\nhterm.ContextMenu.prototype.hide = function() {\n  if (!this.element_) {\n    return;\n  }\n\n  this.element_.style.display = 'none';\n};\n// SOURCE FILE: hterm/js/hterm_find_bar.js\n// Copyright 2020 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview Find bar handling.\n */\n\n/**\n * Manage the find bar.\n *\n * @param {!hterm.Terminal} terminal\n * @constructor\n */\nhterm.FindBar = function(terminal) {\n  /**\n   * @private {!hterm.Terminal}\n   * @const\n   */\n  this.terminal_ = terminal;\n\n  /**\n   * @private {!hterm.ScrollPort}\n   * @const\n   */\n  this.scrollPort_ = terminal.getScrollPort();\n\n  /** @private {?Element} */\n  this.findBar_ = null;\n\n  /** @private {?Element} */\n  this.input_ = null;\n\n  /**\n   * True if find bar input has focus.\n   *\n   * @type {boolean}\n   */\n  this.hasFocus = false;\n\n  /** @private {?Element} */\n  this.upArrowButton_ = null;\n\n  /** @private {?Element} */\n  this.downArrowButton_ = null;\n\n  /** @private {?Element} */\n  this.closeButton_ = null;\n\n  /** @private {?Element} */\n  this.counterLabel_ = null;\n\n  /**\n   * Stores current search results mapping row number to row results.\n   * Also works as cache for find-rows.\n   *\n   * @private {!Object<number, !hterm.FindBar.RowResult>}\n   */\n  this.results_ = {};\n\n  /**\n   * Timeout ID of pending find batch to run.\n   * Null indicates no search in progress.\n   *\n   * @private {?number}\n   */\n  this.pendingFind_ = null;\n\n  /**\n   * Timeout ID of pending redraw.\n   * Null indicates no redraw is scheduled.\n   *\n   * @private {?number}\n   */\n  this.pendingRedraw_ = null;\n\n  /**\n   * Timeout ID of pending row changes.\n   * Null indicates no row change is scheduled.\n   *\n   * @private {?number}\n   */\n  this.pendingNotifyChanges_ = null;\n\n  /**\n   * List of rows which are changed on terminal.\n   *\n   * @private {!Set<number>}\n   * @const\n   */\n  this.changedRows_ = new Set();\n\n  /**\n   * Lower case of find input field.\n   *\n   * @private {string}\n   */\n  this.searchText_ = '';\n\n  /** @private {number} */\n  this.batchRow_ = 0;\n\n  /** @private {number} */\n  this.batchNum_ = 0;\n\n  /**\n   * Callbacks to run after the specified batch. Used for testing.\n   *\n   * @private {!Object<number, function()>}\n   * @const\n   */\n  this.batchCallbacksForTest_ = {};\n\n  /** @type {number} */\n  this.batchSize = 500;\n\n  /**\n   * Findbar is visible or not.\n   *\n   * @type {boolean}\n   */\n  this.isVisible = false;\n\n  /**\n   * Keep track of visible rows.\n   *\n   * @private {!Array<!Element>}\n   */\n  this.visibleRows_ = [];\n\n  /**\n   * Listens for scroll events and redraws results.\n   *\n   * @private {function()}\n   * @const\n   */\n  this.onScroll_ = this.scheduleRedraw_.bind(this);\n\n  /**\n   * Row number of selected result.\n   *\n   * @private {number}\n   */\n  this.selectedRowNum_ = 0;\n\n  /**\n   * Index of selected result in its row.\n   *\n   * @private {number}\n   */\n  this.selectedRowIndex_ = 0;\n\n  /**\n   * Index of selected result among all results.\n   * -1 indicates that there is no current selected result.\n   *\n   * @private {number}\n   */\n  this.selectedOrdinal_ = -1;\n\n  /** @private {number} */\n  this.resultCount_ = 0;\n\n  /**\n   * Search match which is currently selected and will have a different\n   * highlight color.\n   *\n   * @private {?Element}\n   */\n  this.selectedResult_ = null;\n\n  /**\n   * Sorted list of matching row numbers.\n   *\n   * @private {!Array<number>}\n   * @const\n   */\n  this.matchingRowsIndex_ = [];\n\n  /**\n   * Set to false when the line with the current selected result is\n   * changed by the terminal and there is no longer a match on that line.\n   * This will be set back to true when the user next selects up or down.\n   *\n   * @private {boolean}\n   */\n  this.selectedResultKnown_ = true;\n};\n\n/** @typedef {{findRow: ?Element, rowResult: !Array<!hterm.FindBar.Result>}} */\nhterm.FindBar.RowResult;\n\n/** @typedef {{index: number, highlighter: ?Element}} */\nhterm.FindBar.Result;\n\n/**\n * Add find bar to the terminal.\n *\n * @param {!Document} document\n */\nhterm.FindBar.prototype.decorate = function(document) {\n  this.findBar_ = document.createElement('div');\n  this.findBar_.id = 'hterm:find-bar';\n  this.findBar_.setAttribute('aria-hidden', 'true');\n  this.findBar_.innerHTML = lib.resource.getData('hterm/html/find_bar');\n\n  this.input_ = this.findBar_.querySelector('input');\n  this.upArrowButton_ = this.findBar_.querySelector('#hterm\\\\:find-bar-up');\n  this.downArrowButton_ = this.findBar_.querySelector('#hterm\\\\:find-bar-down');\n  this.closeButton_ = this.findBar_.querySelector('#hterm\\\\:find-bar-close');\n  this.counterLabel_ = this.findBar_.querySelector('#hterm\\\\:find-bar-count');\n\n  // Add aria-label and svg icons.\n  this.upArrowButton_.innerHTML = lib.resource\n      .getData('hterm/images/keyboard_arrow_up');\n  this.downArrowButton_.innerHTML = lib.resource\n      .getData('hterm/images/keyboard_arrow_down');\n  this.closeButton_.innerHTML = lib.resource.getData('hterm/images/close');\n\n  this.upArrowButton_.setAttribute('aria-label', hterm.msg('BUTTON_PREVIOUS'));\n  this.downArrowButton_.setAttribute('aria-label', hterm.msg('BUTTON_NEXT'));\n  this.input_.setAttribute('aria-label', hterm.msg('BUTTON_FIND'));\n  this.closeButton_.setAttribute('aria-label', hterm.msg('BUTTON_CLOSE'));\n\n  // Add event listeners to the elements.\n  const el = (e) => /** @type {!EventListener} */ (e.bind(this));\n  this.input_.addEventListener('input', el(this.onInput_));\n  this.input_.addEventListener('keydown', el(this.onKeyDown_));\n  this.input_.addEventListener('keypress', el(this.onKeyPressed_));\n  this.input_.addEventListener('textInput', el(this.onInputText_));\n  this.input_.addEventListener('focus', el(() => { this.hasFocus = true; }));\n  this.input_.addEventListener('blur', el(() => { this.hasFocus = false; }));\n  this.closeButton_.addEventListener('click', el(this.close));\n  this.upArrowButton_.addEventListener('click', el(this.onPrevious_));\n  this.downArrowButton_.addEventListener('click', el(this.onNext_));\n\n  document.body.appendChild(this.findBar_);\n\n  this.resultScreen_ = document.createElement('div');\n  this.resultScreen_.id = 'hterm:find-result-screen';\n  this.resultScreen_.innerHTML = lib.resource.getData('hterm/html/find_screen');\n  this.resultScreen_.style.display = 'none';\n  document.body.appendChild(this.resultScreen_);\n};\n\n/**\n * Display find bar.\n */\nhterm.FindBar.prototype.display = function() {\n  this.scrollPort_.subscribe('scroll', this.onScroll_);\n\n  this.findBar_.classList.add('enabled');\n  this.findBar_.removeAttribute('aria-hidden');\n  this.input_.focus();\n  this.resultScreen_.style.display = '';\n  this.isVisible = true;\n\n  // Start searching for stored text in findbar.\n  this.input_.dispatchEvent(new Event('input'));\n};\n\n/**\n * Close find bar.\n */\nhterm.FindBar.prototype.close = function() {\n  // Clear all results of findbar.\n  this.resultScreen_.style.display = 'none';\n\n  this.scrollPort_.unsubscribe('scroll', this.onScroll_);\n\n  this.findBar_.classList.remove('enabled');\n  this.findBar_.setAttribute('aria-hidden', 'true');\n  this.terminal_.focus();\n  this.isVisible = false;\n\n  this.stopSearch();\n  this.results_ = {};\n  this.resultCount_ = 0;\n};\n\n/**\n * Clears any pending find batch.\n */\nhterm.FindBar.prototype.stopSearch = function() {\n  if (this.pendingFind_ !== null) {\n    clearTimeout(this.pendingFind_);\n    this.pendingFind_ = null;\n  }\n  this.runBatchCallbackForTest_(0);\n};\n\n/**\n * Enable batch-wise searching when search text changes.\n */\nhterm.FindBar.prototype.syncResults_ = function() {\n  this.batchRow_ = 0;\n  this.batchNum_ = 0;\n  this.results_ = {};\n  this.resultCount_ = 0;\n  this.matchingRowsIndex_.length = 0;\n  this.redraw_();\n  this.updateCounterLabel_();\n\n  // No input means no result. Just redraw the results.\n  if (!this.searchText_) {\n    return;\n  }\n\n  const rowCount = this.terminal_.getRowCount();\n  const runNextBatch = () => {\n    const batchEnd = Math.min(this.batchRow_ + this.batchSize, rowCount);\n    while (this.batchRow_ < batchEnd) {\n      // Matching rows are pushed in order of searching to keep list sorted.\n      if (this.findInRow_(this.batchRow_)) {\n        this.matchingRowsIndex_.push(this.batchRow_);\n      }\n      this.batchRow_++;\n    }\n    if (this.batchRow_ < rowCount) {\n      this.pendingFind_ = setTimeout(runNextBatch);\n    } else {\n      this.stopSearch();\n    }\n    ++this.batchNum_;\n    this.runBatchCallbackForTest_(this.batchNum_);\n    this.updateCounterLabel_();\n  };\n  runNextBatch();\n};\n\n/**\n * Find the results for a particular row and set them in result map.\n * TODO(crbug.com/209178): Add support for overflowed rows.\n *\n * @param {number} rowNum\n * @param {boolean=} update True if row should be updated.\n * @return {boolean} True if there is a match.\n */\nhterm.FindBar.prototype.findInRow_ = function(rowNum, update = false) {\n  if (!this.searchText_) {\n    return false;\n  }\n\n  const prev = this.results_[rowNum];\n  if (prev && !update) {\n    return true;\n  }\n\n  const rowText = this.terminal_.getRowText(rowNum).toLowerCase();\n  const rowResult = [];\n\n  let i;\n  let startIndex = 0;\n  // Find and create highlight for matching texts.\n  while ((i = rowText.indexOf(this.searchText_, startIndex)) != -1) {\n    rowResult.push({index: i, highlighter: null});\n    startIndex = i + this.searchText_.length;\n  }\n\n  if (rowResult.length) {\n    this.results_[rowNum] = {findRow: null, rowResult};\n    if (this.resultCount_ === 0) {\n      this.selectedRowNum_ = rowNum;\n      this.selectedOrdinal_ = 0;\n      this.upArrowButton_.classList.add('enabled');\n      this.downArrowButton_.classList.add('enabled');\n      this.scrollToResult_();\n    }\n  } else {\n    delete this.results_[rowNum];\n  }\n\n  // Update the matchCount.\n  const diff = rowResult.length - (prev ? prev.rowResult.length : 0);\n  this.resultCount_ += diff;\n  if (rowNum < this.selectedRowNum_) {\n    this.selectedOrdinal_ += diff;\n  }\n\n  return rowResult.length > 0;\n};\n\n/**\n * @param {!Event} event The event triggered on input in find bar.\n */\nhterm.FindBar.prototype.onInput_ = function(event) {\n  this.searchText_ = event.target.value.toLowerCase();\n\n  // If a batch is already pending, reset it.\n  clearTimeout(this.pendingFind_);\n  this.pendingFind_ = setTimeout(() => this.syncResults_());\n};\n\n/**\n * @param {!Event} event The event triggered on key press in find bar.\n */\nhterm.FindBar.prototype.onKeyPressed_ = function(event) {\n  event.stopPropagation();\n};\n\n/**\n * @param {!Event} event The event triggered on text input in find bar.\n */\nhterm.FindBar.prototype.onInputText_ = function(event) {\n  event.stopPropagation();\n};\n\n/**\n * @param {!Event} event The event triggered on keydown in find bar.\n */\nhterm.FindBar.prototype.onKeyDown_ = function(event) {\n  if (event.metaKey || event.altKey) {\n    event.stopPropagation();\n    return;\n  }\n  if (event.key == 'Escape') {\n    this.close();\n  }\n  if (event.key == 'Enter') {\n    if (event.shiftKey) {\n      this.onPrevious_();\n    } else {\n      this.onNext_();\n    }\n  }\n  // keyCode for G.\n  if (event.ctrlKey && event.keyCode == 71) {\n    if (event.shiftKey) {\n      this.onPrevious_();\n    } else {\n      this.onNext_();\n    }\n    event.preventDefault();\n  }\n  // Stop Ctrl+F inside hterm find input opening browser find.\n  // keyCode for F.\n  if (event.ctrlKey && event.keyCode == 70) {\n    event.preventDefault();\n  }\n  event.stopPropagation();\n};\n\n/**\n * Set the background color to highlight find results.\n *\n * @param {string=} color The color to set.  If not defined, we reset to the\n *     saved user preference.\n */\nhterm.FindBar.prototype.setFindResultColor = function(color) {\n  if (color === undefined) {\n    color = this.terminal_.getPrefs().getString('find-result-color');\n  }\n\n  this.terminal_.setCssVar('find-result-color', color);\n};\n\n/**\n * Set the background color to highlight the selected find result.\n *\n * @param {string=} color The color to set.  If not defined, we reset to the\n *     saved user preference.\n */\nhterm.FindBar.prototype.setFindResultSelectedColor =\n    function(color = undefined) {\n  if (color === undefined) {\n    color = this.terminal_.getPrefs().getString('find-result-selected-color');\n  }\n\n  this.terminal_.setCssVar('find-result-selected-color', color);\n};\n\n/**\n * Register a callback to be run after the specified batch (1-based).\n * Use batchNum 0 to set a callback to be run when search stops.\n * Used for testing.\n *\n * @param {number} batchNum\n * @param {function()} callback\n */\nhterm.FindBar.prototype.setBatchCallbackForTest = function(batchNum, callback) {\n  this.batchCallbacksForTest_[batchNum] = callback;\n};\n\n/**\n * Redraws the results of findbar on find result screen.\n */\nhterm.FindBar.prototype.redraw_ = function() {\n  const topRowIndex = this.scrollPort_.getTopRowIndex();\n  const bottomRowIndex = this.scrollPort_.getBottomRowIndex(topRowIndex);\n\n  // Clear the find result screen.\n  this.visibleRows_.forEach((row) => {\n    row.remove();\n  });\n  this.visibleRows_ = [];\n\n  for (let rowNum = topRowIndex; rowNum <= bottomRowIndex; rowNum++) {\n    const newRow = this.fetchRowNode_(rowNum);\n    this.resultScreen_.appendChild(newRow);\n    this.visibleRows_.push(newRow);\n  }\n\n  delete this.pendingRedraw_;\n  this.highlightSelectedResult_();\n};\n\n/**\n * Fetch find row element. If find-row is not available in results, it creates\n * a new one and store it in results.\n *\n * @param {number} rowNum\n * @return {!Element}\n */\nhterm.FindBar.prototype.fetchRowNode_ = function(rowNum) {\n  // Process row if batch hasn't yet got to it.\n  if (rowNum >= this.batchRow_) {\n    this.findInRow_(rowNum);\n  }\n  const row = this.results_[rowNum];\n  if (row && row.findRow) {\n    return row.findRow;\n  }\n\n  // Create a new find-row.\n  const findRow = this.terminal_.getDocument().createElement('find-row');\n  if (!row) {\n    return findRow;\n  }\n  row.rowResult.forEach((result) => {\n    const highlighter = this.terminal_.getDocument().createElement('div');\n    highlighter.classList.add('find-highlighter');\n    highlighter.style.left =\n        `calc(var(--hterm-charsize-width) * ${result.index})`;\n    highlighter.style.width =\n       `calc(var(--hterm-charsize-width) * ${this.searchText_.length})`;\n    result.highlighter = highlighter;\n    findRow.appendChild(highlighter);\n  });\n  return row.findRow = findRow;\n};\n\n/**\n * Synchronize redrawing of search results present on the screen.\n *\n * The sync will happen asynchronously, soon after the call stack winds down.\n * Multiple calls will be coalesced into a single sync.\n */\nhterm.FindBar.prototype.scheduleRedraw_ = function() {\n  if (this.pendingRedraw_) {\n    return;\n  }\n  this.pendingRedraw_ = setTimeout(() => {\n    this.redraw_();\n  });\n};\n\n/**\n * Runs the specified batch callback if it exists and removes it.\n *\n * @param {number} batchNum\n * @private\n */\nhterm.FindBar.prototype.runBatchCallbackForTest_ = function(batchNum) {\n  const callback = this.batchCallbacksForTest_[batchNum];\n  if (callback) {\n    callback();\n    delete this.batchCallbacksForTest_[batchNum];\n  }\n};\n\n/**\n * Update the counterLabel for findbar.\n */\nhterm.FindBar.prototype.updateCounterLabel_ = function() {\n  // Reset the counterLabel if no results are present.\n  if (this.resultCount_ === 0) {\n    this.selectedRowNum_ = 0;\n    this.selectedRowIndex_ = 0;\n    this.selectedOrdinal_ = -1;\n    this.selectedResultKnown_ = true;\n    this.upArrowButton_.classList.remove('enabled');\n    this.downArrowButton_.classList.remove('enabled');\n  }\n   // Update the counterLabel.\n  if (this.selectedResultKnown_) {\n    this.counterLabel_.textContent = hterm.msg(\n        'FIND_COUNTER_LABEL', [this.selectedOrdinal_ + 1, this.resultCount_]);\n  } else {\n    this.counterLabel_.textContent = hterm.msg(\n        'FIND_RESULT_COUNT', [this.resultCount_]);\n  }\n  this.highlightSelectedResult_();\n};\n\n/**\n * Returns the largest index of arr with arr[index] <= value, or -1.\n *\n * @param {!Array<number>} arr Array to be searched\n * @param {number} value\n * @return {number}\n */\nhterm.FindBar.indexOf = function(arr, value) {\n  let index = -1;\n  let low = 0;\n  let high = arr.length - 1;\n  while (low <= high) {\n    const mid = Math.floor((low + high) / 2);\n    if (arr[mid] <= value) {\n      index = mid;\n      low = mid + 1;\n    } else {\n      high = mid - 1;\n    }\n  }\n  return index;\n};\n\n/**\n * Returns true if matchingRowsIndex_ index can be used to find next\n * via binary search.\n *\n * @private\n * @param {number} step 1 to find next in down direction, -1 to find next in up\n *     direction\n * @return {boolean}\n */\nhterm.FindBar.prototype.canUseMatchingRowsIndex_ = function(step) {\n  // We can use the matchingRowsIndex_ index to find next via binary search\n  // if either all batches are done, or if selectedRowNum_ is within the index.\n  const topRowIndex = this.scrollPort_.getTopRowIndex();\n  const bottomRowIndex = this.scrollPort_.getBottomRowIndex(topRowIndex);\n  const index = this.matchingRowsIndex_;\n  const current = this.selectedRowNum_;\n\n  return this.batchRow_ > bottomRowIndex ||\n      (step > 0 && current < index[index.length - 1]) ||\n      (step < 0 && current < this.batchRow_ && current > index[0]);\n};\n\n/**\n * Select the next matching row from the current selected row in either up or\n * down direction. If batch searching is complete, moving between\n * results can be done by finding the adjacent item in matchingRowsIndex_.\n * When batching is not yet complete, we will use matchingRowsIndex_ when we\n * can, and also do a brute force search across the current visible screen,\n * but we will not allow the user to select results that are outside of the\n * visible screen, or the index.\n *\n * @param {number} step 1 to find next in down direction, -1 to find next in up\n *     direction.\n */\nhterm.FindBar.prototype.selectNext_ = function(step) {\n  // Increment/decrement i by s modulo len.\n  const circularStep = (i, s, len) => (i + s + len) % len;\n  const stepOnce = (prev, next) => step > 0 ? prev : next;\n\n  const row = this.results_[this.selectedRowNum_];\n  if (row && row.rowResult[this.selectedRowIndex_ + step] !== undefined) {\n    // Move to another match on the same row.\n    this.selectedRowIndex_ += step;\n  } else {\n    let topRowIndex = this.scrollPort_.getTopRowIndex();\n    const bottomRowIndex = this.scrollPort_.getBottomRowIndex(topRowIndex);\n    const index = this.matchingRowsIndex_;\n    const current = this.selectedRowNum_;\n\n    if (this.canUseMatchingRowsIndex_(step)) {\n      let i = hterm.FindBar.indexOf(index, current);\n      if (!this.selectedResultKnown_ && step < 0) {\n        i++;\n      }\n      this.selectedRowNum_ = index[circularStep(i, step, index.length)];\n    } else {\n      // Not using the index, so brute force search in visible screen.\n      let start = current + step;\n      // If outside visible screen, then move to the boundary, but first adjust\n      // topRowIndex for if a batch has partially covered the screen.\n      topRowIndex = Math.max(topRowIndex, this.batchRow_);\n      if (current < topRowIndex || current > bottomRowIndex) {\n        start = stepOnce(topRowIndex, bottomRowIndex);\n      }\n      const end = stepOnce(bottomRowIndex + 1, topRowIndex - 1);\n\n      // If we don't end up finding anything, use the first or last in index.\n      // If the index is empty, stay where we are.\n      if (index.length > 0) {\n        this.selectedRowNum_ = index[stepOnce(0, index.length - 1)];\n      }\n      for (let i = start; i != end; i += step) {\n        if (this.results_[i]) {\n          this.selectedRowNum_ = i;\n          break;\n        }\n      }\n    }\n    const row = this.results_[this.selectedRowNum_];\n    this.selectedRowIndex_ = stepOnce(0, row.rowResult.length - 1);\n  }\n\n  // If the previous selected result was deleted and we move down,\n  // then ordinal stays the same.\n  const s = !this.selectedResultKnown_ && step > 0 ? 0 : step;\n  this.selectedOrdinal_ = circularStep(\n      this.selectedOrdinal_, s, this.resultCount_);\n\n  this.selectedResultKnown_ = true;\n  this.scrollToResult_();\n  this.updateCounterLabel_();\n};\n\n/**\n * Select the next match.\n */\nhterm.FindBar.prototype.onNext_ = function() {\n  if (!this.downArrowButton_.classList.contains('enabled')) {\n    return;\n  }\n  this.selectNext_(1);\n};\n\n/**\n * Select the previous match.\n */\nhterm.FindBar.prototype.onPrevious_ = function() {\n  if (!this.upArrowButton_.classList.contains('enabled')) {\n    return;\n  }\n  this.selectNext_(-1);\n};\n\n/**\n * Scroll the terminal up/down depending upon the row of selected result.\n */\nhterm.FindBar.prototype.scrollToResult_ = function() {\n  const topRowIndex = this.scrollPort_.getTopRowIndex();\n  const bottomRowIndex = this.scrollPort_.getBottomRowIndex(topRowIndex);\n\n  if (this.selectedRowNum_ < topRowIndex ||\n      this.selectedRowNum_ > bottomRowIndex) {\n    this.scrollPort_.scrollRowToMiddle(this.selectedRowNum_);\n  }\n};\n\n/**\n * Sets CSS to highlight selected result.\n */\nhterm.FindBar.prototype.highlightSelectedResult_ = function() {\n  // Remove selected result.\n  if (this.selectedResult_) {\n    this.selectedResult_.classList.remove('selected');\n    this.selectedResult_ = null;\n  }\n\n  // Select new instance of result.\n  if (this.resultCount_ && this.selectedResultKnown_) {\n    this.selectedResult_ = this.results_[this.selectedRowNum_]\n        .rowResult[this.selectedRowIndex_].highlighter;\n    if (this.selectedResult_) {\n      this.selectedResult_.classList.add('selected');\n    }\n  }\n};\n\n/**\n * Synchronize changing of rows on terminal.\n *\n * The sync will happen asynchronously, soon after the call stack winds down.\n * Multiple calls will be coalesced into a single sync.\n *\n * @param {number} rowNum\n */\nhterm.FindBar.prototype.scheduleNotifyChanges = function(rowNum) {\n  if (!this.isVisible) {\n    return;\n  }\n  this.changedRows_.add(rowNum);\n  if (this.pendingNotifyChanges_) {\n    return;\n  }\n\n  this.pendingNotifyChanges_ = setTimeout(() => {\n    this.notifyChanges_();\n  });\n};\n\n/**\n * Change results of all changed rows.\n */\nhterm.FindBar.prototype.notifyChanges_ = function() {\n  this.changedRows_.forEach((rowNum) => {\n    rowNum += this.scrollPort_.getTopRowIndex();\n    const prev = this.results_[rowNum];\n    const found = this.findInRow_(rowNum, true);\n    if (this.selectedRowNum_ == rowNum) {\n      // If selected row is modified the first result of the row is selected.\n      this.selectedOrdinal_ -= this.selectedRowIndex_;\n      this.selectedRowIndex_ = 0;\n      this.selectedResultKnown_ = found;\n    }\n\n    // Update the index if the changed row needs to be added or removed.\n    if (!!prev !== found) {\n      const i = hterm.FindBar.indexOf(this.matchingRowsIndex_, rowNum);\n      if (found) {\n        this.matchingRowsIndex_.splice(i + 1, 0, rowNum);\n      } else {\n        this.matchingRowsIndex_.splice(i, 1);\n      }\n    }\n  });\n\n  this.updateCounterLabel_();\n  this.redraw_();\n  this.changedRows_.clear();\n  delete this.pendingNotifyChanges_;\n};\n// SOURCE FILE: hterm/js/hterm_frame.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * First draft of the interface between the terminal and a third party dialog.\n *\n * This is rough.  It's just the terminal->dialog layer.  To complete things\n * we'll also need a command->terminal layer.  That will have to facilitate\n * command->terminal->dialog or direct command->dialog communication.\n *\n * I imagine this class will change significantly when that happens.\n */\n\n/**\n * Construct a new frame for the given terminal.\n *\n * @param {!hterm.Terminal} terminal The parent terminal object.\n * @param {string} url The url to load in the frame.\n * @param {!Object=} options Optional options for the frame.  Not implemented.\n * @constructor\n */\nhterm.Frame = function(terminal, url, options = {}) {\n  this.terminal_ = terminal;\n  this.div_ = terminal.div_;\n  this.url = url;\n  this.options = options;\n  this.iframe_ = null;\n  this.container_ = null;\n  this.messageChannel_ = null;\n};\n\n/**\n * Handle messages from the iframe.\n *\n * @param {!MessageEvent} e The message to process.\n */\nhterm.Frame.prototype.onMessage_ = function(e) {\n  switch (e.data.name) {\n    case 'ipc-init-ok':\n      // We get this response after we send them ipc-init and they finish.\n      this.sendTerminalInfo_();\n      return;\n    case 'terminal-info-ok':\n      // We get this response after we send them terminal-info and they finish.\n      // Show the finished frame, and then rebind our message handler to the\n      // callback below.\n      this.container_.style.display = 'flex';\n      this.postMessage('visible');\n      this.messageChannel_.port1.onmessage = this.onMessage.bind(this);\n      this.onLoad();\n      return;\n    default:\n      console.log('Unknown message from frame:', e.data);\n  }\n};\n\n/**\n * Clients could override this, I guess.\n *\n * It doesn't support multiple listeners, but I'm not sure that would make sense\n * here.  It's probably better to speak directly to our parents.\n */\nhterm.Frame.prototype.onMessage = function() {};\n\n/**\n * Handle iframe onLoad event.\n */\nhterm.Frame.prototype.onLoad_ = function() {\n  this.messageChannel_ = new MessageChannel();\n  this.messageChannel_.port1.onmessage = this.onMessage_.bind(this);\n  this.messageChannel_.port1.start();\n  this.iframe_.contentWindow.postMessage(\n      {name: 'ipc-init', argv: [{messagePort: this.messageChannel_.port2}]},\n      this.url, [this.messageChannel_.port2]);\n};\n\n/**\n * Clients may override this.\n */\nhterm.Frame.prototype.onLoad = function() {};\n\n/**\n * Sends the terminal-info message to the iframe.\n */\nhterm.Frame.prototype.sendTerminalInfo_ = function() {\n  lib.i18n.getAcceptLanguages().then((languages) => {\n    this.postMessage('terminal-info', [{\n      acceptLanguages: languages,\n      foregroundColor: this.terminal_.getForegroundColor(),\n      backgroundColor: this.terminal_.getBackgroundColor(),\n      cursorColor: this.terminal_.getCursorColor(),\n      fontSize: this.terminal_.getFontSize(),\n      fontFamily: this.terminal_.getFontFamily(),\n      baseURL: lib.f.getURL('/'),\n    }]);\n  });\n};\n\n/**\n * User clicked the close button on the frame decoration.\n */\nhterm.Frame.prototype.onCloseClicked_ = function() {\n  this.close();\n};\n\n/**\n * Close this frame.\n */\nhterm.Frame.prototype.close = function() {\n  if (!this.container_ || !this.container_.parentNode) {\n    return;\n  }\n\n  this.container_.remove();\n  this.onClose();\n};\n\n\n/**\n * Clients may override this.\n */\nhterm.Frame.prototype.onClose = function() {};\n\n/**\n * Send a message to the iframe.\n *\n * @param {string} name The message name.\n * @param {!Array=} argv The message arguments.\n */\nhterm.Frame.prototype.postMessage = function(name, argv) {\n  if (!this.messageChannel_) {\n    throw new Error('Message channel is not set up.');\n  }\n\n  this.messageChannel_.port1.postMessage({name: name, argv: argv});\n};\n\n/**\n * Show the UI for this frame.\n *\n * The iframe src is not loaded until this method is called.\n */\nhterm.Frame.prototype.show = function() {\n  if (this.container_ && this.container_.parentNode) {\n    console.error('Frame already visible');\n    return;\n  }\n\n  const document = this.terminal_.document_;\n\n  const container = this.container_ = document.createElement('div');\n  container.style.cssText = (\n      'position: absolute;' +\n      'display: none;' +\n      'flex-direction: column;' +\n      'top: 10%;' +\n      'left: 4%;' +\n      'width: 90%;' +\n      'height: 80%;' +\n      'min-height: 20%;' +\n      'max-height: 80%;' +\n      'box-shadow: 0 0 2px ' + this.terminal_.getForegroundColor() + ';' +\n      'border: 2px ' + this.terminal_.getForegroundColor() + ' solid;');\n\n  const iframe = this.iframe_ = document.createElement('iframe');\n  iframe.onload = this.onLoad_.bind(this);\n  iframe.style.cssText = (\n      'display: flex;' +\n      'flex: 1;' +\n      'width: 100%');\n  iframe.setAttribute('src', this.url);\n  iframe.setAttribute('seamless', true);\n  container.appendChild(iframe);\n\n  this.div_.appendChild(container);\n};\n// SOURCE FILE: hterm/js/hterm_keyboard.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Keyboard handler.\n *\n * Consumes onKey* events and invokes onVTKeystroke on the associated\n * hterm.Terminal object.\n *\n * See also: [XTERM] as referenced in vt.js.\n *\n * @param {!hterm.Terminal} terminal The Terminal object associated with this\n *     keyboard.\n * @constructor\n */\nhterm.Keyboard = function(terminal) {\n  // The parent vt interpreter.\n  this.terminal = terminal;\n\n  // The element we're currently capturing keyboard events for.\n  this.keyboardElement_ = null;\n\n  // The event handlers we are interested in, and their bound callbacks, saved\n  // so they can be uninstalled with removeEventListener, when required.\n  this.handlers_ = [\n      ['focusout', this.onFocusOut_.bind(this)],\n      ['keydown', this.onKeyDown_.bind(this)],\n      ['keypress', this.onKeyPress_.bind(this)],\n      ['keyup', this.onKeyUp_.bind(this)],\n      ['textInput', this.onTextInput_.bind(this)],\n  ];\n\n  /**\n   * The current key map.\n   */\n  this.keyMap = new hterm.Keyboard.KeyMap(this);\n\n  this.bindings = new hterm.Keyboard.Bindings();\n\n  /**\n   * none: Disable the AltGr emulation.\n   * ctrl-alt: Assume Ctrl+Alt means AltGr.\n   * left-alt: Assume left Alt means AltGr.\n   * right-alt: Assume right Alt means AltGr.\n   */\n  this.altGrMode = 'none';\n\n  /**\n   * If true, Shift+Insert will fall through to the browser as a paste.\n   * If false, the keystroke will be sent to the host.\n   */\n  this.shiftInsertPaste = true;\n\n  /**\n   * If true, home/end will control the terminal scrollbar and shift home/end\n   * will send the VT keycodes.  If false then home/end sends VT codes and\n   * shift home/end scrolls.\n   */\n  this.homeKeysScroll = false;\n\n  /**\n   * Same as above, except for page up/page down.\n   */\n  this.pageKeysScroll = false;\n\n  /**\n   * If true, Ctrl+Plus/Minus/Zero controls zoom.\n   * If false, Ctrl+Shift+Plus/Minus/Zero controls zoom, Ctrl+Minus sends ^_,\n   * Ctrl+Plus/Zero do nothing.\n   */\n  this.ctrlPlusMinusZeroZoom = true;\n\n  /**\n   * Ctrl+C copies if true, sends ^C to host if false.\n   * Ctrl+Shift+C sends ^C to host if true, copies if false.\n   */\n  this.ctrlCCopy = false;\n\n  /**\n   * Ctrl+V pastes if true, sends ^V to host if false.\n   * Ctrl+Shift+V sends ^V to host if true, pastes if false.\n   */\n  this.ctrlVPaste = false;\n\n  /**\n   * Enable/disable application keypad.\n   *\n   * This changes the way numeric keys are sent from the keyboard.\n   */\n  this.applicationKeypad = false;\n\n  /**\n   * Enable/disable the application cursor mode.\n   *\n   * This changes the way cursor keys are sent from the keyboard.\n   */\n  this.applicationCursor = false;\n\n  /**\n   * If true, the backspace should send BS ('\\x08', aka ^H).  Otherwise\n   * the backspace key should send '\\x7f'.\n   */\n  this.backspaceSendsBackspace = false;\n\n  /**\n   * Set whether the meta key sends a leading escape or not.\n   */\n  this.metaSendsEscape = true;\n\n  /**\n   * Set whether meta-V gets passed to host.\n   */\n  this.passMetaV = true;\n\n  /**\n   * Controls how the alt key is handled.\n   *\n   *  escape....... Send an ESC prefix.\n   *  8-bit........ Add 128 to the unshifted character as in xterm.\n   *  browser-key.. Wait for the keypress event and see what the browser says.\n   *                (This won't work well on platforms where the browser\n   *                 performs a default action for some alt sequences.)\n   *\n   * This setting only matters when alt is distinct from meta (altIsMeta is\n   * false.)\n   */\n  this.altSendsWhat = 'escape';\n\n  /**\n   * Set whether the alt key acts as a meta key, instead of producing 8-bit\n   * characters.\n   *\n   * True to enable, false to disable, null to autodetect based on platform.\n   */\n  this.altIsMeta = false;\n\n  /**\n   * If true, tries to detect DEL key events that are from alt-backspace on\n   * Chrome OS vs from a true DEL key press.\n   *\n   * Background: At the time of writing, on Chrome OS, alt-backspace is mapped\n   * to DEL. Some users may be happy with this, but others may be frustrated\n   * that it's impossible to do meta-backspace. If the user enables this pref,\n   * we use a trick to tell a true DEL keypress from alt-backspace: on\n   * alt-backspace, we will see the alt key go down, then get a DEL keystroke\n   * that indicates that alt is not pressed. See https://crbug.com/174410 .\n   */\n  this.altBackspaceIsMetaBackspace = false;\n\n  /**\n   * Used to keep track of the current alt-key state, which is necessary for\n   * the altBackspaceIsMetaBackspace preference above and for the altGrMode\n   * preference.  This is a bitmap with where bit positions correspond to the\n   * \"location\" property of the key event.\n   */\n  this.altKeyPressed = 0;\n\n  /**\n   * If true, Chrome OS media keys will be mapped to their F-key equivalent.\n   * E.g. \"Back\" will be mapped to F1. If false, Chrome will handle the keys.\n   */\n  this.mediaKeysAreFKeys = false;\n\n  /**\n   * Holds the previous setting of altSendsWhat when DECSET 1039 is used. When\n   * DECRST 1039 is used, altSendsWhat is changed back to this and this is\n   * nulled out.\n   */\n  this.previousAltSendsWhat_ = null;\n};\n\n/**\n * Special handling for keyCodes in a keyboard layout.\n *\n * @enum {symbol}\n * @const\n */\nhterm.Keyboard.KeyActions = {\n  /**\n   * Call preventDefault and stopPropagation for this key event and nothing\n   * else.\n   */\n  CANCEL: Symbol('CANCEL'),\n\n  /**\n   * This performs the default terminal action for the key.  If used in the\n   * 'normal' action and the the keystroke represents a printable key, the\n   * character will be sent to the host.  If used in one of the modifier\n   * actions, the terminal will perform the normal action after (possibly)\n   * altering it.\n   *\n   *  - If the normal sequence starts with CSI, the sequence will be adjusted\n   *    to include the modifier parameter as described in [XTERM] in the final\n   *    table of the \"PC-Style Function Keys\" section.\n   *\n   *  - If the control key is down and the key represents a printable character,\n   *    and the uppercase version of the unshifted keycap is between\n   *    64 (ASCII '@') and 95 (ASCII '_'), then the uppercase version of the\n   *    unshifted keycap minus 64 is sent.  This makes '^@' send '\\x00' and\n   *    '^_' send '\\x1f'.  (Note that one higher that 0x1f is 0x20, which is\n   *    the first printable ASCII value.)\n   *\n   *  - If the alt key is down and the key represents a printable character then\n   *    the value of the character is shifted up by 128.\n   *\n   *  - If meta is down and configured to send an escape, '\\x1b' will be sent\n   *    before the normal action is performed.\n   */\n  DEFAULT: Symbol('DEFAULT'),\n\n  /**\n   * Causes the terminal to opt out of handling the key event, instead letting\n   * the browser deal with it.\n   */\n  PASS: Symbol('PASS'),\n\n  /**\n   * Insert the first or second character of the keyCap, based on e.shiftKey.\n   * The key will be handled in onKeyDown, and e.preventDefault() will be\n   * called.\n   *\n   * It is useful for a modified key action, where it essentially strips the\n   * modifier while preventing the browser from reacting to the key.\n   */\n  STRIP: Symbol('STRIP'),\n};\n\n/** @typedef {string|!hterm.Keyboard.KeyActions} */\nhterm.Keyboard.KeyAction;\n\n/**\n * Capture keyboard events sent to the associated element.\n *\n * This enables the keyboard.  Captured events are consumed by this class\n * and will not perform their default action or bubble to other elements.\n *\n * Passing a null element will uninstall the keyboard handlers.\n *\n * @param {?Element} element The element whose events should be captured, or\n *     null to disable the keyboard.\n */\nhterm.Keyboard.prototype.installKeyboard = function(element) {\n  if (element == this.keyboardElement_) {\n    return;\n  }\n\n  if (element && this.keyboardElement_) {\n    this.installKeyboard(null);\n  }\n\n  for (let i = 0; i < this.handlers_.length; i++) {\n    const handler = this.handlers_[i];\n    if (element) {\n      element.addEventListener(handler[0], handler[1]);\n    } else {\n      this.keyboardElement_.removeEventListener(handler[0], handler[1]);\n    }\n  }\n\n  this.keyboardElement_ = element;\n};\n\n/**\n * Disable keyboard event capture.\n *\n * This will allow the browser to process key events normally.\n */\nhterm.Keyboard.prototype.uninstallKeyboard = function() {\n  this.installKeyboard(null);\n};\n\n/**\n * Handle textInput events.\n *\n * These are generated when using IMEs, Virtual Keyboards (VKs), compose keys,\n * Unicode input, etc...\n *\n * @param {!InputEvent} e The event to process.\n */\nhterm.Keyboard.prototype.onTextInput_ = function(e) {\n  if (!e.data) {\n    return;\n  }\n\n  // Just pass the generated buffer straight down.  No need for us to split it\n  // up or otherwise parse it ahead of times.\n  this.terminal.onVTKeystroke(e.data);\n};\n\n/**\n * Handle keypress events.\n *\n * TODO(vapier): Drop this event entirely and only use keydown.\n *\n * @param {!KeyboardEvent} e The event to process.\n */\nhterm.Keyboard.prototype.onKeyPress_ = function(e) {\n  // FF doesn't set keyCode reliably in keypress events.  Stick to the which\n  // field here until we can move to keydown entirely.\n  const key = String.fromCharCode(e.which).toLowerCase();\n  if ((e.ctrlKey || e.metaKey) && (key == 'c' || key == 'v')) {\n    // On FF the key press (not key down) event gets fired for copy/paste.\n    // Let it fall through for the default browser behavior.\n    return;\n  }\n\n  if (e.keyCode == 9 /* Tab */) {\n    // On FF, a key press event will be fired in addition of key down for the\n    // Tab key if key down isn't handled. This would only happen if a custom\n    // PASS binding has been created and therefore this should be handled by the\n    // browser.\n    return;\n  }\n\n  /** @type {string} */\n  let ch;\n  if (e.altKey && this.altSendsWhat == 'browser-key' && e.charCode == 0) {\n    // If we got here because we were expecting the browser to handle an\n    // alt sequence but it didn't do it, then we might be on an OS without\n    // an enabled IME system.  In that case we fall back to xterm-like\n    // behavior.\n    //\n    // This happens here only as a fallback.  Typically these platforms should\n    // set altSendsWhat to either 'escape' or '8-bit'.\n    ch = String.fromCharCode(e.keyCode);\n    if (!e.shiftKey) {\n      ch = ch.toLowerCase();\n    }\n\n  } else if (e.charCode >= 32) {\n    ch = String.fromCharCode(e.charCode);\n  }\n\n  if (ch) {\n    this.terminal.onVTKeystroke(ch);\n  }\n\n  e.preventDefault();\n  e.stopPropagation();\n};\n\n/**\n * Handle focusout events.\n *\n * @param {!FocusEvent} e The event to process.\n */\nhterm.Keyboard.prototype.onFocusOut_ = function(e) {\n  this.altKeyPressed = 0;\n};\n\n/**\n * Handle keyup events.\n *\n * @param {!KeyboardEvent} e The event to process.\n */\nhterm.Keyboard.prototype.onKeyUp_ = function(e) {\n  if (e.keyCode == 18) {\n    this.altKeyPressed = this.altKeyPressed & ~(1 << (e.location - 1));\n  }\n};\n\n/**\n * Handle keydown events.\n *\n * @param {!KeyboardEvent} e The event to process.\n */\nhterm.Keyboard.prototype.onKeyDown_ = function(e) {\n  if (e.keyCode == 18) {\n    this.altKeyPressed = this.altKeyPressed | (1 << (e.location - 1));\n  }\n\n  let keyDef = this.keyMap.keyDefs[e.keyCode];\n  if (!keyDef) {\n    // If this key hasn't been explicitly registered, fall back to the unknown\n    // key mapping (keyCode == 0), and then automatically register it to avoid\n    // any further warnings here.\n    console.warn(`No definition for key ${e.key} (keyCode ${e.keyCode})`);\n    keyDef = this.keyMap.keyDefs[0];\n    this.keyMap.addKeyDef(e.keyCode, keyDef);\n  }\n\n  // The type of action we're going to use: control, alt, meta, or normal.\n  let resolvedActionType = null;\n\n  /**\n   * Get the default key definition action for the given modifier name.\n   *\n   * @param {string} name 'control', 'alt', 'meta', or 'normal'.\n   * @return {!hterm.Keyboard.KeyDefAction}\n   */\n  const getKeyDefAction = (name) => {\n    // Get the key action for the given action name.  If the action is a\n    // function, dispatch it.  If the action defers to the normal action,\n    // resolve that instead.\n\n    resolvedActionType = name;\n\n    let action = keyDef[name];\n    if (typeof action == 'function') {\n      action = action.call(this.keyMap, e, keyDef);\n    }\n\n    if (action === DEFAULT && name != 'normal') {\n      action = getKeyDefAction('normal');\n    }\n\n    return action;\n  };\n\n  // Note that we use the triple-equals ('===') operator to test equality for\n  // these constants, in order to distinguish usage of the constant from usage\n  // of a literal string that happens to contain the same bytes.\n  const CANCEL = hterm.Keyboard.KeyActions.CANCEL;\n  const DEFAULT = hterm.Keyboard.KeyActions.DEFAULT;\n  const PASS = hterm.Keyboard.KeyActions.PASS;\n  const STRIP = hterm.Keyboard.KeyActions.STRIP;\n\n  let control = e.ctrlKey;\n  let shift = e.shiftKey;\n  let alt = this.altIsMeta ? false : e.altKey;\n  let meta = this.altIsMeta ? (e.altKey || e.metaKey) : e.metaKey;\n\n  // In the key-map, we surround the keyCap for non-printables in \"[...]\"\n  const isPrintable = !(/^\\[\\w+\\]$/.test(keyDef.keyCap));\n\n  switch (this.altGrMode) {\n    case 'ctrl-alt':\n    if (isPrintable && control && alt) {\n      // ctrl-alt-printable means altGr.  We clear out the control and\n      // alt modifiers and wait to see the charCode in the keydown event.\n      control = false;\n      alt = false;\n    }\n    break;\n\n    case 'right-alt':\n    if (isPrintable && (this.terminal.keyboard.altKeyPressed & 2)) {\n      control = false;\n      alt = false;\n    }\n    break;\n\n    case 'left-alt':\n    if (isPrintable && (this.terminal.keyboard.altKeyPressed & 1)) {\n      control = false;\n      alt = false;\n    }\n    break;\n  }\n\n  /** @type {!hterm.Keyboard.KeyDown} */\n  const keyDown = {\n    keyCode: e.keyCode,\n    shift: e.shiftKey, // not `var shift` from above.\n    ctrl: control,\n    alt: alt,\n    meta: meta,\n  };\n\n  /** @type {?hterm.Keyboard.KeyDefAction} */\n  let action;\n\n  // Allow user specified keybindings to override default keyDef.\n  const binding = this.bindings.getBinding(keyDown);\n  if (binding) {\n    // Clear out the modifier bits so we don't try to munge the sequence\n    // further.\n    shift = control = alt = meta = false;\n    resolvedActionType = 'normal';\n\n    if (typeof binding.action == 'function') {\n      const bindingFn =\n          /** @type {!hterm.Keyboard.KeyBindingFunction} */ (binding.action);\n      action = bindingFn.call(this, this.terminal, keyDown);\n    } else {\n      action = /** @type {!hterm.Keyboard.KeyAction} */ (binding.action);\n    }\n  } else {\n    // No user keybinding, so use default keyDef.\n    if (control) {\n      action = getKeyDefAction('control');\n    } else if (alt) {\n      action = getKeyDefAction('alt');\n    } else if (meta) {\n      action = getKeyDefAction('meta');\n    } else {\n      action = getKeyDefAction('normal');\n    }\n\n    // If e.maskShiftKey was set (during getKeyDefAction) it means the shift key\n    // is already accounted for in the action, and we should not act on it any\n    // further. This is currently only used for Ctrl+Shift+Tab, which should\n    // send \"CSI Z\", not \"CSI 1 ; 2 Z\".\n    shift = !e.maskShiftKey && e.shiftKey;\n  }\n\n  // Call keyDef function now that we have given bindings a chance to override.\n  if (typeof action == 'function') {\n    action = action.call(this.keyMap, e, keyDef);\n  }\n\n  if (alt && this.altSendsWhat == 'browser-key' && action == DEFAULT) {\n    // When altSendsWhat is 'browser-key', we wait for the keypress event.\n    // In keypress, the browser should have set the event.charCode to the\n    // appropriate character.\n    // TODO(rginda): Character compositions will need some black magic.\n    action = PASS;\n  }\n\n  // If we are going to handle the key, we most likely want to hide the context\n  // menu before doing so.  This way we hide it when pressing a printable key,\n  // or navigate (arrow keys/etc...), or press Escape.  But we don't want to\n  // hide it when only pressing modifiers like Alt/Ctrl/Meta because those might\n  // be used by the OS & hterm to show the context menu in the first place.  The\n  // bare modifier keys are all marked as PASS.\n  if (action !== PASS) {\n    this.terminal.contextMenu.hide();\n  }\n\n  if (action === PASS || (action === DEFAULT && !(control || alt || meta))) {\n    // If this key is supposed to be handled by the browser, or it is an\n    // unmodified key with the default action, then exit this event handler.\n    // If it's an unmodified key, it'll be handled in onKeyPress where we\n    // can tell for sure which ASCII code to insert.\n    //\n    // This block needs to come before the STRIP test, otherwise we'll strip\n    // the modifier and think it's ok to let the browser handle the keypress.\n    // The browser won't know we're trying to ignore the modifiers and might\n    // perform some default action.\n    return;\n  }\n\n  if (action === STRIP) {\n    alt = control = false;\n    action = keyDef.normal;\n    if (typeof action == 'function') {\n      action = action.call(this.keyMap, e, keyDef);\n    }\n\n    if (action == DEFAULT && keyDef.keyCap.length == 2) {\n      action = keyDef.keyCap.substr((shift ? 1 : 0), 1);\n    }\n  }\n\n  e.preventDefault();\n  e.stopPropagation();\n\n  if (action === CANCEL) {\n    return;\n  }\n\n  if (action !== DEFAULT && typeof action != 'string') {\n    console.warn('Invalid action: ' + JSON.stringify(action));\n    return;\n  }\n\n  // Strip the modifier that is associated with the action, since we assume that\n  // modifier has already been accounted for in the action.\n  if (resolvedActionType == 'control') {\n    control = false;\n  } else if (resolvedActionType == 'alt') {\n    alt = false;\n  } else if (resolvedActionType == 'meta') {\n    meta = false;\n  }\n\n  if (typeof action == 'string' && action.substr(0, 2) == '\\x1b[' &&\n      (alt || control || shift || meta)) {\n    // The action is an escape sequence that and it was triggered in the\n    // presence of a keyboard modifier, we may need to alter the action to\n    // include the modifier before sending it.\n\n    // The math is funky but aligns w/xterm.\n    let imod = 1;\n    if (shift) {\n      imod += 1;\n    }\n    if (alt) {\n      imod += 2;\n    }\n    if (control) {\n      imod += 4;\n    }\n    if (meta) {\n      imod += 8;\n    }\n    const mod = ';' + imod;\n\n    if (action.length == 3) {\n      // Some of the CSI sequences have zero parameters unless modified.\n      action = '\\x1b[1' + mod + action.substr(2, 1);\n    } else {\n      // Others always have at least one parameter.\n      action = action.substr(0, action.length - 1) + mod +\n          action.substr(action.length - 1);\n    }\n\n  } else {\n    if (action === DEFAULT) {\n      action = keyDef.keyCap.substr((shift ? 1 : 0), 1);\n\n      if (control) {\n        const unshifted = keyDef.keyCap.substr(0, 1);\n        const code = unshifted.charCodeAt(0);\n        if (code >= 64 && code <= 95) {\n          action = String.fromCharCode(code - 64);\n        }\n      }\n    }\n\n    if (alt && this.altSendsWhat == '8-bit' && action.length == 1) {\n      const code = action.charCodeAt(0) + 128;\n      action = String.fromCharCode(code);\n    }\n\n    // We respect alt/metaSendsEscape even if the keymap action was a literal\n    // string.  Otherwise, every overridden alt/meta action would have to\n    // check alt/metaSendsEscape.\n    if ((alt && this.altSendsWhat == 'escape') ||\n        (meta && this.metaSendsEscape)) {\n      action = '\\x1b' + action;\n    }\n  }\n\n  this.terminal.onVTKeystroke(/** @type {string} */ (action));\n};\n// SOURCE FILE: hterm/js/hterm_keyboard_bindings.js\n// Copyright (c) 2015 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @typedef {{\n *     keyCode: number,\n *     shift: (boolean|undefined),\n *     ctrl: (boolean|undefined),\n *     alt: (boolean|undefined),\n *     meta: (boolean|undefined),\n * }}\n */\nhterm.Keyboard.KeyDown;\n\n/**\n * @typedef {function(!hterm.Terminal, !hterm.Keyboard.KeyDown):\n *               !hterm.Keyboard.KeyAction}\n */\nhterm.Keyboard.KeyBindingFunction;\n\n/** @typedef {!hterm.Keyboard.KeyAction|!hterm.Keyboard.KeyBindingFunction} */\nhterm.Keyboard.KeyBindingAction;\n\n/**\n * @typedef {{\n *     keyPattern: !hterm.Keyboard.KeyPattern,\n *     action: !hterm.Keyboard.KeyBindingAction,\n * }}\n */\nhterm.Keyboard.KeyBinding;\n\n/**\n * A mapping from hterm.Keyboard.KeyPattern to an action.\n *\n * TODO(rginda): For now this bindings code is only used for user overrides.\n * hterm.Keyboard.KeyMap still handles all of the built-in key mappings.\n * It'd be nice if we migrated that over to be hterm.Keyboard.Bindings based.\n *\n * @constructor\n */\nhterm.Keyboard.Bindings = function() {\n  /** @private {!Object<number, !Array<!hterm.Keyboard.KeyBinding>>} */\n  this.bindings_ = {};\n};\n\n/**\n * Default bindings for each OS.\n *\n * @type {!Object<string, !Object<string, string>>}\n */\nhterm.Keyboard.Bindings.OsDefaults = {\n  'android': {\n  },\n  'cros': {\n    // Submit feedback.\n    'Alt+Shift+I': 'PASS',\n    // Toggle chromevox.\n    'Ctrl+Alt+Z': 'PASS',\n    // Switch input method.\n    'Ctrl+Space': 'PASS',\n  },\n  'linux': {\n  },\n  'mac': {\n    // Home.\n    'Meta+Left': '\"\\u001b[H\"',\n    // End.\n    'Meta+Right': '\"\\u001b[F\"',\n  },\n  'windows': {\n  },\n};\n\n/**\n * Remove all bindings.\n */\nhterm.Keyboard.Bindings.prototype.clear = function() {\n  this.bindings_ = {};\n};\n\n/**\n * Add a new binding.\n *\n * Internal API that assumes parsed objects as inputs.\n * See the public addBinding for more details.\n *\n * @param {!hterm.Keyboard.KeyPattern} keyPattern\n * @param {!hterm.Keyboard.KeyBindingAction} action\n */\nhterm.Keyboard.Bindings.prototype.addBinding_ = function(keyPattern, action) {\n  let binding = null;\n  const list = this.bindings_[keyPattern.keyCode];\n  if (list) {\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].keyPattern.matchKeyPattern(keyPattern)) {\n        binding = list[i];\n        break;\n      }\n    }\n  }\n\n  if (binding) {\n    binding.action = action;\n  } else {\n    binding = {keyPattern: keyPattern, action: action};\n\n    if (!list) {\n      this.bindings_[keyPattern.keyCode] = [binding];\n    } else {\n      this.bindings_[keyPattern.keyCode].push(binding);\n\n      list.sort(function(a, b) {\n        return hterm.Keyboard.KeyPattern.sortCompare(\n            a.keyPattern, b.keyPattern);\n      });\n    }\n  }\n};\n\n/**\n * Add a new binding.\n *\n * If a binding for the keyPattern already exists it will be overridden.\n *\n * More specific keyPatterns take precedence over those with wildcards.  Given\n * bindings for \"Ctrl+A\" and \"Ctrl+*+A\", and a \"Ctrl+A\" keydown, the \"Ctrl+A\"\n * binding will match even if \"Ctrl+*+A\" was created last.\n *\n * If action is a string, it will be passed through hterm.Parser.parseKeyAction.\n *\n * For example:\n *   // Will replace Ctrl+P keystrokes with the string \"hiya!\".\n *   addBinding('Ctrl+P', \"'hiya!'\");\n *   // Will cancel the keystroke entirely (make it do nothing).\n *   addBinding('Alt+D', hterm.Keyboard.KeyActions.CANCEL);\n *   // Will execute the code and return the action.\n *   addBinding('Ctrl+T', function() {\n *     console.log('Got a T!');\n *     return hterm.Keyboard.KeyActions.PASS;\n *   });\n *\n * @param {string|!hterm.Keyboard.KeyPattern} key\n * @param {!hterm.Keyboard.KeyBindingAction} action\n */\nhterm.Keyboard.Bindings.prototype.addBinding = function(key, action) {\n  // If we're given a hterm.Keyboard.KeyPattern object, pass it down.\n  if (typeof key != 'string') {\n    this.addBinding_(key, action);\n    return;\n  }\n\n  // Here we treat key as a string.\n  const p = new hterm.Parser();\n\n  p.reset(key);\n  let sequence;\n\n  try {\n    sequence = p.parseKeySequence();\n  } catch (ex) {\n    console.error(ex);\n    return;\n  }\n\n  if (!p.isComplete()) {\n    console.error(p.error('Expected end of sequence: ' + sequence));\n    return;\n  }\n\n  // If action is a string, parse it.  Otherwise assume it's callable.\n  if (typeof action == 'string') {\n    p.reset(action);\n    try {\n      action = p.parseKeyAction();\n    } catch (ex) {\n      console.error(ex);\n      return;\n    }\n  }\n\n  if (!p.isComplete()) {\n    console.error(p.error('Expected end of sequence: ' + sequence));\n    return;\n  }\n\n  this.addBinding_(new hterm.Keyboard.KeyPattern(sequence), action);\n};\n\n/**\n * Add multiple bindings at a time using a map of {string: string, ...}\n *\n * This uses hterm.Parser to parse the maps key into KeyPatterns, and the\n * map values into {!hterm.Keyboard.KeyBindingAction}.\n *\n * For example:\n *  {\n *    // Will replace Ctrl+P keystrokes with the string \"hiya!\".\n *    'Ctrl+P': \"'hiya!'\",\n *    // Will cancel the keystroke entirely (make it do nothing).\n *    'Alt+D': hterm.Keyboard.KeyActions.CANCEL,\n *  }\n *\n * @param {!Object<string, !hterm.Keyboard.KeyBindingAction>} map\n * @param {boolean=} addOsDefaults If true, OS defaults are added first to\n *     ensure user defined mappings take precedence.\n */\nhterm.Keyboard.Bindings.prototype.addBindings = function(\n    map, addOsDefaults = false) {\n  if (addOsDefaults) {\n    this.addBindings(hterm.Keyboard.Bindings.OsDefaults[hterm.os] || {});\n  }\n  for (const key in map) {\n    this.addBinding(key, map[key]);\n  }\n};\n\n/**\n * Return the binding that is the best match for the given keyDown record,\n * or null if there is no match.\n *\n * @param {!hterm.Keyboard.KeyDown} keyDown An object with a keyCode property\n *     and zero or more boolean properties representing key modifiers.  These\n *     property names must match those defined in\n *     hterm.Keyboard.KeyPattern.modifiers.\n * @return {?hterm.Keyboard.KeyBinding} The keyboard binding for this key.\n */\nhterm.Keyboard.Bindings.prototype.getBinding = function(keyDown) {\n  const list = this.bindings_[keyDown.keyCode];\n  if (!list) {\n    return null;\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const binding = list[i];\n    if (binding.keyPattern.matchKeyDown(keyDown)) {\n      return binding;\n    }\n  }\n\n  return null;\n};\n// SOURCE FILE: hterm/js/hterm_keyboard_keymap.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @typedef {{\n *     keyCap: string,\n *     normal: !hterm.Keyboard.KeyDefAction,\n *     control: !hterm.Keyboard.KeyDefAction,\n *     alt: !hterm.Keyboard.KeyDefAction,\n *     meta: !hterm.Keyboard.KeyDefAction,\n * }}\n */\nhterm.Keyboard.KeyDef;\n\n/**\n * @typedef {function(!KeyboardEvent, !hterm.Keyboard.KeyDef):\n *               !hterm.Keyboard.KeyAction}\n */\nhterm.Keyboard.KeyDefFunction;\n\n/**\n * @typedef {function(!KeyboardEvent, !hterm.Keyboard.KeyDef):\n *               !hterm.Keyboard.KeyDefFunction|!hterm.Keyboard.KeyAction}\n */\nhterm.Keyboard.KeyDefFunctionProvider;\n\n/**\n * @typedef {(\n *      !hterm.Keyboard.KeyAction|\n *      !hterm.Keyboard.KeyDefFunction|\n *      !hterm.Keyboard.KeyDefFunctionProvider\n *  )}\n */\nhterm.Keyboard.KeyDefAction;\n\n/**\n * The default key map for hterm.\n *\n * Contains a mapping of keyCodes to keyDefs (aka key definitions).  The key\n * definition tells the hterm.Keyboard class how to handle keycodes.\n *\n * This should work for most cases, as the printable characters get handled\n * in the keypress event.  In that case, even if the keycap is wrong in the\n * key map, the correct character should be sent.\n *\n * Different layouts, such as Dvorak should work with this keymap, as those\n * layouts typically move keycodes around on the keyboard without disturbing\n * the actual keycaps.\n *\n * There may be issues with control keys on non-US keyboards or with keyboards\n * that very significantly from the expectations here, in which case we may\n * have to invent new key maps.\n *\n * The sequences defined in this key map come from [XTERM] as referenced in\n * vt.js, starting with the section titled \"Alt and Meta Keys\".\n *\n * @param {!hterm.Keyboard} keyboard\n * @constructor\n */\nhterm.Keyboard.KeyMap = function(keyboard) {\n  this.keyboard = keyboard;\n  /** @type {!Object<number, !hterm.Keyboard.KeyDef>} */\n  this.keyDefs = {};\n  this.reset();\n};\n\n/**\n * Add a single key definition.\n *\n * The definition is an object containing the following fields: 'keyCap',\n * 'normal', 'control', 'alt', and 'meta'.\n *\n *  - keyCap is a string identifying the key on the keyboard.  For printable\n *    keys, the key cap should be exactly two characters, starting with the\n *    unshifted version.  For example, 'aA', 'bB', '1!' and '=+'.  For\n *    non-printable the key cap should be surrounded in square braces, as in\n *    '[INS]', '[LEFT]'.  By convention, non-printable keycaps are in uppercase\n *    but this is not a strict requirement.\n *\n *  - Normal is the action that should be performed when the key is pressed\n *    in the absence of any modifier.  See below for the supported actions.\n *\n *  - Control is the action that should be performed when the key is pressed\n *    along with the control modifier.  See below for the supported actions.\n *\n *  - Alt is the action that should be performed when the key is pressed\n *    along with the alt modifier.  See below for the supported actions.\n *\n *  - Meta is the action that should be performed when the key is pressed\n *    along with the meta modifier.  See below for the supported actions.\n *\n * Actions can be one of the hterm.Keyboard.KeyActions as documented below,\n * a literal string, or an array.  If the action is a literal string then\n * the string is sent directly to the host.  If the action is an array it\n * is taken to be an escape sequence that may be altered by modifier keys.\n * The second-to-last element of the array will be overwritten with the\n * state of the modifier keys, as specified in the final table of \"PC-Style\n * Function Keys\" from [XTERM].\n *\n * @param {number} keyCode The KeyboardEvent.keyCode to match against.\n * @param {!hterm.Keyboard.KeyDef} def The actions this key triggers.\n */\nhterm.Keyboard.KeyMap.prototype.addKeyDef = function(keyCode, def) {\n  if (keyCode in this.keyDefs) {\n    console.warn('Duplicate keyCode: ' + keyCode);\n  }\n\n  this.keyDefs[keyCode] = def;\n};\n\n/**\n * Set up the default state for this keymap.\n */\nhterm.Keyboard.KeyMap.prototype.reset = function() {\n  this.keyDefs = {};\n\n  const CANCEL = hterm.Keyboard.KeyActions.CANCEL;\n  const DEFAULT = hterm.Keyboard.KeyActions.DEFAULT;\n  const PASS = hterm.Keyboard.KeyActions.PASS;\n  const STRIP = hterm.Keyboard.KeyActions.STRIP;\n\n  /**\n   * This function is used by the \"macro\" functions below.  It makes it\n   * possible to use the call() macro as an argument to any other macro.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} action\n   * @param {!KeyboardEvent} e\n   * @param {!hterm.Keyboard.KeyDef} k\n   * @return {!hterm.Keyboard.KeyAction}\n   */\n  const resolve = (action, e, k) => {\n    if (typeof action == 'function') {\n      const keyDefFn = /** @type {!hterm.Keyboard.KeyDefFunction} */ (action);\n      return keyDefFn.call(this, e, k);\n    }\n    return action;\n  };\n\n  /**\n   * If not application keypad a, else b.  The keys that care about\n   * application keypad ignore it when the key is modified.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} a\n   * @param {!hterm.Keyboard.KeyDefAction} b\n   * @return {!hterm.Keyboard.KeyDefFunction}\n   */\n  /* TODO(crbug.com/1065216): Delete this if no longer needed.\n  const ak = (a, b) => {\n    return (e, k) => {\n      const action = (e.shiftKey || e.ctrlKey || e.altKey || e.metaKey ||\n                      !this.keyboard.applicationKeypad) ? a : b;\n      return resolve(action, e, k);\n    };\n  };\n  */\n\n  /**\n   * If mod or not application cursor a, else b.  The keys that care about\n   * application cursor ignore it when the key is modified.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} a\n   * @param {!hterm.Keyboard.KeyDefAction} b\n   * @return {!hterm.Keyboard.KeyDefFunction}\n   */\n  const ac = (a, b) => {\n    return (e, k) => {\n      const action = (e.shiftKey || e.ctrlKey || e.altKey || e.metaKey ||\n                      !this.keyboard.applicationCursor) ? a : b;\n      return resolve(action, e, k);\n    };\n  };\n\n  /**\n   * If not backspace-sends-backspace keypad a, else b.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} a\n   * @param {!hterm.Keyboard.KeyDefAction} b\n   * @return {!hterm.Keyboard.KeyDefFunction}\n   */\n  const bs = (a, b) => {\n    return (e, k) => {\n      const action = !this.keyboard.backspaceSendsBackspace ? a : b;\n      return resolve(action, e, k);\n    };\n  };\n\n  /**\n   * If not e.shiftKey a, else b.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} a\n   * @param {!hterm.Keyboard.KeyDefAction} b\n   * @return {!hterm.Keyboard.KeyDefFunction}\n   */\n  const sh = (a, b) => {\n    return (e, k) => {\n      const action = !e.shiftKey ? a : b;\n      e.maskShiftKey = true;\n      return resolve(action, e, k);\n    };\n  };\n\n  /**\n   * If not e.altKey a, else b.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} a\n   * @param {!hterm.Keyboard.KeyDefAction} b\n   * @return {!hterm.Keyboard.KeyDefFunction}\n   */\n  const alt = (a, b) => {\n    return (e, k) => {\n      const action = !e.altKey ? a : b;\n      return resolve(action, e, k);\n    };\n  };\n\n  /**\n   * If no modifiers a, else b.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} a\n   * @param {!hterm.Keyboard.KeyDefAction} b\n   * @return {!hterm.Keyboard.KeyDefFunction}\n   */\n  const mod = (a, b) => {\n    return (e, k) => {\n      const action = !(e.shiftKey || e.ctrlKey || e.altKey || e.metaKey) ?\n        a : b;\n      return resolve(action, e, k);\n    };\n  };\n\n  /**\n   * Compute a control character for a given character.\n   *\n   * @param {string} ch\n   * @return {string}\n   */\n  const ctl = (ch) => String.fromCharCode(ch.charCodeAt(0) - 64);\n\n  /**\n   * Call a method on the keymap instance.\n   *\n   * @param {string} m name of method to call.\n   * @return {(\n   *     !hterm.Keyboard.KeyDefFunction|\n   *     !hterm.Keyboard.KeyDefFunctionProvider\n   * )}\n   */\n  const c = (m) => {\n    return (e, k) => this[m](e, k);\n  };\n\n  // Ignore if not trapping media keys.\n  const med = (fn) => {\n    return (e, k) => {\n      if (!this.keyboard.mediaKeysAreFKeys) {\n        // Block Back, Forward, and Reload keys to avoid navigating away from\n        // the current page.\n        return (e.keyCode == 166 || e.keyCode == 167 || e.keyCode == 168) ?\n            CANCEL : PASS;\n      }\n      return resolve(fn, e, k);\n    };\n  };\n\n  /**\n   * @param {number} keyCode\n   * @param {string} keyCap\n   * @param {!hterm.Keyboard.KeyDefAction} normal\n   * @param {!hterm.Keyboard.KeyDefAction} control\n   * @param {!hterm.Keyboard.KeyDefAction} alt\n   * @param {!hterm.Keyboard.KeyDefAction} meta\n   */\n  const add = (keyCode, keyCap, normal, control, alt, meta) => {\n    this.addKeyDef(keyCode, {\n      keyCap: keyCap,\n      normal: normal,\n      control: control,\n      alt: alt,\n      meta: meta,\n    });\n  };\n\n  // Browser-specific differences.\n  // let keycapMute;\n  // let keycapVolDn;\n  // let keycapVolDn\n  let keycapSC;\n  let keycapEP;\n  let keycapMU;\n  if (window.navigator && navigator.userAgent &&\n      navigator.userAgent.includes('Firefox')) {\n    // Firefox defines some keys uniquely.  No other browser defines these in\n    // this way.  Some even conflict.  The keyCode field isn't well documented\n    // as it isn't standardized.  At some point we should switch to \"key\".\n    // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\n    // http://unixpapa.com/js/key.html\n    // keycapMute = 181;   // Mute\n    // keycapVolDn = 182;  // Volume Down\n    // keycapVolUp = 183;  // Volume Up\n    keycapSC = 59;      // ;:\n    keycapEP = 61;      // =+\n    keycapMU = 173;     // -_\n\n    // Firefox Italian +*.\n    add(171, '+*', DEFAULT, c('onZoom_'), DEFAULT, c('onZoom_'));\n  } else {\n    // All other browsers use these mappings.\n    // keycapMute = 173;   // Mute\n    // keycapVolDn = 174;  // Volume Down\n    // keycapVolUp = 175;  // Volume Up\n    keycapSC = 186;     // ;:\n    keycapEP = 187;     // =+\n    keycapMU = 189;     // -_\n  }\n\n  const ESC = '\\x1b';\n  const CSI = '\\x1b[';\n  const SS3 = '\\x1bO';\n\n  // These fields are: [keycode, keycap, normal, control, alt, meta]\n  /* eslint-disable no-multi-spaces */\n\n  // The browser sends the keycode 0 for some keys.  We'll just assume it's\n  // going to do the right thing by default for those keys.\n  add(0,   '[UNKNOWN]', PASS, PASS, PASS, PASS);\n\n  // First row.\n  // These bindings match xterm for lack of a better standard.  The emitted\n  // values might look like they're skipping values, but it's what xterm does.\n  // https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-PC-Style-Function-Keys\n  add(27,  '[ESC]', ESC,                       DEFAULT, DEFAULT,     DEFAULT);\n  add(112, '[F1]',  mod(SS3 + 'P', CSI + 'P'), DEFAULT, CSI + '23~', DEFAULT);\n  add(113, '[F2]',  mod(SS3 + 'Q', CSI + 'Q'), DEFAULT, CSI + '24~', DEFAULT);\n  add(114, '[F3]',  mod(SS3 + 'R', CSI + 'R'), DEFAULT, CSI + '25~', DEFAULT);\n  add(115, '[F4]',  mod(SS3 + 'S', CSI + 'S'), DEFAULT, CSI + '26~', DEFAULT);\n  add(116, '[F5]',  CSI + '15~',               DEFAULT, CSI + '28~', DEFAULT);\n  add(117, '[F6]',  CSI + '17~',               DEFAULT, CSI + '29~', DEFAULT);\n  add(118, '[F7]',  CSI + '18~',               DEFAULT, CSI + '31~', DEFAULT);\n  add(119, '[F8]',  CSI + '19~',               DEFAULT, CSI + '32~', DEFAULT);\n  add(120, '[F9]',  CSI + '20~',               DEFAULT, CSI + '33~', DEFAULT);\n  add(121, '[F10]', CSI + '21~',               DEFAULT, CSI + '34~', DEFAULT);\n  add(122, '[F11]', c('onF11_'),               DEFAULT, CSI + '42~', DEFAULT);\n  add(123, '[F12]', CSI + '24~',               DEFAULT, CSI + '43~', DEFAULT);\n\n  // Second row.\n  add(192, '`~', DEFAULT, sh(ctl('@'), ctl('^')),     DEFAULT,           PASS);\n  add(49,  '1!', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(50,  '2@', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(51,  '3#', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(52,  '4$', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(53,  '5%', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(54,  '6^', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(55,  '7&', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(56,  '8*', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(57,  '9(', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(48,  '0)', DEFAULT, c('onZoom_'),       c('onAltNum_'), c('onZoom_'));\n  add(keycapMU, '-_', DEFAULT, c('onZoom_'),  DEFAULT,        c('onZoom_'));\n  add(keycapEP, '=+', DEFAULT, c('onZoom_'),  DEFAULT,        c('onZoom_'));\n\n  add(8,   '[BKSP]', bs('\\x7f', '\\b'), bs('\\b', '\\x7f'), DEFAULT,     DEFAULT);\n\n  // Third row.\n  add(9,   '[TAB]', sh('\\t', CSI + 'Z'), c('onCtrlTab_'), PASS, DEFAULT);\n  add(81,  'qQ',    DEFAULT,             ctl('Q'),  DEFAULT, DEFAULT);\n  add(87,  'wW',    DEFAULT,         c('onCtrlW_'), DEFAULT, DEFAULT);\n  add(69,  'eE',    DEFAULT,             ctl('E'),  DEFAULT, DEFAULT);\n  add(82,  'rR',    DEFAULT,             ctl('R'),  DEFAULT, DEFAULT);\n  add(84,  'tT',    DEFAULT,         c('onCtrlT_'), DEFAULT, DEFAULT);\n  add(89,  'yY',    DEFAULT,             ctl('Y'),  DEFAULT, DEFAULT);\n  add(85,  'uU',    DEFAULT,             ctl('U'),  DEFAULT, DEFAULT);\n  add(73,  'iI',    DEFAULT,             ctl('I'),  DEFAULT, DEFAULT);\n  add(79,  'oO',    DEFAULT,             ctl('O'),  DEFAULT, DEFAULT);\n  add(80,  'pP',    DEFAULT,             ctl('P'),  DEFAULT, DEFAULT);\n  add(219, '[{',    DEFAULT,             ctl('['),  DEFAULT, DEFAULT);\n  add(221, ']}',    DEFAULT,             ctl(']'),  DEFAULT, DEFAULT);\n  add(220, '\\\\|',   DEFAULT,             ctl('\\\\'), DEFAULT, DEFAULT);\n\n  // Fourth row. We let Ctrl+Shift+J pass for Chrome DevTools.\n  // To be compliant with xterm's behavior for modifiers on Enter\n  // would mean maximizing the window with Alt+Enter... so we don't\n  // want to do that. Our behavior on Enter is what most other\n  // modern emulators do.\n  add(20,  '[CAPS]',  PASS,    PASS,                        PASS,    DEFAULT);\n  add(65,  'aA', DEFAULT, sh(ctl('A'), c('onCtrlShiftA_')), DEFAULT, DEFAULT);\n  add(83,  'sS',      DEFAULT, ctl('S'),                    DEFAULT, DEFAULT);\n  add(68,  'dD',      DEFAULT, ctl('D'),                    DEFAULT, DEFAULT);\n  add(70,  'fF', DEFAULT, sh(ctl('F'), c('onCtrlShiftF_')), DEFAULT, DEFAULT);\n  add(71,  'gG',      DEFAULT, ctl('G'),                    DEFAULT, DEFAULT);\n  add(72,  'hH',      DEFAULT, ctl('H'),                    DEFAULT, DEFAULT);\n  add(74,  'jJ',      DEFAULT, sh(ctl('J'), PASS),          DEFAULT, DEFAULT);\n  add(75,  'kK',      DEFAULT, sh(ctl('K'), c('onClear_')), DEFAULT, DEFAULT);\n  add(76,  'lL',      DEFAULT, sh(ctl('L'), PASS),          DEFAULT, DEFAULT);\n  add(keycapSC, ';:', DEFAULT, STRIP,                       DEFAULT, DEFAULT);\n  add(222, '\\'\"',     DEFAULT, STRIP,                       DEFAULT, DEFAULT);\n  add(13,  '[ENTER]', '\\r',    DEFAULT,                     DEFAULT, DEFAULT);\n\n  // Fifth row.  This includes the copy/paste shortcuts.  On some\n  // platforms it's Ctrl+C/V, on others it's Meta+C/V.  We assume either\n  // Ctrl+C/Meta+C should pass to the browser when there is a selection,\n  // and Ctrl+Shift+V/Meta+*+V should always pass to the browser (since\n  // these seem to be recognized as paste too).\n  add(16,  '[SHIFT]', PASS, PASS,                  PASS,    DEFAULT);\n  add(90,  'zZ',   DEFAULT, ctl('Z'),              DEFAULT, DEFAULT);\n  add(88,  'xX',   DEFAULT, ctl('X'),              DEFAULT, DEFAULT);\n  add(67,  'cC',   DEFAULT, c('onCtrlC_'),         DEFAULT, c('onMetaC_'));\n  add(86,  'vV',   DEFAULT, c('onCtrlV_'),         DEFAULT, c('onMetaV_'));\n  add(66,  'bB',   DEFAULT, ctl('B'),              DEFAULT, DEFAULT);\n  add(78,  'nN',   DEFAULT, c('onCtrlN_'),         DEFAULT, c('onMetaN_'));\n  add(77,  'mM',   DEFAULT, ctl('M'),              DEFAULT, DEFAULT);\n  add(188, ',<',   DEFAULT, alt(STRIP, PASS),      DEFAULT, DEFAULT);\n  add(190, '.>',   DEFAULT, alt(STRIP, PASS),      DEFAULT, DEFAULT);\n  add(191, '/?',   DEFAULT, sh(ctl('_'), ctl('?')), DEFAULT, DEFAULT);\n\n  // Sixth and final row.\n  add(17,  '[CTRL]',  PASS,    PASS,     PASS,    PASS);\n  add(18,  '[ALT]',   PASS,    PASS,     PASS,    PASS);\n  add(91,  '[LAPL]',  PASS,    PASS,     PASS,    PASS);\n  add(32,  ' ',       DEFAULT, ctl('@'), DEFAULT, DEFAULT);\n  add(92,  '[RAPL]',  PASS,    PASS,     PASS,    PASS);\n  add(93,  '[RMENU]', PASS,    PASS,     PASS,    PASS);\n\n  // These things.\n  add(42,  '[PRTSCR]', PASS, PASS, PASS, PASS);\n  add(145, '[SCRLK]',  PASS, PASS, PASS, PASS);\n  add(19,  '[BREAK]',  PASS, PASS, PASS, PASS);\n\n  // The block of six keys above the arrows.\n  add(45,  '[INSERT]', c('onKeyInsert_'),   DEFAULT, DEFAULT, DEFAULT);\n  add(36,  '[HOME]',   c('onKeyHome_'),     DEFAULT, DEFAULT, DEFAULT);\n  add(33,  '[PGUP]',   c('onKeyPageUp_'),   DEFAULT, DEFAULT, DEFAULT);\n  add(46,  '[DEL]',    c('onKeyDel_'),      DEFAULT, DEFAULT, DEFAULT);\n  add(35,  '[END]',    c('onKeyEnd_'),      DEFAULT, DEFAULT, DEFAULT);\n  add(34,  '[PGDOWN]', c('onKeyPageDown_'), DEFAULT, DEFAULT, DEFAULT);\n\n  // Arrow keys.  When unmodified they respect the application cursor state,\n  // otherwise they always send the CSI codes.\n  add(38, '[UP]',    c('onKeyArrowUp_'), DEFAULT, DEFAULT, DEFAULT);\n  add(40, '[DOWN]',  c('onKeyArrowDown_'), DEFAULT, DEFAULT, DEFAULT);\n  add(39, '[RIGHT]', ac(CSI + 'C', SS3 + 'C'), DEFAULT, DEFAULT, DEFAULT);\n  add(37, '[LEFT]',  ac(CSI + 'D', SS3 + 'D'), DEFAULT, DEFAULT, DEFAULT);\n\n  add(144, '[NUMLOCK]', PASS, PASS, PASS, PASS);\n\n  // On Apple keyboards, the NumLock key is a Clear key.  It also tends to be\n  // what KP5 sends when numlock is off.  Not clear if we could do anything\n  // useful with it, so just pass it along.\n  add(12, '[CLEAR]', PASS, PASS, PASS, PASS);\n\n  // With numlock off, the keypad generates the same key codes as the arrows\n  // and 'block of six' for some keys, and null key codes for the rest.\n\n  // Keypad with numlock on generates unique key codes...\n  add(96,  '[KP0]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(97,  '[KP1]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(98,  '[KP2]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(99,  '[KP3]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(100, '[KP4]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(101, '[KP5]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(102, '[KP6]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(103, '[KP7]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(104, '[KP8]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(105, '[KP9]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(107, '[KP+]', DEFAULT, c('onZoom_'), DEFAULT, c('onZoom_'));\n  add(109, '[KP-]', DEFAULT, c('onZoom_'), DEFAULT, c('onZoom_'));\n  add(106, '[KP*]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(111, '[KP/]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(110, '[KP.]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n\n  // OS-specific differences.\n  if (hterm.os == 'cros') {\n    // Chrome OS keyboard top row.  The media-keys-are-fkeys preference allows\n    // users to make these always behave as function keys (see those bindings\n    // above for more details).\n    /* eslint-disable max-len */\n    add(166, '[BACK]',   med(mod(SS3 + 'P', CSI + 'P')), DEFAULT, CSI + '23~', DEFAULT);  // F1\n    add(167, '[FWD]',    med(mod(SS3 + 'Q', CSI + 'Q')), DEFAULT, CSI + '24~', DEFAULT);  // F2\n    add(168, '[RELOAD]', med(mod(SS3 + 'R', CSI + 'R')), DEFAULT, CSI + '25~', DEFAULT);  // F3\n    add(183, '[FSCR]',   med(mod(SS3 + 'S', CSI + 'S')), DEFAULT, CSI + '26~', DEFAULT);  // F4\n    add(182, '[WINS]',   med(CSI + '15~'),               DEFAULT, CSI + '28~', DEFAULT);  // F5\n    add(216, '[BRIT-]',  med(CSI + '17~'),               DEFAULT, CSI + '29~', DEFAULT);  // F6\n    add(217, '[BRIT+]',  med(CSI + '18~'),               DEFAULT, CSI + '31~', DEFAULT);  // F7\n    add(173, '[MUTE]',   med(CSI + '19~'),               DEFAULT, CSI + '32~', DEFAULT);  // F8\n    add(174, '[VOL-]',   med(CSI + '20~'),               DEFAULT, CSI + '33~', DEFAULT);  // F9\n    add(175, '[VOL+]',   med(CSI + '21~'),               DEFAULT, CSI + '34~', DEFAULT);  // F10\n    /* eslint-enable max-len */\n\n    // We could make this into F11, but it'd be a bit weird.  Chrome allows us\n    // to see this and react, but it doesn't actually allow us to block or\n    // cancel it, so it makes the screen flash/lock still.\n    add(152, '[POWER]', DEFAULT, DEFAULT, DEFAULT, DEFAULT);\n\n    // The Pixelbook has a slightly different layout.  This means half the keys\n    // above are off by one.  https://crbug.com/807513\n    add(179, '[PLAY]', med(CSI + '18~'), DEFAULT, CSI + '31~', DEFAULT); // F7\n    // The settings / hamburgers / three hot dogs / menu / whatever-it's-called.\n    add(154, '[DOGS]', med(CSI + '23~'), DEFAULT, CSI + '42~', DEFAULT); // F11\n\n    // We don't use this for anything, but keep it from popping up by default.\n    add(153, '[ASSIST]', DEFAULT, DEFAULT, DEFAULT, DEFAULT);\n  }\n  /* eslint-enable no-multi-spaces */\n};\n\n/**\n * Either allow the paste or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyInsert_ = function(e) {\n  if (this.keyboard.shiftInsertPaste && e.shiftKey) {\n    return hterm.Keyboard.KeyActions.PASS;\n  }\n\n  return '\\x1b[2~';\n};\n\n/**\n * Either scroll the scrollback buffer or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyHome_ = function(e) {\n  if (this.keyboard.homeKeysScroll === e.shiftKey) {\n    if ((e.altKey || e.ctrlKey || e.shiftKey) ||\n        !this.keyboard.applicationCursor) {\n      return '\\x1b[H';\n    }\n\n    return '\\x1bOH';\n  }\n\n  this.keyboard.terminal.scrollHome();\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n\n/**\n * Either scroll the scrollback buffer or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyEnd_ = function(e) {\n  if (this.keyboard.homeKeysScroll === e.shiftKey) {\n    if ((e.altKey || e.ctrlKey || e.shiftKey) ||\n        !this.keyboard.applicationCursor) {\n      return '\\x1b[F';\n    }\n\n    return '\\x1bOF';\n  }\n\n  this.keyboard.terminal.scrollEnd();\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n\n/**\n * Either scroll the scrollback buffer or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyPageUp_ = function(e) {\n  if (this.keyboard.pageKeysScroll === e.shiftKey) {\n    return '\\x1b[5~';\n  }\n\n  this.keyboard.terminal.scrollPageUp();\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n\n/**\n * Either send a true DEL, or sub in meta-backspace.\n *\n * On Chrome OS, if we know the alt key is down, but we get a DEL event that\n * claims that the alt key is not pressed, we know the DEL was a synthetic\n * one from a user that hit alt-backspace. Based on a user pref, we can sub\n * in meta-backspace in this case.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyDel_ = function(e) {\n  if (this.keyboard.altBackspaceIsMetaBackspace &&\n      this.keyboard.altKeyPressed && !e.altKey) {\n    return '\\x1b\\x7f';\n  }\n  return '\\x1b[3~';\n};\n\n/**\n * Either scroll the scrollback buffer or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyPageDown_ = function(e) {\n  if (this.keyboard.pageKeysScroll === e.shiftKey) {\n    return '\\x1b[6~';\n  }\n\n  this.keyboard.terminal.scrollPageDown();\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n\n/**\n * Either scroll the scrollback buffer or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyArrowUp_ = function(e) {\n  if (!this.keyboard.applicationCursor && e.shiftKey) {\n    this.keyboard.terminal.scrollLineUp();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  }\n\n  return (e.shiftKey || e.ctrlKey || e.altKey || e.metaKey ||\n          !this.keyboard.applicationCursor) ? '\\x1b[A' : '\\x1bOA';\n};\n\n/**\n * Either scroll the scrollback buffer or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyArrowDown_ = function(e) {\n  if (!this.keyboard.applicationCursor && e.shiftKey) {\n    this.keyboard.terminal.scrollLineDown();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  }\n\n  return (e.shiftKey || e.ctrlKey || e.altKey || e.metaKey ||\n          !this.keyboard.applicationCursor) ? '\\x1b[B' : '\\x1bOB';\n};\n\n/**\n * Clear the primary/alternate screens and the scrollback buffer.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onClear_ = function(e) {\n  this.keyboard.terminal.wipeContents();\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n\n/**\n * Handle F11 behavior (fullscreen) when not in a window.\n *\n * It would be nice to use the Fullscreen API, but the UX is slightly different\n * a bad way: the Escape key is automatically registered for exiting.  If we let\n * the browser handle F11 directly though, we still get to capture Escape.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onF11_ = function(e) {\n  if (hterm.windowType !== 'popup' && hterm.windowType !== 'app' &&\n      !e.shiftKey) {\n    return hterm.Keyboard.KeyActions.PASS;\n  } else {\n    return '\\x1b[23~';\n  }\n};\n\n/**\n * Either pass Ctrl+1..9 to the browser or send them to the host.\n *\n * Note that Ctrl+1 and Ctrl+9 don't actually have special sequences mapped\n * to them in xterm or gnome-terminal.  The range is really Ctrl+2..8, but\n * we handle 1..9 since Chrome treats the whole range special.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @param {!hterm.Keyboard.KeyDef} keyDef Key definition.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlNum_ = function(e, keyDef) {\n  // Compute a control character for a given character.\n  function ctl(ch) { return String.fromCharCode(ch.charCodeAt(0) - 64); }\n\n  if (this.keyboard.terminal.passCtrlNumber && !e.shiftKey) {\n    return hterm.Keyboard.KeyActions.PASS;\n  }\n\n  switch (keyDef.keyCap.substr(0, 1)) {\n    case '1': return '1';\n    case '2': return ctl('@');\n    case '3': return ctl('[');\n    case '4': return ctl('\\\\');\n    case '5': return ctl(']');\n    case '6': return ctl('^');\n    case '7': return ctl('_');\n    case '8': return '\\x7f';\n    case '9': return '9';\n  }\n  return hterm.Keyboard.KeyActions.PASS;\n};\n\n/**\n * Either pass Alt+1..9 to the browser or send them to the host.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onAltNum_ = function(e) {\n  if (this.keyboard.terminal.passAltNumber && !e.shiftKey) {\n    return hterm.Keyboard.KeyActions.PASS;\n  }\n\n  return hterm.Keyboard.KeyActions.DEFAULT;\n};\n\n/**\n * Either pass Meta+1..9 to the browser or send them to the host.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onMetaNum_ = function(e) {\n  if (this.keyboard.terminal.passMetaNumber && !e.shiftKey) {\n    return hterm.Keyboard.KeyActions.PASS;\n  }\n\n  return hterm.Keyboard.KeyActions.DEFAULT;\n};\n\n/**\n * Either pass ctrl+[shift]+tab to the browser or strip.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlTab_ = function(e) {\n  if (this.keyboard.terminal.passCtrlTab) {\n    return hterm.Keyboard.KeyActions.PASS;\n  }\n  return hterm.Keyboard.KeyActions.STRIP;\n};\n\n/**\n * Either pass Ctrl & Shift W (close tab/window) to the browser or send it to\n * the host.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlW_ = function(e) {\n  if (this.keyboard.terminal.passCtrlW) {\n    return hterm.Keyboard.KeyActions.PASS;\n  }\n  return '\\x17';\n};\n\n/**\n * Either pass Ctrl & Shift T (new/reopen tab) to the browser or send it to the\n * host.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlT_ = function(e) {\n  if (this.keyboard.terminal.passCtrlT) {\n    return hterm.Keyboard.KeyActions.PASS;\n  }\n  return '\\x14';\n};\n\n/**\n * Select all lines. Returns a function which selects all lines when invoked\n * rather than calling selectAll() directly so that users can override their own\n * key binding for 'Ctrl+Shift+A' if desired.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlShiftA_ = function(e) {\n  this.keyboard.terminal.getScrollPort().selectAll();\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n\n/**\n * Display the find bar.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlShiftF_ = function(e) {\n  this.keyboard.terminal.findBar.display();\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n\n/**\n * Either send a ^C or interpret the keystroke as a copy command.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlC_ = function(e) {\n  const selection = this.keyboard.terminal.getDocument().getSelection();\n\n  if (!selection.isCollapsed) {\n    if (this.keyboard.ctrlCCopy && !e.shiftKey) {\n      // Ctrl+C should copy if there is a selection, send ^C otherwise.\n      // Perform the copy by letting the browser handle Ctrl+C.  On most\n      // browsers, this is the *only* way to place text on the clipboard from\n      // the 'drive-by' web.\n      if (this.keyboard.terminal.clearSelectionAfterCopy) {\n        setTimeout(selection.collapseToEnd.bind(selection), 50);\n      }\n      return hterm.Keyboard.KeyActions.PASS;\n    }\n\n    if (!this.keyboard.ctrlCCopy && e.shiftKey) {\n      // Ctrl+Shift+C should copy if there is a selection, send ^C otherwise.\n      // Perform the copy manually.  This only works in situations where\n      // document.execCommand('copy') is allowed.\n      if (this.keyboard.terminal.clearSelectionAfterCopy) {\n        setTimeout(selection.collapseToEnd.bind(selection), 50);\n      }\n      this.keyboard.terminal.copySelectionToClipboard();\n      return hterm.Keyboard.KeyActions.CANCEL;\n    }\n  }\n\n  return '\\x03';\n};\n\n/**\n * Either send a ^N or open a new window to the same location.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlN_ = function(e) {\n  if (this.keyboard.terminal.passCtrlN) {\n    return hterm.Keyboard.KeyActions.PASS;\n  }\n\n  if (e.shiftKey) {\n    lib.f.openWindow(document.location.href, '',\n                     'chrome=no,close=yes,resize=yes,scrollbars=yes,' +\n                     'minimizable=yes,width=' + window.innerWidth +\n                     ',height=' + window.innerHeight);\n    return hterm.Keyboard.KeyActions.CANCEL;\n  }\n\n  return '\\x0e';\n};\n\n/**\n * Either send a ^V or issue a paste command.\n *\n * The default behavior is to paste if the user presses Ctrl+Shift+V, and send\n * a ^V if the user presses Ctrl+V. This can be flipped with the\n * 'ctrl-v-paste' preference.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlV_ = function(e) {\n  if ((!e.shiftKey && this.keyboard.ctrlVPaste) ||\n      (e.shiftKey && !this.keyboard.ctrlVPaste)) {\n    // We try to do the pasting ourselves as not all browsers/OSs bind Ctrl+V to\n    // pasting.  Notably, on macOS, Ctrl+V/Ctrl+Shift+V do nothing.\n    // However, this might run into web restrictions, so if it fails, we still\n    // fallback to the letting the native behavior (hopefully) save us.\n    if (this.keyboard.terminal.paste() !== false) {\n      return hterm.Keyboard.KeyActions.CANCEL;\n    } else {\n      return hterm.Keyboard.KeyActions.PASS;\n    }\n  }\n\n  return '\\x16';\n};\n\n/**\n * Either the default action or open a new window to the same location.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onMetaN_ = function(e) {\n  if (e.shiftKey) {\n    lib.f.openWindow(document.location.href, '',\n                     'chrome=no,close=yes,resize=yes,scrollbars=yes,' +\n                     'minimizable=yes,width=' + window.outerWidth +\n                     ',height=' + window.outerHeight);\n    return hterm.Keyboard.KeyActions.CANCEL;\n  }\n\n  return hterm.Keyboard.KeyActions.DEFAULT;\n};\n\n/**\n * Either send a Meta+C or allow the browser to interpret the keystroke as a\n * copy command.\n *\n * If there is no selection, or if the user presses Meta+Shift+C, then we'll\n * transmit an '\\x1b' (if metaSendsEscape is on) followed by 'c' or 'C'.\n *\n * If there is a selection, we defer to the browser.  In this case we clear out\n * the selection so the user knows we heard them, and also to give them a\n * chance to send a Meta+C by just hitting the key again.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @param {!hterm.Keyboard.KeyDef} keyDef Key definition.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onMetaC_ = function(e, keyDef) {\n  const document = this.keyboard.terminal.getDocument();\n  if (e.shiftKey || document.getSelection().isCollapsed) {\n    // If the shift key is being held, or there is no document selection, send\n    // a Meta+C.  The keyboard code will add the ESC if metaSendsEscape is true,\n    // we just have to decide between 'c' and 'C'.\n    return keyDef.keyCap.substr(e.shiftKey ? 1 : 0, 1);\n  }\n\n  // Otherwise let the browser handle it as a copy command.\n  if (this.keyboard.terminal.clearSelectionAfterCopy) {\n    setTimeout(function() { document.getSelection().collapseToEnd(); }, 50);\n  }\n  return hterm.Keyboard.KeyActions.PASS;\n};\n\n/**\n * Either PASS or DEFAULT Meta+V, depending on preference.\n *\n * Always PASS Meta+Shift+V to allow browser to interpret the keystroke as\n * a paste command.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onMetaV_ = function(e) {\n  if (e.shiftKey) {\n    return hterm.Keyboard.KeyActions.PASS;\n  }\n\n  return this.keyboard.passMetaV ?\n      hterm.Keyboard.KeyActions.PASS :\n      hterm.Keyboard.KeyActions.DEFAULT;\n};\n\n/**\n * Handle font zooming.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @param {!hterm.Keyboard.KeyDef} keyDef Key definition.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onZoom_ = function(e, keyDef) {\n  if (this.keyboard.ctrlPlusMinusZeroZoom === e.shiftKey) {\n    // If ctrl-PMZ controls zoom and the shift key is pressed, or\n    // ctrl-shift-PMZ controls zoom and this shift key is not pressed,\n    // then we want to send the control code instead of affecting zoom.\n    if (keyDef.keyCap == '-_') {\n      // ^_\n      return '\\x1f';\n    }\n\n    // Only ^_ is valid, the other sequences have no meaning.\n    return hterm.Keyboard.KeyActions.CANCEL;\n  }\n\n  const cap = keyDef.keyCap.substr(0, 1);\n  if (cap == '0') {\n      this.keyboard.terminal.setFontSize(0);\n  } else {\n    let size = this.keyboard.terminal.getFontSize();\n\n    if (cap == '-' || keyDef.keyCap == '[KP-]') {\n      size -= 1;\n    } else {\n      size += 1;\n    }\n\n    this.keyboard.terminal.setFontSize(size);\n  }\n\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n// SOURCE FILE: hterm/js/hterm_keyboard_keypattern.js\n// Copyright (c) 2015 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * A record of modifier bits and keycode used to define a key binding.\n *\n * The modifier names are enumerated in the static KeyPattern.modifiers\n * property below.  Each modifier can be true, false, or \"*\".  True means\n * the modifier key must be present, false means it must not, and \"*\" means\n * it doesn't matter.\n *\n * @param {!hterm.Keyboard.KeyDown} spec\n * @constructor\n */\nhterm.Keyboard.KeyPattern = function(spec) {\n  this.wildcardCount = 0;\n  this.keyCode = spec.keyCode;\n\n  hterm.Keyboard.KeyPattern.modifiers.forEach(function(mod) {\n    this[mod] = spec[mod] || false;\n    if (this[mod] == '*') {\n      this.wildcardCount++;\n    }\n  }.bind(this));\n};\n\n/**\n * Valid modifier names.\n */\nhterm.Keyboard.KeyPattern.modifiers = [\n  'shift', 'ctrl', 'alt', 'meta',\n];\n\n/**\n * A compare callback for Array.prototype.sort().\n *\n * The bindings code wants to be sure to search through the strictest key\n * patterns first, so that loosely defined patterns have a lower priority than\n * exact patterns.\n *\n * @param {!hterm.Keyboard.KeyPattern} a\n * @param {!hterm.Keyboard.KeyPattern} b\n * @return {number}\n */\nhterm.Keyboard.KeyPattern.sortCompare = function(a, b) {\n  if (a.wildcardCount < b.wildcardCount) {\n    return -1;\n  }\n\n  if (a.wildcardCount > b.wildcardCount) {\n    return 1;\n  }\n\n  return 0;\n};\n\n/**\n * Private method used to match this key pattern against other key patterns\n * or key down events.\n *\n * @param {!hterm.Keyboard.KeyDown} obj The object to match.\n * @param {boolean} exactMatch True if we should ignore wildcards.  Useful when\n *     you want\n *   to perform and exact match against another key pattern.\n * @return {boolean}\n */\nhterm.Keyboard.KeyPattern.prototype.match_ = function(obj, exactMatch) {\n  if (this.keyCode != obj.keyCode) {\n    return false;\n  }\n\n  let rv = true;\n\n  hterm.Keyboard.KeyPattern.modifiers.forEach(function(mod) {\n    const modValue = (mod in obj) ? obj[mod] : false;\n    if (!rv || (!exactMatch && this[mod] == '*') || this[mod] == modValue) {\n      return;\n    }\n\n    rv = false;\n  }.bind(this));\n\n  return rv;\n};\n\n/**\n * Return true if the given keyDown object is a match for this key pattern.\n *\n * @param {!hterm.Keyboard.KeyDown} keyDown An object with a keyCode property\n *     and zero or more boolean properties representing key modifiers.  These\n *     property names must match those defined in\n *     hterm.Keyboard.KeyPattern.modifiers.\n * @return {boolean}\n */\nhterm.Keyboard.KeyPattern.prototype.matchKeyDown = function(keyDown) {\n  return this.match_(keyDown, false);\n};\n\n/**\n * Return true if the given hterm.Keyboard.KeyPattern is exactly the same as\n * this one.\n *\n * @param {!hterm.Keyboard.KeyPattern} keyPattern\n * @return {boolean}\n */\nhterm.Keyboard.KeyPattern.prototype.matchKeyPattern = function(keyPattern) {\n  return this.match_(keyPattern, true);\n};\n// SOURCE FILE: hterm/js/hterm_notifications.js\n// Copyright 2020 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview A UI for managing user notifications.  It's a distinct UI space\n *     from the terminal itself to help users clearly distinguish between remote\n *     output.  This makes it hard for the remote to spoof the user.\n */\n\n/**\n * Class that controls everything about the notification center.\n */\nhterm.NotificationCenter = class {\n  /**\n   * @param {!Element} parent The node that we will display inside.\n   * @param {?hterm.AccessibilityReader=} reader Helper for reading content.\n   */\n  constructor(parent, reader = undefined) {\n    this.parent_ = parent;\n    this.reader_ = reader;\n    this.container_ = this.newContainer_();\n    /** @type {?number} Id for automatic hiding timeout. */\n    this.timeout_ = null;\n    /** @type {number} Fadeout delay (for tests to control). */\n    this.fadeout_ = 200;\n  }\n\n  /** @return {!Element} */\n  newContainer_() {\n    const ele = this.parent_.ownerDocument.createElement('div');\n    ele.style.cssText =\n        'color: rgb(var(--hterm-background-color));' +\n        'background-color: rgb(var(--hterm-foreground-color));' +\n        'border-radius: 12px;' +\n        'font: 500 var(--hterm-font-size) \"Noto Sans\", sans-serif;' +\n        'opacity: 0.75;' +\n        'padding: 0.923em 1.846em;' +\n        'position: absolute;' +\n        'user-select: none;' +\n        'transition: opacity 180ms ease-in;';\n\n    // Prevent the dialog from gaining focus.\n    ele.addEventListener('mousedown', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }, true);\n\n    return ele;\n  }\n\n  /**\n   * Show a notification for the specified duration.\n   *\n   * The notification appears in inverse video, centered over the terminal.\n   *\n   * @param {string|!Node} msg The message to display.\n   * @param {{\n   *     timeout: (?number|undefined),\n   * }=} options\n   *     timeout: How long (millisec) to wait before hiding the notification.\n   *         Pass null to never autohide.\n   */\n  show(msg, {timeout = 1500} = {}) {\n    const node = typeof msg === 'string' ? new Text(msg) : msg;\n\n    // Hacky heuristic: if we're currently showing a notification w/out a\n    // timeout, and the new one includes a timeout, leave the existing one\n    // alone.  We should rework this stack a bit to give more power to the\n    // callers, but for now, this should be OK.\n    if (this.container_.parentNode && this.timeout_ === null &&\n        timeout !== null) {\n      return;\n    }\n\n    // Remove all children first.\n    this.container_.textContent = '';\n    this.container_.appendChild(node);\n    this.container_.style.opacity = '0.75';\n\n    // Display on the page if it isn't already.\n    if (!this.container_.parentNode) {\n      this.parent_.appendChild(this.container_);\n    }\n\n    // Keep the notification centered.\n    const size = this.container_.getBoundingClientRect();\n    this.container_.style.top = `calc(50% - ${size.height / 2}px)`;\n    this.container_.style.left = `calc(50% - ${size.width / 2}px)`;\n\n    if (this.reader_) {\n      this.reader_.assertiveAnnounce(this.container_.textContent);\n    }\n\n    // Handle automatic hiding of the UI.\n    if (this.timeout_) {\n      clearTimeout(this.timeout_);\n      this.timeout_ = null;\n    }\n    if (timeout === null) {\n      return;\n    }\n    this.timeout_ = setTimeout(() => {\n      this.container_.style.opacity = '0';\n      this.timeout_ = setTimeout(() => this.hide(), this.fadeout_);\n    }, timeout);\n  }\n\n  /**\n   * Hide the active notification immediately.\n   *\n   * Useful when we show a message for an event with an unknown end time.\n   */\n  hide() {\n    if (this.timeout_) {\n      clearTimeout(this.timeout_);\n      this.timeout_ = null;\n    }\n\n    this.container_.remove();\n    // Remove all children in case there was sensitive content shown that we\n    // don't want to leave laying around.\n    this.container_.textContent = '';\n  }\n};\n// SOURCE FILE: hterm/js/hterm_options.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview This file implements the hterm.Options class,\n * which stores current operating conditions for the terminal.  This object is\n * used instead of a series of parameters to allow saving/restoring of cursor\n * conditions easily, and to provide an easy place for common configuration\n * options.\n *\n * Original code by Cory Maccarrone.\n */\n\n/**\n * Constructor for the hterm.Options class, optionally acting as a copy\n * constructor.\n *\n * The defaults are as defined in http://www.vt100.net/docs/vt510-rm/DECSTR\n * except that we enable autowrap (wraparound) by default since that seems to\n * be what xterm does.\n *\n * @param {!hterm.Options=} copy Optional instance to copy.\n * @constructor\n */\nhterm.Options = function(copy = undefined) {\n  // All attributes in this class are public to allow easy access by the\n  // terminal.\n\n  this.wraparound = copy ? copy.wraparound : true;\n  this.reverseWraparound = copy ? copy.reverseWraparound : false;\n  this.originMode = copy ? copy.originMode : false;\n  this.autoCarriageReturn = copy ? copy.autoCarriageReturn : false;\n  this.cursorVisible = copy ? copy.cursorVisible : false;\n  this.cursorBlink = copy ? copy.cursorBlink : false;\n  this.insertMode = copy ? copy.insertMode : false;\n  this.reverseVideo = copy ? copy.reverseVideo : false;\n  this.bracketedPaste = copy ? copy.bracketedPaste : false;\n};\n// SOURCE FILE: hterm/js/hterm_parser.js\n// Copyright (c) 2015 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Parses the key definition syntax used for user keyboard customizations.\n *\n * @constructor\n */\nhterm.Parser = function() {\n  /**\n   * @type {string} The source string.\n   */\n  this.source = '';\n\n  /**\n   * @type {number} The current position.\n   */\n  this.pos = 0;\n\n  /**\n   * @type {?string} The character at the current position.\n   */\n  this.ch = null;\n};\n\n/**\n * @param {string} message\n * @return {!Error}\n */\nhterm.Parser.prototype.error = function(message) {\n  return new Error('Parse error at ' + this.pos + ': ' + message);\n};\n\n/** @return {boolean} */\nhterm.Parser.prototype.isComplete = function() {\n  return this.pos == this.source.length;\n};\n\n/**\n * @param {string} source\n * @param {number=} pos\n */\nhterm.Parser.prototype.reset = function(source, pos = 0) {\n  this.source = source;\n  this.pos = pos;\n  this.ch = source.substr(0, 1);\n};\n\n/**\n * Parse a key sequence.\n *\n * A key sequence is zero or more of the key modifiers defined in\n * hterm.Parser.identifiers.modifierKeys followed by a key code.  Key\n * codes can be an integer or an identifier from\n * hterm.Parser.identifiers.keyCodes.  Modifiers and keyCodes should be joined\n * by the dash character.\n *\n * An asterisk \"*\" can be used to indicate that the unspecified modifiers\n * are optional.\n *\n * For example:\n *   A: Matches only an unmodified \"A\" character.\n *   65: Same as above.\n *   0x41: Same as above.\n *   Ctrl+A: Matches only Ctrl+A.\n *   Ctrl+65: Same as above.\n *   Ctrl+0x41: Same as above.\n *   Ctrl+Shift+A: Matches only Ctrl+Shift+A.\n *   Ctrl+*+A: Matches Ctrl+A, as well as any other key sequence that includes\n *     at least the Ctrl and A keys.\n *\n * @return {!hterm.Keyboard.KeyDown} An object with shift, ctrl, alt, meta,\n *     keyCode properties.\n */\nhterm.Parser.prototype.parseKeySequence = function() {\n  const rv = {\n    keyCode: null,\n  };\n\n  for (const k in hterm.Parser.identifiers.modifierKeys) {\n    rv[hterm.Parser.identifiers.modifierKeys[k]] = false;\n  }\n\n  while (this.pos < this.source.length) {\n    this.skipSpace();\n\n    const token = this.parseToken();\n    if (token.type == 'integer') {\n      rv.keyCode = token.value;\n\n    } else if (token.type == 'identifier') {\n      const ucValue = token.value.toUpperCase();\n      if (ucValue in hterm.Parser.identifiers.modifierKeys &&\n          hterm.Parser.identifiers.modifierKeys.hasOwnProperty(ucValue)) {\n        const mod = hterm.Parser.identifiers.modifierKeys[ucValue];\n        if (rv[mod] && rv[mod] != '*') {\n          throw this.error('Duplicate modifier: ' + token.value);\n        }\n        rv[mod] = true;\n\n      } else if (ucValue in hterm.Parser.identifiers.keyCodes &&\n                 hterm.Parser.identifiers.keyCodes.hasOwnProperty(ucValue)) {\n        rv.keyCode = hterm.Parser.identifiers.keyCodes[ucValue];\n\n      } else {\n        throw this.error('Unknown key: ' + token.value);\n      }\n\n    } else if (token.type == 'symbol') {\n      if (token.value == '*') {\n        for (const id in hterm.Parser.identifiers.modifierKeys) {\n          const p = hterm.Parser.identifiers.modifierKeys[id];\n          if (!rv[p]) {\n            rv[p] = '*';\n          }\n        }\n      } else {\n        throw this.error('Unexpected symbol: ' + token.value);\n      }\n    } else {\n      throw this.error('Expected integer or identifier');\n    }\n\n    this.skipSpace();\n\n    if (this.ch !== '-' && this.ch !== '+') {\n      break;\n    }\n\n    if (rv.keyCode != null) {\n      throw this.error('Extra definition after target key');\n    }\n\n    this.advance(1);\n  }\n\n  if (rv.keyCode == null) {\n    throw this.error('Missing target key');\n  }\n\n  return rv;\n};\n\n/** @return {string} */\nhterm.Parser.prototype.parseKeyAction = function() {\n  this.skipSpace();\n\n  const token = this.parseToken();\n\n  if (token.type == 'string') {\n    return token.value;\n  }\n\n  if (token.type == 'identifier') {\n    if (token.value in hterm.Parser.identifiers.actions &&\n        hterm.Parser.identifiers.actions.hasOwnProperty(token.value)) {\n      return hterm.Parser.identifiers.actions[token.value];\n    }\n\n    throw this.error('Unknown key action: ' + token.value);\n  }\n\n  throw this.error('Expected string or identifier');\n\n};\n\n/** @return {boolean} */\nhterm.Parser.prototype.peekString = function() {\n  return this.ch == '\\'' || this.ch == '\"';\n};\n\n/** @return {boolean} */\nhterm.Parser.prototype.peekIdentifier = function() {\n  return !!this.ch.match(/[a-z_]/i);\n};\n\n/** @return {boolean} */\nhterm.Parser.prototype.peekInteger = function() {\n  return !!this.ch.match(/[0-9]/);\n};\n\n/** @return {!Object} */\nhterm.Parser.prototype.parseToken = function() {\n  if (this.ch == '*') {\n    const rv = {type: 'symbol', value: this.ch};\n    this.advance(1);\n    return rv;\n  }\n\n  if (this.peekIdentifier()) {\n    return {type: 'identifier', value: this.parseIdentifier()};\n  }\n\n  if (this.peekString()) {\n    return {type: 'string', value: this.parseString()};\n  }\n\n  if (this.peekInteger()) {\n    return {type: 'integer', value: this.parseInteger()};\n  }\n\n  throw this.error('Unexpected token');\n};\n\n/** @return {string} */\nhterm.Parser.prototype.parseIdentifier = function() {\n  if (!this.peekIdentifier()) {\n    throw this.error('Expected identifier');\n  }\n\n  return this.parsePattern(/[a-z0-9_]+/ig);\n};\n\n/** @return {number} */\nhterm.Parser.prototype.parseInteger = function() {\n  if (this.ch == '0' && this.pos < this.source.length - 1 &&\n      this.source.substr(this.pos + 1, 1) == 'x') {\n    /* eslint-disable radix */\n    return parseInt(this.parsePattern(/0x[0-9a-f]+/gi), undefined);\n  }\n\n  return parseInt(this.parsePattern(/\\d+/g), 10);\n};\n\n/**\n * Parse a single or double quoted string.\n *\n * The current position should point at the initial quote character.  Single\n * quoted strings will be treated literally, double quoted will process escapes.\n *\n * TODO(rginda): Variable interpolation.\n *\n * @return {string}\n */\nhterm.Parser.prototype.parseString = function() {\n  let result = '';\n\n  const quote = this.ch;\n  if (quote != '\"' && quote != '\\'') {\n    throw this.error('String expected');\n  }\n\n  this.advance(1);\n\n  const re = new RegExp('[\\\\\\\\' + quote + ']', 'g');\n\n  while (this.pos < this.source.length) {\n    re.lastIndex = this.pos;\n    if (!re.exec(this.source)) {\n      throw this.error('Unterminated string literal');\n    }\n\n    result += this.source.substring(this.pos, re.lastIndex - 1);\n\n    this.advance(re.lastIndex - this.pos - 1);\n\n    if (quote == '\"' && this.ch == '\\\\') {\n      this.advance(1);\n      result += this.parseEscape();\n      continue;\n    }\n\n    if (quote == '\\'' && this.ch == '\\\\') {\n      result += this.ch;\n      this.advance(1);\n      continue;\n    }\n\n    if (this.ch == quote) {\n      this.advance(1);\n      return result;\n    }\n  }\n\n  throw this.error('Unterminated string literal');\n};\n\n\n/**\n * Parse an escape code from the current position (which should point to\n * the first character AFTER the leading backslash.)\n *\n * @return {string}\n */\nhterm.Parser.prototype.parseEscape = function() {\n  const map = {\n    '\"': '\"',\n    '\\'': '\\'',\n    '\\\\': '\\\\',\n    'a': '\\x07',\n    'b': '\\x08',\n    'e': '\\x1b',\n    'f': '\\x0c',\n    'n': '\\x0a',\n    'r': '\\x0d',\n    't': '\\x09',\n    'v': '\\x0b',\n    'x': function() {\n      const value = this.parsePattern(/[a-z0-9]{2}/ig);\n      return String.fromCharCode(parseInt(value, 16));\n    },\n    'u': function() {\n      const value = this.parsePattern(/[a-z0-9]{4}/ig);\n      return String.fromCharCode(parseInt(value, 16));\n    },\n  };\n\n  if (!(this.ch in map && map.hasOwnProperty(this.ch))) {\n    throw this.error('Unknown escape: ' + this.ch);\n  }\n\n  let value = map[this.ch];\n  this.advance(1);\n\n  if (typeof value == 'function') {\n    value = value.call(this);\n  }\n\n  return value;\n};\n\n/**\n * Parse the given pattern starting from the current position.\n *\n * @param {!RegExp} pattern A pattern representing the characters to span.  MUST\n *   include the \"global\" RegExp flag.\n * @return {string}\n */\nhterm.Parser.prototype.parsePattern = function(pattern) {\n  if (!pattern.global) {\n    throw this.error('Internal error: Span patterns must be global');\n  }\n\n  pattern.lastIndex = this.pos;\n  const ary = pattern.exec(this.source);\n\n  if (!ary || pattern.lastIndex - ary[0].length != this.pos) {\n    throw this.error('Expected match for: ' + pattern);\n  }\n\n  this.pos = pattern.lastIndex - 1;\n  this.advance(1);\n\n  return ary[0];\n};\n\n\n/**\n * Advance the current position.\n *\n * @param {number} count\n */\nhterm.Parser.prototype.advance = function(count) {\n  this.pos += count;\n  this.ch = this.source.substr(this.pos, 1);\n};\n\n/**\n * @param {string=} expect A list of valid non-whitespace characters to\n *   terminate on.\n * @return {void}\n */\nhterm.Parser.prototype.skipSpace = function(expect = undefined) {\n  if (!/\\s/.test(this.ch)) {\n    return;\n  }\n\n  const re = /\\s+/gm;\n  re.lastIndex = this.pos;\n\n  const source = this.source;\n  if (re.exec(source)) {\n    this.pos = re.lastIndex;\n  }\n\n  this.ch = this.source.substr(this.pos, 1);\n\n  if (expect) {\n    if (this.ch.indexOf(expect) == -1) {\n      throw this.error(`Expected one of ${expect}, found: ${this.ch}`);\n    }\n  }\n};\n// SOURCE FILE: hterm/js/hterm_parser_identifiers.js\n// Copyright (c) 2015 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Collections of identifier for hterm.Parser.\n */\nhterm.Parser.identifiers = {};\n\n/**\n * Modifier key names used when defining key sequences.\n *\n * These are upper case so we can normalize the user input and be forgiving.\n * \"CTRL+A\" and \"Ctrl+A\" and \"ctrl+a\" are all accepted.\n *\n * Note: Names here cannot overlap with hterm.Parser.identifiers.keyCodes.\n */\nhterm.Parser.identifiers.modifierKeys = {\n  SHIFT: 'shift',\n  CTRL: 'ctrl',\n  // Common alias.\n  CONTROL: 'ctrl',\n  ALT: 'alt',\n  META: 'meta',\n};\n\n/**\n * Key codes useful when defining key sequences.\n *\n * Punctuation is mostly left out of this list because they can move around\n * based on keyboard locale and browser.\n *\n * In a key sequence like \"Ctrl+ESC\", the ESC comes from this list of\n * identifiers.  It is equivalent to \"Ctrl+27\" and \"Ctrl+0x1b\".\n *\n * These are upper case so we can normalize the user input and be forgiving.\n * \"Ctrl+ESC\" and \"Ctrl+Esc\" an \"Ctrl+esc\" are all accepted.\n *\n * We also include common aliases for the same key.  \"Esc\" and \"Escape\" are the\n * same key.\n *\n * Note: Names here cannot overlap with hterm.Parser.identifiers.modifierKeys.\n */\nhterm.Parser.identifiers.keyCodes = {\n  // Top row.\n  ESCAPE: 27,\n  ESC: 27,\n  F1: 112,\n  F2: 113,\n  F3: 114,\n  F4: 115,\n  F5: 116,\n  F6: 117,\n  F7: 118,\n  F8: 119,\n  F9: 120,\n  F10: 121,\n  F11: 122,\n  F12: 123,\n\n  // Row two.\n  ONE: 49,\n  TWO: 50,\n  THREE: 51,\n  FOUR: 52,\n  FIVE: 53,\n  SIX: 54,\n  SEVEN: 55,\n  EIGHT: 56,\n  NINE: 57,\n  ZERO: 48,\n  MINUS: 189,\n  EQUAL: 187,\n  BACKSPACE: 8,\n  BKSP: 8,\n  BS: 8,\n\n  // Row three.\n  TAB: 9,\n  Q: 81,\n  W: 87,\n  E: 69,\n  R: 82,\n  T: 84,\n  Y: 89,\n  U: 85,\n  // eslint-disable-next-line id-denylist\n  I: 73,\n  O: 79,\n  P: 80,\n  BRACKET_LEFT: 219,\n  BRACKET_RIGHT: 221,\n\n  // Row four.\n  CAPS_LOCK: 20,\n  CAPSLOCK: 20,\n  CAPS: 20,\n  A: 65,\n  S: 83,\n  D: 68,\n  F: 70,\n  G: 71,\n  H: 72,\n  J: 74,\n  K: 75,\n  L: 76,\n  // We map enter and return together even though enter should really be 10\n  // because most people don't know or care about the history here.  Plus,\n  // most keyboards/programs map them together already.  If they really want\n  // to bind them differently, they can also use the numeric value.\n  ENTER: 13,\n  ENT: 13,\n  RETURN: 13,\n  RET: 13,\n\n  // Row five.\n  Z: 90,\n  X: 88,\n  C: 67,\n  V: 86,\n  B: 66,\n  N: 78,\n  M: 77,\n\n  // Etc.\n  SPACE: 32,\n  SP: 32,\n  PRINT_SCREEN: 42,\n  PRTSC: 42,\n  SCROLL_LOCK: 145,\n  SCRLK: 145,\n  BREAK: 19,\n  BRK: 19,\n  INSERT: 45,\n  INS: 45,\n  HOME: 36,\n  PAGE_UP: 33,\n  PGUP: 33,\n  DELETE: 46,\n  DEL: 46,\n  END: 35,\n  PAGE_DOWN: 34,\n  PGDOWN: 34,\n  PGDN: 34,\n  UP: 38,\n  DOWN: 40,\n  RIGHT: 39,\n  LEFT: 37,\n  NUMLOCK: 144,\n\n  // Keypad\n  KP0: 96,\n  KP1: 97,\n  KP2: 98,\n  KP3: 99,\n  KP4: 100,\n  KP5: 101,\n  KP6: 102,\n  KP7: 103,\n  KP8: 104,\n  KP9: 105,\n  KP_PLUS: 107,\n  KP_ADD: 107,\n  KP_MINUS: 109,\n  KP_SUBTRACT: 109,\n  KP_STAR: 106,\n  KP_MULTIPLY: 106,\n  KP_DIVIDE: 111,\n  KP_DECIMAL: 110,\n  KP_PERIOD: 110,\n\n  // Chrome OS media keys\n  NAVIGATE_BACK: 166,\n  NAVIGATE_FORWARD: 167,\n  RELOAD: 168,\n  FULL_SCREEN: 183,\n  WINDOW_OVERVIEW: 182,\n  BRIGHTNESS_UP: 216,\n  BRIGHTNESS_DOWN: 217,\n};\n\n/**\n * Identifiers for use in key actions.\n */\nhterm.Parser.identifiers.actions = {\n  /**\n   * Prevent the browser and operating system from handling the event.\n   */\n  CANCEL: hterm.Keyboard.KeyActions.CANCEL,\n\n  /**\n   * Wait for a \"keypress\" event, send the keypress charCode to the host.\n   */\n  DEFAULT: hterm.Keyboard.KeyActions.DEFAULT,\n\n  /**\n   * Let the browser or operating system handle the key.\n   */\n  PASS: hterm.Keyboard.KeyActions.PASS,\n\n  /**\n   * Scroll the terminal one line up.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  scrollLineUp: function(terminal) {\n    terminal.scrollLineUp();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Scroll the terminal one line down.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  scrollLineDown: function(terminal) {\n    terminal.scrollLineDown();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Scroll the terminal one page up.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  scrollPageUp: function(terminal) {\n    terminal.scrollPageUp();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Scroll the terminal one page down.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  scrollPageDown: function(terminal) {\n    terminal.scrollPageDown();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Scroll the terminal to the top.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  scrollToTop: function(terminal) {\n    terminal.scrollHome();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Scroll the terminal to the bottom.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  scrollToBottom: function(terminal) {\n    terminal.scrollEnd();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Select all lines in the terminal buffer.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  selectAll: function(terminal) {\n    terminal.getScrollPort().selectAll();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Clear the active screen and move the cursor to (0,0).\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  clearScreen: function(terminal) {\n    terminal.clearHome();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Clear the scrollback buffer.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  clearScrollback: function(terminal) {\n    terminal.clearScrollback();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Clear the terminal and scrollback buffer and move the cursor to (0,0).\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  clearTerminal: function(terminal) {\n    terminal.wipeContents();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Perform a full terminal reset.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  fullReset: function(terminal) {\n    terminal.reset();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Perform a soft terminal reset.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  softReset: function(terminal) {\n    terminal.softReset();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n};\n// SOURCE FILE: hterm/js/hterm_preference_manager.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * PreferenceManager subclass managing global NaSSH preferences.\n *\n * This is currently just an ordered list of known connection profiles.\n *\n * @param {string=} profileId Uses 'default' if not specified.\n * @extends {lib.PreferenceManager}\n * @constructor\n */\nhterm.PreferenceManager = function(\n    profileId = hterm.Terminal.DEFAULT_PROFILE_ID) {\n  lib.PreferenceManager.call(this, hterm.defaultStorage,\n                             hterm.PreferenceManager.prefix_ + profileId);\n  Object.entries(hterm.PreferenceManager.defaultPreferences).forEach(\n      ([key, entry]) => {\n        this.definePreference(key, entry['default']);\n      });\n};\n\n/**\n * The storage key prefix to namespace the preferences.\n */\nhterm.PreferenceManager.prefix_ = '/hterm/profiles/';\n\n/**\n * List all the defined profiles.\n *\n * @param {!lib.Storage} storage Where to look for profiles.\n * @param {function(!Array<string>)} callback Called with the list of profiles.\n */\nhterm.PreferenceManager.listProfiles = function(storage, callback) {\n  storage.getItems(null).then((items) => {\n    const profiles = {};\n    for (const key of Object.keys(items)) {\n      if (key.startsWith(hterm.PreferenceManager.prefix_)) {\n        // Turn \"/hterm/profiles/foo/bar/cow\" to \"foo/bar/cow\".\n        const subKey = key.slice(hterm.PreferenceManager.prefix_.length);\n        // Turn \"foo/bar/cow\" into \"foo\".\n        profiles[subKey.split('/', 1)[0]] = true;\n      }\n    }\n    callback(Object.keys(profiles));\n  });\n};\n\n/** @enum {string} */\nhterm.PreferenceManager.Categories = {\n  Keyboard: 'Keyboard',\n  Appearance: 'Appearance',\n  CopyPaste: 'CopyPaste',\n  Sounds: 'Sounds',\n  Scrolling: 'Scrolling',\n  Encoding: 'Encoding',\n  Extensions: 'Extensions',\n  Miscellaneous: 'Miscellaneous',\n};\n\n/**\n * List of categories, ordered by display order (top to bottom)\n */\nhterm.PreferenceManager.categoryDefinitions = [\n  {id: hterm.PreferenceManager.Categories.Appearance,\n    text: 'Appearance (fonts, colors, images)'},\n  {id: hterm.PreferenceManager.Categories.CopyPaste,\n    text: 'Copy & Paste'},\n  {id: hterm.PreferenceManager.Categories.Encoding,\n    text: 'Encoding'},\n  {id: hterm.PreferenceManager.Categories.Keyboard,\n    text: 'Keyboard'},\n  {id: hterm.PreferenceManager.Categories.Scrolling,\n    text: 'Scrolling'},\n  {id: hterm.PreferenceManager.Categories.Sounds,\n    text: 'Sounds'},\n  {id: hterm.PreferenceManager.Categories.Extensions,\n    text: 'Extensions'},\n  {id: hterm.PreferenceManager.Categories.Miscellaneous,\n    text: 'Miscellaneous'},\n];\n\n/**\n * Internal helper to create a default preference object.\n *\n * @param {string} name The user readable name/title.\n * @param {!hterm.PreferenceManager.Categories} category The pref category.\n * @param {boolean|number|string|?Object} defaultValue The default pref value.\n * @param {string|!Array<string|null>} type The type for this pref (or an array\n *     for enums).\n * @param {string} help The user readable help text.\n * @return {!Object} The default pref object.\n */\nhterm.PreferenceManager.definePref_ = function(\n    name, category, defaultValue, type, help) {\n  return {\n    'name': name,\n    'category': category,\n    'default': defaultValue,\n    'type': type,\n    'help': help,\n  };\n};\n\nhterm.PreferenceManager.defaultPreferences = {\n  'alt-gr-mode': hterm.PreferenceManager.definePref_(\n      'AltGr key mode',\n      hterm.PreferenceManager.Categories.Keyboard,\n      null, [null, 'none', 'ctrl-alt', 'left-alt', 'right-alt'],\n      `Select an AltGr detection heuristic.\\n` +\n      `\\n` +\n      `'null': Autodetect based on navigator.language:\\n` +\n      `      'en-us' => 'none', else => 'right-alt'\\n` +\n      `'none': Disable any AltGr emulation.\\n` +\n      `'ctrl-alt': Assume Ctrl+Alt means AltGr.\\n` +\n      `'left-alt': Assume left Alt means AltGr.\\n` +\n      `'right-alt': Assume right Alt means AltGr.`,\n  ),\n\n  'alt-backspace-is-meta-backspace': hterm.PreferenceManager.definePref_(\n      'Alt+Backspace is Meta+Backspace',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `If set, undoes the Chrome OS Alt+Backspace->Delete remap, so that ` +\n      `Alt+Backspace indeed is Alt+Backspace.`,\n  ),\n\n  'alt-is-meta': hterm.PreferenceManager.definePref_(\n      'Treat Alt key as Meta key',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Whether the Alt key acts as a Meta key or as a distinct Alt key.`,\n  ),\n\n  'alt-sends-what': hterm.PreferenceManager.definePref_(\n      'Alt key modifier handling',\n      hterm.PreferenceManager.Categories.Keyboard,\n      'escape', ['escape', '8-bit', 'browser-key'],\n      `Controls how the Alt key is handled.\\n` +\n      `\\n` +\n      `  escape: Send an ESC prefix.\\n` +\n      `  8-bit: Add 128 to the typed character as in xterm.\\n` +\n      `  browser-key: Wait for the keypress event and see what the browser\\n` +\n      `    says. (This won't work well on platforms where the browser\\n` +\n      `    performs a default action for some Alt sequences.)`,\n  ),\n\n  'audible-bell-sound': hterm.PreferenceManager.definePref_(\n      'Alert bell sound (URI)',\n      hterm.PreferenceManager.Categories.Sounds,\n      'lib-resource:hterm/audio/bell', 'url',\n      `URL of the terminal bell sound. Leave it blank for no audible bell.`,\n  ),\n\n  'desktop-notification-bell': hterm.PreferenceManager.definePref_(\n      'Create desktop notifications for alert bells',\n      hterm.PreferenceManager.Categories.Sounds,\n      false, 'bool',\n      `If true, terminal bells in the background will create a Web ` +\n      `Notification. https://www.w3.org/TR/notifications/\\n` +\n      `\\n` +\n      `Displaying notifications requires permission from the user. When this ` +\n      `option is set to true, hterm will attempt to ask the user for ` +\n      `permission if necessary. Browsers might not show this permission ` +\n      `request if it was not triggered by a user action.\\n` +\n      `\\n` +\n      `Chrome extensions with the \"notifications\" permission have permission ` +\n      `to display notifications.`,\n  ),\n\n  'background-color': hterm.PreferenceManager.definePref_(\n      'Background color',\n      hterm.PreferenceManager.Categories.Appearance,\n      'rgb(16, 16, 16)', 'color',\n      `The background color for text with no other color attributes.`,\n  ),\n\n  'background-image': hterm.PreferenceManager.definePref_(\n      'Background image',\n      hterm.PreferenceManager.Categories.Appearance,\n      '', 'string',\n      `CSS value of the background image. Leave it blank for no image.\\n` +\n      `\\n` +\n      `For example:\\n` +\n      `  url(https://goo.gl/anedTK)\\n` +\n      `  linear-gradient(top bottom, blue, red)`,\n  ),\n\n  'background-size': hterm.PreferenceManager.definePref_(\n      'Background image size',\n      hterm.PreferenceManager.Categories.Appearance,\n      '', 'string',\n      `CSS value of the background image size.`,\n  ),\n\n  'background-position': hterm.PreferenceManager.definePref_(\n      'Background image position',\n      hterm.PreferenceManager.Categories.Appearance,\n      '', 'string',\n      `CSS value of the background image position.\\n` +\n      `\\n` +\n      `For example:\\n` +\n      `  10% 10%\\n` +\n      `  center`,\n  ),\n\n  'backspace-sends-backspace': hterm.PreferenceManager.definePref_(\n      'Backspace key behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `If true, the Backspace key will send BS ('\\\\x08', aka ^H). Otherwise ` +\n      `the Backspace key will send '\\\\x7f'.`,\n  ),\n\n  'character-map-overrides': hterm.PreferenceManager.definePref_(\n      'Character map overrides',\n      hterm.PreferenceManager.Categories.Appearance,\n      null, 'value',\n      `This is specified as an object. It is a sparse array, where each ` +\n      `property is the character set code and the value is an object that is ` +\n      `a sparse array itself. In that sparse array, each property is the ` +\n      `received character and the value is the displayed character.\\n` +\n      `\\n` +\n      `For example:\\n` +\n      `{ \"0\": {\\n` +\n      `  \"+\": \"\\\\u2192\",\\n` +\n      `  \",\": \"\\\\u2190\",\\n` +\n      `  \"-\": \"\\\\u2191\",\\n` +\n      `  \".\": \"\\\\u2193\",\\n` +\n      `  \"0\": \"\\\\u2588\"\\n} }`,\n  ),\n\n  // TODO(crbug.com/1258487): remove this after all users has migrated.\n  'close-on-exit': hterm.PreferenceManager.definePref_(\n      'Close window on exit',\n      hterm.PreferenceManager.Categories.Miscellaneous,\n      true, 'bool',\n      `Whether to close the window when the command finishes executing.`,\n  ),\n\n  'cursor-blink': hterm.PreferenceManager.definePref_(\n      'Cursor blink',\n      hterm.PreferenceManager.Categories.Appearance,\n      false, 'bool',\n      `Whether the text cursor blinks by default. This can be toggled at ` +\n      `runtime via terminal escape sequences.`,\n  ),\n\n  'cursor-blink-cycle': hterm.PreferenceManager.definePref_(\n      'Cursor blink rate',\n      hterm.PreferenceManager.Categories.Appearance,\n      [1000, 500], 'value',\n      `The text cursor blink rate in milliseconds.\\n` +\n      `\\n` +\n      `A two element array, the first of which is how long the text cursor ` +\n      `should be on, second is how long it should be off.`,\n  ),\n\n  'cursor-shape': hterm.PreferenceManager.definePref_(\n      'Text cursor shape',\n      hterm.PreferenceManager.Categories.Appearance,\n      'BLOCK', ['BLOCK', 'BEAM', 'UNDERLINE'],\n      `The shape of the visible text cursor. This can be changed at ` +\n      `runtime via terminal escape sequences.`,\n  ),\n\n  'cursor-color': hterm.PreferenceManager.definePref_(\n      'Text cursor color',\n      hterm.PreferenceManager.Categories.Appearance,\n      'rgba(255, 0, 0, 0.5)', 'color',\n      `The color of the visible text cursor.`,\n  ),\n\n  'color-palette-overrides': hterm.PreferenceManager.definePref_(\n      'Initial color palette',\n      hterm.PreferenceManager.Categories.Appearance,\n      null, 'value',\n      `Override colors in the default palette.\\n` +\n      `\\n` +\n      `This can be specified as an array or an object. If specified as an ` +\n      `object it is assumed to be a sparse array, where each property ` +\n      `is a numeric index into the color palette.\\n` +\n      `\\n` +\n      `Values can be specified as almost any CSS color value. This ` +\n      `includes #RGB, #RRGGBB, rgb(...), rgba(...), and any color names ` +\n      `that are also part of the standard X11 rgb.txt file.\\n` +\n      `\\n` +\n      `You can use 'null' to specify that the default value should be not ` +\n      `be changed. This is useful for skipping a small number of indices ` +\n      `when the value is specified as an array.\\n` +\n      `\\n` +\n      `For example, these both set color index 1 to blue:\\n` +\n      `  {1: \"#0000ff\"}\\n` +\n      `  [null, \"#0000ff\"]`,\n  ),\n\n  'copy-on-select': hterm.PreferenceManager.definePref_(\n      'Automatically copy selected content',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      true, 'bool',\n      `Automatically copy mouse selection to the clipboard.`,\n  ),\n\n  'use-default-window-copy': hterm.PreferenceManager.definePref_(\n      'Let the browser handle text copying',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      false, 'bool',\n      `Whether to use the default browser/OS's copy behavior.\\n` +\n      `\\n` +\n      `Allow the browser/OS to handle the copy event directly which might ` +\n      `improve compatibility with some systems (where copying doesn't work ` +\n      `at all), but makes the text selection less robust.\\n` +\n      `\\n` +\n      `For example, long lines that were automatically line wrapped will ` +\n      `be copied with the newlines still in them.`,\n  ),\n\n  'clear-selection-after-copy': hterm.PreferenceManager.definePref_(\n      'Automatically clear text selection',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      true, 'bool',\n      `Whether to clear the selection after copying.`,\n  ),\n\n  'ctrl-plus-minus-zero-zoom': hterm.PreferenceManager.definePref_(\n      'Ctrl++/-/0 zoom behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      true, 'bool',\n      `If true, Ctrl+Plus/Minus/Zero controls zoom.\\n` +\n      `If false, Ctrl+Shift+Plus/Minus/Zero controls zoom, Ctrl+Minus sends ` +\n      `^_, Ctrl+Plus/Zero do nothing.`,\n  ),\n\n  'ctrl-c-copy': hterm.PreferenceManager.definePref_(\n      'Ctrl+C copy behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Ctrl+C copies if true, send ^C to host if false.\\n` +\n      `Ctrl+Shift+C sends ^C to host if true, copies if false.`,\n  ),\n\n  'ctrl-v-paste': hterm.PreferenceManager.definePref_(\n      'Ctrl+V paste behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Ctrl+V pastes if true, send ^V to host if false.\\n` +\n      `Ctrl+Shift+V sends ^V to host if true, pastes if false.`,\n  ),\n\n  'east-asian-ambiguous-as-two-column': hterm.PreferenceManager.definePref_(\n      'East Asian Ambiguous use two columns',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Whether East Asian Ambiguous characters have two column width.`,\n  ),\n\n  'enable-8-bit-control': hterm.PreferenceManager.definePref_(\n      'Support non-UTF-8 C1 control characters',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `True to enable 8-bit control characters, false to ignore them.\\n` +\n      `\\n` +\n      `We'll respect the two-byte versions of these control characters ` +\n      `regardless of this setting.`,\n  ),\n\n  'enable-bold': hterm.PreferenceManager.definePref_(\n      'Bold text behavior',\n      hterm.PreferenceManager.Categories.Appearance,\n      null, 'tristate',\n      `If true, use bold weight font for text with the bold/bright ` +\n      `attribute. False to use the normal weight font. Null to autodetect.`,\n  ),\n\n  'enable-bold-as-bright': hterm.PreferenceManager.definePref_(\n      'Use bright colors with bold text',\n      hterm.PreferenceManager.Categories.Appearance,\n      true, 'bool',\n      `If true, use bright colors (8-15 on a 16 color palette) for any text ` +\n      `with the bold attribute. False otherwise.`,\n  ),\n\n  'enable-blink': hterm.PreferenceManager.definePref_(\n      'Enable blinking text',\n      hterm.PreferenceManager.Categories.Appearance,\n      true, 'bool',\n      `If true, respect the blink attribute. False to ignore it.`,\n  ),\n\n  'enable-clipboard-notice': hterm.PreferenceManager.definePref_(\n      'Show notification when copying content',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      true, 'bool',\n      `Whether to show a message in the terminal when the host writes to the ` +\n      `clipboard.`,\n  ),\n\n  'enable-clipboard-write': hterm.PreferenceManager.definePref_(\n      'Allow remote clipboard writes',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      true, 'bool',\n      `Allow the remote host to write directly to the local system ` +\n      `clipboard.\\n` +\n      `Read access is never granted regardless of this setting.\\n` +\n      `\\n` +\n      `This is used to control access to features like OSC-52.`,\n  ),\n\n  'enable-dec12': hterm.PreferenceManager.definePref_(\n      'Allow changing of text cursor blinking',\n      hterm.PreferenceManager.Categories.Miscellaneous,\n      false, 'bool',\n      `Respect the host's attempt to change the text cursor blink status ` +\n      `using DEC Private Mode 12.`,\n  ),\n\n  'enable-csi-j-3': hterm.PreferenceManager.definePref_(\n      'Allow clearing of scrollback buffer (CSI-J-3)',\n      hterm.PreferenceManager.Categories.Miscellaneous,\n      true, 'bool',\n      `Whether the Erase Saved Lines function (mode 3) of the Erase Display ` +\n      `command (CSI-J) may clear the terminal scrollback buffer.\\n` +\n      `\\n` +\n      `Enabling this by default is safe.`,\n  ),\n\n  'environment': hterm.PreferenceManager.definePref_(\n      'Environment variables',\n      hterm.PreferenceManager.Categories.Miscellaneous,\n      {\n        // Signal ncurses based apps to use UTF-8 output instead of legacy\n        // drawing modes (which only work in ISO-2022 mode).  Since hterm is\n        // always UTF-8, this shouldn't cause problems.\n        'NCURSES_NO_UTF8_ACS': '1',\n        'TERM': 'xterm-256color',\n        // Set this env var that a bunch of mainstream terminal emulators set\n        // to indicate we support true colors.\n        // https://gist.github.com/XVilka/8346728\n        'COLORTERM': 'truecolor',\n      },\n      'value',\n      `The initial set of environment variables, as an object.`,\n  ),\n\n  'find-result-color': hterm.PreferenceManager.definePref_(\n    'Find results highlight color',\n    hterm.PreferenceManager.Categories.Appearance,\n    'rgba(102, 204, 255, 0.4)', 'color',\n    `The background color to highlight find results.`,\n  ),\n\n  'find-result-selected-color': hterm.PreferenceManager.definePref_(\n    'Find results selected highlight color',\n    hterm.PreferenceManager.Categories.Appearance,\n    'rgba(102, 204, 255, 0.8)', 'color',\n    `The background color to highlight the selected find result.`,\n  ),\n\n  'font-family': hterm.PreferenceManager.definePref_(\n      'Text font family',\n      hterm.PreferenceManager.Categories.Appearance,\n      '\"DejaVu Sans Mono\", \"Noto Sans Mono\", \"Everson Mono\", FreeMono, ' +\n      'Menlo, Terminal, monospace',\n      'string',\n      `Default font family for the terminal text.`,\n  ),\n\n  'font-size': hterm.PreferenceManager.definePref_(\n      'Text font size',\n      hterm.PreferenceManager.Categories.Appearance,\n      15, 'int',\n      `The default font size in pixels.`,\n  ),\n\n  'font-smoothing': hterm.PreferenceManager.definePref_(\n      'Text font smoothing',\n      hterm.PreferenceManager.Categories.Appearance,\n      'antialiased', 'string',\n      `CSS font-smoothing property.`,\n  ),\n\n  'line-height-padding-size': hterm.PreferenceManager.definePref_(\n      'Line height padding size',\n      hterm.PreferenceManager.Categories.Appearance,\n      0, 'int',\n      `The padding size in pixels between each row of the terminal screen.`,\n  ),\n\n  'foreground-color': hterm.PreferenceManager.definePref_(\n      'Text color',\n      hterm.PreferenceManager.Categories.Appearance,\n      'rgb(240, 240, 240)', 'color',\n      `The foreground color for text with no other color attributes.`,\n  ),\n\n  'enable-resize-status': hterm.PreferenceManager.definePref_(\n      'Show terminal dimensions when resized',\n      hterm.PreferenceManager.Categories.Appearance,\n      false, 'bool',\n      `Whether to show terminal dimensions when the terminal changes size.`,\n  ),\n\n  'hide-mouse-while-typing': hterm.PreferenceManager.definePref_(\n      'Hide mouse cursor while typing',\n      hterm.PreferenceManager.Categories.Keyboard,\n      null, 'tristate',\n      `Whether to automatically hide the mouse cursor when typing. ` +\n      `By default, autodetect whether the platform/OS handles this.\\n` +\n      `\\n` +\n      `Note: Your operating system might override this setting and thus you ` +\n      `might not be able to always disable it.`,\n  ),\n\n  'home-keys-scroll': hterm.PreferenceManager.definePref_(\n      'Home/End key scroll behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `If true, Home/End controls the terminal scrollbar and Shift+Home/` +\n      `Shift+End are sent to the remote host. If false, then Home/End are ` +\n      `sent to the remote host and Shift+Home/Shift+End scrolls.`,\n  ),\n\n  'keybindings': hterm.PreferenceManager.definePref_(\n      'Keyboard bindings/shortcuts',\n      hterm.PreferenceManager.Categories.Keyboard,\n      null, 'value',\n      `A map of key sequence to key actions. Key sequences include zero or ` +\n      `more modifier keys followed by a key code. Key codes can be decimal ` +\n      `or hexadecimal numbers, or a key identifier. Key actions can be ` +\n      `specified as a string to send to the host, or an action identifier. ` +\n      `For a full explanation of the format, see https://goo.gl/LWRndr.\\n` +\n      `\\n` +\n      `Sample keybindings:\\n` +\n      `{\\n` +\n      `  \"Ctrl+Alt+K\": \"clearTerminal\",\\n` +\n      `  \"Ctrl+Shift+L\": \"PASS\",\\n` +\n      `  \"Ctrl+H\": \"'Hello World'\"\\n` +\n      `}`,\n  ),\n\n  'keybindings-os-defaults': hterm.PreferenceManager.definePref_(\n      'Use default OS Keyboard bindings/shortcuts',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Whether common OS keyboard bindings should be respected instead of ` +\n      `always capturing for hterm's own use.`,\n  ),\n\n  'media-keys-are-fkeys': hterm.PreferenceManager.definePref_(\n      'Media keys are Fkeys',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `If true, convert media keys to their Fkey equivalent. If false, let ` +\n      `the browser handle the keys.`,\n  ),\n\n  'meta-sends-escape': hterm.PreferenceManager.definePref_(\n      'Meta key modifier handling',\n      hterm.PreferenceManager.Categories.Keyboard,\n      true, 'bool',\n      `Send an ESC prefix when pressing a key while holding the Meta key.\\n` +\n      `\\n` +\n      `For example, when enabled, pressing Meta+K will send ^[k as if you ` +\n      `typed Escape then k. When disabled, only k will be sent.`,\n  ),\n\n  'mouse-right-click-paste': hterm.PreferenceManager.definePref_(\n      'Mouse right clicks paste content',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      true, 'bool',\n      `Paste on right mouse button clicks.\\n` +\n      `\\n` +\n      `This option is independent of the \"mouse-paste-button\" setting.\\n` +\n      `\\n` +\n      `Note: The primary & secondary buttons are handled for you with left ` +\n      `& right handed mice.`,\n  ),\n\n  'mouse-paste-button': hterm.PreferenceManager.definePref_(\n      'Mouse button paste',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      null, [null, 'no-button', 0, 1, 2, 3, 4, 5, 6],\n      `The mouse button to use for pasting.\\n` +\n      `\\n` +\n      `For autodetect, we'll use the middle mouse button for non-X11 ` +\n      `platforms (including Chrome OS). On X11, we'll use the right mouse ` +\n      `button (since the window manager should handle pasting via the middle ` +\n      `mouse button).\\n` +\n      `\\n` +\n      `0 == left (primary) button.\\n` +\n      `1 == middle (auxiliary) button.\\n` +\n      `2 == right (secondary) button.\\n` +\n      `\\n` +\n      `This option is independent of the setting for right-click paste.\\n` +\n      `\\n` +\n      `If set to 'no-button' then no paste button is used.` +\n      `\\n` +\n      `Note: The primary & secondary buttons are handled for you with left ` +\n      `& right handed mice.`,\n  ),\n\n  'screen-padding-size': hterm.PreferenceManager.definePref_(\n      'Screen padding size',\n      hterm.PreferenceManager.Categories.Appearance,\n      8, 'int',\n      `The padding size in pixels around the border of the terminal screen.\\n` +\n      `\\n` +\n      `This controls the size of the border around the terminal screen so ` +\n      `the user can add some visible padding to the edges of the screen.`,\n  ),\n\n  'screen-border-size': hterm.PreferenceManager.definePref_(\n      'Screen border size',\n      hterm.PreferenceManager.Categories.Appearance,\n      0, 'int',\n      `The border size in pixels around the terminal screen.\\n` +\n      `\\n` +\n      `This controls the size of the border around the terminal screen to ` +\n      `create a visible line at the edges of the screen.`,\n  ),\n\n  'screen-border-color': hterm.PreferenceManager.definePref_(\n      'Screen border color',\n      hterm.PreferenceManager.Categories.Appearance,\n      'rgb(128, 128, 128)', 'color',\n      `The color for the border around the terminal screen.\\n` +\n      `\\n` +\n      `This controls the color of the border around the terminal screen to ` +\n      `create a visible line at the edges of the screen.`,\n  ),\n\n  'word-break-match-left': hterm.PreferenceManager.definePref_(\n      'Automatic selection halting (to the left)',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      // TODO(vapier): Switch \\u back to ‘“‹« once builders are fixed.\n      '[^\\\\s[\\\\](){}<>\"\\'^!@#$%&*,;:`\\u{2018}\\u{201c}\\u{2039}\\u{ab}]', 'string',\n      `Regular expression to halt matching to the left (start) of a ` +\n      `selection.\\n` +\n      `\\n` +\n      `Normally this is a character class to reject specific characters.\\n` +\n      `We allow \"~\" and \".\" by default as paths frequently start with those.`,\n  ),\n\n  'word-break-match-right': hterm.PreferenceManager.definePref_(\n      'Automatic selection halting (to the right)',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      // TODO(vapier): Switch \\u back to ’”›» once builders are fixed.\n      '[^\\\\s[\\\\](){}<>\"\\'^!@#$%&*,;:~.`\\u{2019}\\u{201d}\\u{203a}\\u{bb}]',\n      'string',\n      `Regular expression to halt matching to the right (end) of a ` +\n      `selection.\\n` +\n      `\\n` +\n      `Normally this is a character class to reject specific characters.`,\n  ),\n\n  'word-break-match-middle': hterm.PreferenceManager.definePref_(\n      'Word break characters',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      '[^\\\\s[\\\\](){}<>\"\\'^]*', 'string',\n      `Regular expression to match all the characters in the middle.\\n` +\n      `\\n` +\n      `Normally this is a character class to reject specific characters.\\n` +\n      `\\n` +\n      `Used to expand the selection surrounding the starting point.`,\n  ),\n\n  'page-keys-scroll': hterm.PreferenceManager.definePref_(\n      'Page Up/Down key scroll behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `If true, Page Up/Page Down controls the terminal scrollbar and ` +\n      `Shift+Page Up/Shift+Page Down are sent to the remote host. If false, ` +\n      `then Page Up/Page Down are sent to the remote host and Shift+Page Up/` +\n      `Shift+Page Down scrolls.`,\n  ),\n\n  'pass-alt-number': hterm.PreferenceManager.definePref_(\n      'Alt+1..9 switch tab/app behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      null, 'tristate',\n      `Whether Alt+1..9 is passed to the browser.\\n` +\n      `\\n` +\n      `This is handy when running hterm in a browser tab, so that you don't ` +\n      `lose Chrome's \"switch to tab/app\" keyboard shortcuts. When not ` +\n      `running in a tab it's better to send these keys to the host so they ` +\n      `can be used in vim or emacs.\\n` +\n      `\\n` +\n      `If true, Alt+1..9 will be handled by the browser. If false, Alt+1..9 ` +\n      `will be sent to the host. If null, autodetect based on browser ` +\n      `platform and window type.`,\n  ),\n\n  'pass-ctrl-number': hterm.PreferenceManager.definePref_(\n      'Ctrl+1..9 switch tab behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      null, 'tristate',\n      `Whether Ctrl+1..9 is passed to the browser.\\n` +\n      `\\n` +\n      `This is handy when running hterm in a browser tab, so that you don't ` +\n      `lose Chrome's \"switch to tab\" keyboard shortcuts. When not running ` +\n      `in a tab it's better to send these keys to the host so they can be ` +\n      `used in vim or emacs.\\n` +\n      `\\n` +\n      `If true, Ctrl+1..9 will be handled by the browser. If false, ` +\n      `Ctrl+1..9 will be sent to the host. If null, autodetect based on ` +\n      `browser platform and window type.`,\n  ),\n\n  'pass-ctrl-n': hterm.PreferenceManager.definePref_(\n      'Ctrl+N new window behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Whether Ctrl+N is passed to the browser.\\n` +\n      `\\n` +\n      `If true, Ctrl+N will be handled by the browser as the \"new window\" ` +\n      `keyboard shortcut. If false, Ctrl+N will be sent to the host.`,\n  ),\n\n  'pass-ctrl-t': hterm.PreferenceManager.definePref_(\n      'Ctrl+T new tab behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Whether Ctrl+T is passed to the browser.\\n` +\n      `\\n` +\n      `If true, Ctrl+T will be handled by the browser as the \"new tab\" ` +\n      `keyboard shortcut. If false, Ctrl+T will be sent to the host.`,\n  ),\n\n  'pass-ctrl-tab': hterm.PreferenceManager.definePref_(\n      'Ctrl+Tab switch tab behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Whether Ctrl+Tab and Ctrl+Shift+Tab are passed to the browser.\\n` +\n      `\\n` +\n      `If true, Ctrl+Tab and Ctrl+Shift+Tab will be handled by the browser ` +\n      `as the \"next/previous tab\" keyboard shortcut. If false, the Tab ` +\n      `key is sent to the host without Ctrl or Shift.`,\n  ),\n\n  'pass-ctrl-w': hterm.PreferenceManager.definePref_(\n      'Ctrl+W close tab behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Whether Ctrl+W is passed to the browser.\\n` +\n      `\\n` +\n      `If true, Ctrl+W will be handled by the browser as the \"close tab\" ` +\n      `keyboard shortcut. If false, Ctrl+W will be sent to the host.`,\n  ),\n\n  'pass-meta-number': hterm.PreferenceManager.definePref_(\n      'Meta+1..9 switch tab behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      null, 'tristate',\n      `Whether Meta+1..9 is passed to the browser.\\n` +\n      `\\n` +\n      `This is handy when running hterm in a browser tab, so that you don't ` +\n      `lose Chrome's \"switch to tab\" keyboard shortcuts. When not running ` +\n      `in a tab it's better to send these keys to the host so they can be ` +\n      `used in vim or emacs.\\n` +\n      `\\n` +\n      `If true, Meta+1..9 will be handled by the browser. If false, ` +\n      `Meta+1..9 will be sent to the host. If null, autodetect based on ` +\n      `browser platform and window type.`,\n  ),\n\n  'pass-meta-v': hterm.PreferenceManager.definePref_(\n      'Meta+V paste behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      true, 'bool',\n      `Whether Meta+V gets passed to the browser.\\n` +\n      `\\n` +\n      `On some systems, this is used to paste content.`,\n  ),\n\n  'paste-on-drop': hterm.PreferenceManager.definePref_(\n      'Allow drag & drop to paste',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      true, 'bool',\n      `If true, Drag and dropped text will paste into terminal.\\n` +\n      `If false, dropped text will be ignored.`,\n  ),\n\n  'scroll-on-keystroke': hterm.PreferenceManager.definePref_(\n      'Scroll to bottom after keystroke',\n      hterm.PreferenceManager.Categories.Scrolling,\n      true, 'bool',\n      `Whether to scroll to the bottom on any keystroke.`,\n  ),\n\n  'scroll-on-output': hterm.PreferenceManager.definePref_(\n      'Scroll to bottom after new output',\n      hterm.PreferenceManager.Categories.Scrolling,\n      false, 'bool',\n      `Whether to scroll to the bottom on terminal output.`,\n  ),\n\n  'scrollbar-visible': hterm.PreferenceManager.definePref_(\n      'Scrollbar visibility',\n      hterm.PreferenceManager.Categories.Scrolling,\n      true, 'bool',\n      `The vertical scrollbar mode.`,\n  ),\n\n  'scroll-wheel-may-send-arrow-keys': hterm.PreferenceManager.definePref_(\n      'Emulate arrow keys with scroll wheel',\n      hterm.PreferenceManager.Categories.Scrolling,\n      false, 'bool',\n      `When using the alternative screen buffer, and DECCKM (Application ` +\n      `Cursor Keys) is active, mouse scroll wheel events will emulate arrow ` +\n      `keys.\\n` +\n      `\\n` +\n      `It can be temporarily disabled by holding the Shift key.\\n` +\n      `\\n` +\n      `This frequently comes up when using pagers (less) or reading man ` +\n      `pages or text editors (vi/nano) or using screen/tmux.`,\n  ),\n\n  'scroll-wheel-move-multiplier': hterm.PreferenceManager.definePref_(\n      'Mouse scroll wheel multiplier',\n      hterm.PreferenceManager.Categories.Scrolling,\n      1, 'int',\n      `The multiplier for mouse scroll wheel events when measured in ` +\n      `pixels.\\n` +\n      `\\n` +\n      `Alters how fast the page scrolls.`,\n  ),\n\n  'terminal-encoding': hterm.PreferenceManager.definePref_(\n      'Terminal encoding',\n      hterm.PreferenceManager.Categories.Encoding,\n      'utf-8', ['iso-2022', 'utf-8', 'utf-8-locked'],\n      `The default terminal encoding (DOCS).\\n` +\n      `\\n` +\n      `ISO-2022 enables character map translations (like graphics maps).\\n` +\n      `UTF-8 disables support for those.\\n` +\n      `\\n` +\n      `The locked variant means the encoding cannot be changed at runtime ` +\n      `via terminal escape sequences.\\n` +\n      `\\n` +\n      `You should stick with UTF-8 unless you notice broken rendering with ` +\n      `legacy applications.`,\n  ),\n\n  'shift-insert-paste': hterm.PreferenceManager.definePref_(\n      'Shift+Insert paste',\n      hterm.PreferenceManager.Categories.Keyboard,\n      true, 'bool',\n      `Whether Shift+Insert is used for pasting or is sent to the remote host.`,\n  ),\n\n  'user-css': hterm.PreferenceManager.definePref_(\n      'Custom CSS (URI)',\n      hterm.PreferenceManager.Categories.Appearance,\n      '', 'url',\n      `URL of user stylesheet to include in the terminal document.`,\n  ),\n\n  'user-css-text': hterm.PreferenceManager.definePref_(\n      'Custom CSS (inline text)',\n      hterm.PreferenceManager.Categories.Appearance,\n      '', 'multiline-string',\n      `Custom CSS text for styling the terminal.`,\n  ),\n\n  'allow-images-inline': hterm.PreferenceManager.definePref_(\n      'Allow inline image display',\n      hterm.PreferenceManager.Categories.Extensions,\n      null, 'tristate',\n      `Whether to allow the remote host to display images in the terminal.\\n` +\n      `\\n` +\n      `By default, we prompt until a choice is made.`,\n  ),\n};\n\nhterm.PreferenceManager.prototype =\n    Object.create(lib.PreferenceManager.prototype);\n/** @override */\nhterm.PreferenceManager.constructor = hterm.PreferenceManager;\n// SOURCE FILE: hterm/js/hterm_pubsub.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Utility class used to add publish/subscribe/unsubscribe functionality to\n * an existing object.\n *\n * @constructor\n */\nhterm.PubSub = function() {\n  this.observers_ = {};\n};\n\n/**\n * Add publish, subscribe, and unsubscribe methods to an existing object.\n *\n * No other properties of the object are touched, so there is no need to\n * worry about clashing private properties.\n *\n * @param {!Object} obj The object to add this behavior to.\n */\nhterm.PubSub.addBehavior = function(obj) {\n  const pubsub = new hterm.PubSub();\n  for (const m in hterm.PubSub.prototype) {\n    obj[m] = hterm.PubSub.prototype[m].bind(pubsub);\n  }\n};\n\n/**\n * Subscribe to be notified of messages about a subject.\n *\n * @param {string} subject The subject to subscribe to.\n * @param {function(...)} callback The function to invoke for notifications.\n */\nhterm.PubSub.prototype.subscribe = function(subject, callback) {\n  if (!(subject in this.observers_)) {\n    this.observers_[subject] = [];\n  }\n\n  this.observers_[subject].push(callback);\n};\n\n/**\n * Unsubscribe from a subject.\n *\n * @param {string} subject The subject to unsubscribe from.\n * @param {function(...)} callback A callback previously registered via\n *     subscribe().\n */\nhterm.PubSub.prototype.unsubscribe = function(subject, callback) {\n  const list = this.observers_[subject];\n  if (!list) {\n    throw new Error(`Invalid subject: ${subject}`);\n  }\n\n  const i = list.indexOf(callback);\n  if (i < 0) {\n    throw new Error(`Not subscribed: ${subject}`);\n  }\n\n  list.splice(i, 1);\n};\n\n/**\n * Publish a message about a subject.\n *\n * Subscribers (and the optional final callback) are invoked asynchronously.\n * This method will return before anyone is actually notified.\n *\n * @param {string} subject The subject to publish about.\n * @param {?Object=} e An arbitrary object associated with this notification.\n * @param {function(!Object)=} lastCallback An optional function to call\n *     after all subscribers have been notified.\n */\nhterm.PubSub.prototype.publish = function(\n    subject, e, lastCallback = undefined) {\n  function notifyList(i) {\n    // Set this timeout before invoking the callback, so we don't have to\n    // concern ourselves with exceptions.\n    if (i < list.length - 1) {\n      setTimeout(notifyList, 0, i + 1);\n    }\n\n    list[i](e);\n  }\n\n  let list = this.observers_[subject];\n  if (list) {\n    // Copy the list, in case it changes while we're notifying.\n    list = [].concat(list);\n  }\n\n  if (lastCallback) {\n    if (list) {\n      list.push(lastCallback);\n    } else {\n      list = [lastCallback];\n    }\n  }\n\n  if (list) {\n    setTimeout(notifyList, 0, 0);\n  }\n};\n// SOURCE FILE: hterm/js/hterm_screen.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview This class represents a single terminal screen full of text.\n *\n * It maintains the current cursor position and has basic methods for text\n * insert and overwrite, and adding or removing rows from the screen.\n *\n * This class has no knowledge of the scrollback buffer.\n *\n * The number of rows on the screen is determined only by the number of rows\n * that the caller inserts into the screen.  If a caller wants to ensure a\n * constant number of rows on the screen, it's their responsibility to remove a\n * row for each row inserted.\n *\n * The screen width, in contrast, is enforced locally.\n *\n *\n * In practice...\n * - The hterm.Terminal class holds two hterm.Screen instances.  One for the\n * primary screen and one for the alternate screen.\n *\n * - The html.Screen class only cares that rows are HTML Elements.  In the\n * larger context of hterm, however, the rows happen to be displayed by an\n * hterm.ScrollPort and have to follow a few rules as a result.  Each\n * row must be rooted by the custom HTML tag 'x-row', and each must have a\n * rowIndex property that corresponds to the index of the row in the context\n * of the scrollback buffer.  These invariants are enforced by hterm.Terminal\n * because that is the class using the hterm.Screen in the context of an\n * hterm.ScrollPort.\n */\n\n/**\n * Create a new screen instance.\n *\n * The screen initially has no rows and a maximum column count of 0.\n *\n * @param {number=} columnCount The maximum number of columns for this\n *    screen.  See insertString() and overwriteString() for information about\n *    what happens when too many characters are added too a row.  Defaults to\n *    0 if not provided.\n * @constructor\n */\nhterm.Screen = function(columnCount = 0) {\n  /**\n   * Public, read-only access to the rows in this screen.\n   *\n   * @type {!Array<!Element>}\n   */\n  this.rowsArray = [];\n\n  // The max column width for this screen.\n  this.columnCount_ = columnCount;\n\n  // The current color, bold, underline and blink attributes.\n  this.textAttributes = new hterm.TextAttributes(window.document);\n\n  // Current zero-based cursor coordinates.\n  this.cursorPosition = new hterm.RowCol(0, 0);\n\n  // Saved state used by DECSC and related settings.  This is only for saving\n  // and restoring specific state, not for the current/active state.\n  this.cursorState_ = new hterm.Screen.CursorState(this);\n\n  // The node containing the row that the cursor is positioned on.\n  this.cursorRowNode_ = null;\n\n  // The node containing the span of text that the cursor is positioned on.\n  this.cursorNode_ = null;\n\n  // The offset in column width into cursorNode_ where the cursor is positioned.\n  this.cursorOffset_ = 0;\n\n  // Regexes for expanding word selections.\n  /** @type {?string} */\n  this.wordBreakMatchLeft = null;\n  /** @type {?string} */\n  this.wordBreakMatchRight = null;\n  /** @type {?string} */\n  this.wordBreakMatchMiddle = null;\n};\n\n/**\n * Return the screen size as an hterm.Size object.\n *\n * @return {!hterm.Size} hterm.Size object representing the current number\n *     of rows and columns in this screen.\n */\nhterm.Screen.prototype.getSize = function() {\n  return new hterm.Size(this.columnCount_, this.rowsArray.length);\n};\n\n/**\n * Return the current number of rows in this screen.\n *\n * @return {number} The number of rows in this screen.\n */\nhterm.Screen.prototype.getHeight = function() {\n  return this.rowsArray.length;\n};\n\n/**\n * Return the current number of columns in this screen.\n *\n * @return {number} The number of columns in this screen.\n */\nhterm.Screen.prototype.getWidth = function() {\n  return this.columnCount_;\n};\n\n/**\n * Set the maximum number of columns per row.\n *\n * @param {number} count The maximum number of columns per row.\n */\nhterm.Screen.prototype.setColumnCount = function(count) {\n  this.columnCount_ = count;\n\n  if (this.cursorPosition.column >= count) {\n    this.setCursorPosition(this.cursorPosition.row, count - 1);\n  }\n};\n\n/**\n * Remove the first row from the screen and return it.\n *\n * @return {!Element} The first row in this screen.\n */\nhterm.Screen.prototype.shiftRow = function() {\n  return this.shiftRows(1)[0];\n};\n\n/**\n * Remove rows from the top of the screen and return them as an array.\n *\n * @param {number} count The number of rows to remove.\n * @return {!Array<!Element>} The selected rows.\n */\nhterm.Screen.prototype.shiftRows = function(count) {\n  return this.rowsArray.splice(0, count);\n};\n\n/**\n * Insert a row at the top of the screen.\n *\n * @param {!Element} row The row to insert.\n */\nhterm.Screen.prototype.unshiftRow = function(row) {\n  this.rowsArray.splice(0, 0, row);\n};\n\n/**\n * Insert rows at the top of the screen.\n *\n * @param {!Array<!Element>} rows The rows to insert.\n */\nhterm.Screen.prototype.unshiftRows = function(rows) {\n  this.rowsArray.unshift.apply(this.rowsArray, rows);\n};\n\n/**\n * Remove the last row from the screen and return it.\n *\n * @return {!Element} The last row in this screen.\n */\nhterm.Screen.prototype.popRow = function() {\n  return this.popRows(1)[0];\n};\n\n/**\n * Remove rows from the bottom of the screen and return them as an array.\n *\n * @param {number} count The number of rows to remove.\n * @return {!Array<!Element>} The selected rows.\n */\nhterm.Screen.prototype.popRows = function(count) {\n  return this.rowsArray.splice(this.rowsArray.length - count, count);\n};\n\n/**\n * Insert a row at the bottom of the screen.\n *\n * @param {!Element} row The row to insert.\n */\nhterm.Screen.prototype.pushRow = function(row) {\n  this.rowsArray.push(row);\n};\n\n/**\n * Insert rows at the bottom of the screen.\n *\n * @param {!Array<!Element>} rows The rows to insert.\n */\nhterm.Screen.prototype.pushRows = function(rows) {\n  rows.push.apply(this.rowsArray, rows);\n};\n\n/**\n * Insert a row at the specified row of the screen.\n *\n * @param {number} index The index to insert the row.\n * @param {!Element} row The row to insert.\n */\nhterm.Screen.prototype.insertRow = function(index, row) {\n  this.rowsArray.splice(index, 0, row);\n};\n\n/**\n * Insert rows at the specified row of the screen.\n *\n * @param {number} index The index to insert the rows.\n * @param {!Array<!Element>} rows The rows to insert.\n */\nhterm.Screen.prototype.insertRows = function(index, rows) {\n  for (let i = 0; i < rows.length; i++) {\n    this.rowsArray.splice(index + i, 0, rows[i]);\n  }\n};\n\n/**\n * Remove a row from the screen and return it.\n *\n * @param {number} index The index of the row to remove.\n * @return {!Element} The selected row.\n */\nhterm.Screen.prototype.removeRow = function(index) {\n  return this.rowsArray.splice(index, 1)[0];\n};\n\n/**\n * Remove rows from the bottom of the screen and return them as an array.\n *\n * @param {number} index The index to start removing rows.\n * @param {number} count The number of rows to remove.\n * @return {!Array<!Element>} The selected rows.\n */\nhterm.Screen.prototype.removeRows = function(index, count) {\n  return this.rowsArray.splice(index, count);\n};\n\n/**\n * Invalidate the current cursor position.\n *\n * This sets this.cursorPosition to (0, 0) and clears out some internal\n * data.\n *\n * Attempting to insert or overwrite text while the cursor position is invalid\n * will raise an obscure exception.\n */\nhterm.Screen.prototype.invalidateCursorPosition = function() {\n  this.cursorPosition.move(0, 0);\n  this.cursorRowNode_ = null;\n  this.cursorNode_ = null;\n  this.cursorOffset_ = 0;\n};\n\n/**\n * Clear the contents of the cursor row.\n */\nhterm.Screen.prototype.clearCursorRow = function() {\n  this.cursorRowNode_.innerHTML = '';\n  this.cursorRowNode_.removeAttribute('line-overflow');\n  this.cursorOffset_ = 0;\n  this.cursorPosition.column = 0;\n  this.cursorPosition.overflow = false;\n\n  let text;\n  if (this.textAttributes.isDefault()) {\n    text = '';\n  } else {\n    text = ' '.repeat(this.columnCount_);\n  }\n\n  // We shouldn't honor inverse colors when clearing an area, to match\n  // xterm's back color erase behavior.\n  const inverse = this.textAttributes.inverse;\n  this.textAttributes.inverse = false;\n  this.textAttributes.syncColors();\n\n  const node = this.textAttributes.createContainer(text);\n  this.cursorRowNode_.appendChild(node);\n  this.cursorNode_ = node;\n\n  this.textAttributes.inverse = inverse;\n  this.textAttributes.syncColors();\n};\n\n/**\n * Mark the current row as having overflowed to the next line.\n *\n * The line overflow state is used when converting a range of rows into text.\n * It makes it possible to recombine two or more overflow terminal rows into\n * a single line.\n *\n * This is distinct from the cursor being in the overflow state.  Cursor\n * overflow indicates that printing at the cursor position will commit a\n * line overflow, unless it is preceded by a repositioning of the cursor\n * to a non-overflow state.\n */\nhterm.Screen.prototype.commitLineOverflow = function() {\n  this.cursorRowNode_.setAttribute('line-overflow', true);\n};\n\n/**\n * Relocate the cursor to a give row and column.\n *\n * @param {number} row The zero based row.\n * @param {number} column The zero based column.\n */\nhterm.Screen.prototype.setCursorPosition = function(row, column) {\n  if (!this.rowsArray.length) {\n    console.warn('Attempt to set cursor position on empty screen.');\n    return;\n  }\n\n  if (row >= this.rowsArray.length) {\n    console.error('Row out of bounds: ' + row);\n    row = this.rowsArray.length - 1;\n  } else if (row < 0) {\n    console.error('Row out of bounds: ' + row);\n    row = 0;\n  }\n\n  if (column >= this.columnCount_) {\n    console.error('Column out of bounds: ' + column);\n    column = this.columnCount_ - 1;\n  } else if (column < 0) {\n    console.error('Column out of bounds: ' + column);\n    column = 0;\n  }\n\n  this.cursorPosition.overflow = false;\n\n  const rowNode = this.rowsArray[row];\n  let node = rowNode.firstChild;\n\n  if (!node) {\n    node = rowNode.ownerDocument.createTextNode('');\n    rowNode.appendChild(node);\n  }\n\n  let currentColumn = 0;\n\n  if (rowNode == this.cursorRowNode_) {\n    if (column >= this.cursorPosition.column - this.cursorOffset_) {\n      node = this.cursorNode_;\n      currentColumn = this.cursorPosition.column - this.cursorOffset_;\n    }\n  } else {\n    this.cursorRowNode_ = rowNode;\n  }\n\n  this.cursorPosition.move(row, column);\n\n  while (node) {\n    const offset = column - currentColumn;\n    const width = hterm.TextAttributes.nodeWidth(node);\n    if (!node.nextSibling || width > offset) {\n      this.cursorNode_ = node;\n      this.cursorOffset_ = offset;\n      return;\n    }\n\n    currentColumn += width;\n    node = node.nextSibling;\n  }\n};\n\n/**\n * Set the provided selection object to be a caret selection at the current\n * cursor position.\n *\n * @param {!Selection} selection\n */\nhterm.Screen.prototype.syncSelectionCaret = function(selection) {\n  try {\n    selection.collapse(this.cursorNode_, this.cursorOffset_);\n  } catch (firefoxIgnoredException) {\n    // FF can throw an exception if the range is off, rather than just not\n    // performing the collapse.\n  }\n};\n\n/**\n * Split a single node into two nodes at the given offset.\n *\n * For example:\n * Given the DOM fragment '<div><span>Hello World</span></div>', call splitNode_\n * passing the span and an offset of 6.  This would modify the fragment to\n * become: '<div><span>Hello </span><span>World</span></div>'.  If the span\n * had any attributes they would have been copied to the new span as well.\n *\n * The to-be-split node must have a container, so that the new node can be\n * placed next to it.\n *\n * @param {!Node} node The node to split.\n * @param {number} offset The offset into the node where the split should\n *     occur.\n */\nhterm.Screen.prototype.splitNode_ = function(node, offset) {\n  const afterNode = node.cloneNode(false);\n\n  const textContent = node.textContent;\n  node.textContent = hterm.TextAttributes.nodeSubstr(node, 0, offset);\n  afterNode.textContent = lib.wc.substr(textContent, offset);\n\n  if (afterNode.textContent) {\n    node.parentNode.insertBefore(afterNode, node.nextSibling);\n  }\n  if (!node.textContent) {\n    node.remove();\n  }\n};\n\n/**\n * Ensure that text is clipped and the cursor is clamped to the column count.\n */\nhterm.Screen.prototype.maybeClipCurrentRow = function() {\n  let width = hterm.TextAttributes.nodeWidth(lib.notNull(this.cursorRowNode_));\n\n  if (width <= this.columnCount_) {\n    // Current row does not need clipping, but may need clamping.\n    if (this.cursorPosition.column >= this.columnCount_) {\n      this.setCursorPosition(this.cursorPosition.row, this.columnCount_ - 1);\n      this.cursorPosition.overflow = true;\n    }\n\n    return;\n  }\n\n  // Save off the current column so we can maybe restore it later.\n  const currentColumn = this.cursorPosition.column;\n\n  // Move the cursor to the final column.\n  this.setCursorPosition(this.cursorPosition.row, this.columnCount_ - 1);\n\n  // Remove any text that partially overflows.\n  width = hterm.TextAttributes.nodeWidth(lib.notNull(this.cursorNode_));\n\n  if (this.cursorOffset_ < width - 1) {\n    this.cursorNode_.textContent = hterm.TextAttributes.nodeSubstr(\n        this.cursorNode_, 0, this.cursorOffset_ + 1);\n  }\n\n  // Remove all nodes after the cursor.\n  const rowNode = this.cursorRowNode_;\n  let node = this.cursorNode_.nextSibling;\n\n  while (node) {\n    rowNode.removeChild(node);\n    node = this.cursorNode_.nextSibling;\n  }\n\n  if (currentColumn < this.columnCount_) {\n    // If the cursor was within the screen before we started then restore its\n    // position.\n    this.setCursorPosition(this.cursorPosition.row, currentColumn);\n  } else {\n    // Otherwise leave it at the the last column in the overflow state.\n    this.cursorPosition.overflow = true;\n  }\n};\n\n/**\n * Insert a string at the current character position using the current\n * text attributes.\n *\n * You must call maybeClipCurrentRow() after in order to clip overflowed\n * text and clamp the cursor.\n *\n * It is also up to the caller to properly maintain the line overflow state\n * using hterm.Screen..commitLineOverflow().\n *\n * @param {string} str The string to insert.\n * @param {number=} wcwidth The cached lib.wc.strWidth value for |str|.  Will be\n *     calculated on demand if need be.  Passing in a cached value helps speed\n *     up processing as this is a hot codepath.\n */\nhterm.Screen.prototype.insertString = function(str, wcwidth = undefined) {\n  let cursorNode = this.cursorNode_;\n  let cursorNodeText = cursorNode.textContent;\n\n  this.cursorRowNode_.removeAttribute('line-overflow');\n\n  // We may alter the width of the string by prepending some missing\n  // whitespaces, so we need to record the string width ahead of time.\n  if (wcwidth === undefined) {\n    wcwidth = lib.wc.strWidth(str);\n  }\n\n  // No matter what, before this function exits the cursor column will have\n  // moved this much.\n  this.cursorPosition.column += wcwidth;\n\n  // Local cache of the cursor offset.\n  let offset = this.cursorOffset_;\n\n  // Reverse offset is the offset measured from the end of the string.\n  // Zero implies that the cursor is at the end of the cursor node.\n  let reverseOffset = hterm.TextAttributes.nodeWidth(cursorNode) - offset;\n\n  if (reverseOffset < 0) {\n    // A negative reverse offset means the cursor is positioned past the end\n    // of the characters on this line.  We'll need to insert the missing\n    // whitespace.\n    const ws = ' '.repeat(-reverseOffset);\n\n    // This whitespace should be completely unstyled.  Underline, background\n    // color, and strikethrough would be visible on whitespace, so we can't use\n    // one of those spans to hold the text.\n    if (!(this.textAttributes.underline ||\n          this.textAttributes.strikethrough ||\n          this.textAttributes.background ||\n          this.textAttributes.wcNode ||\n          !this.textAttributes.asciiNode ||\n          this.textAttributes.tileData != null)) {\n      // Best case scenario, we can just pretend the spaces were part of the\n      // original string.\n      str = ws + str;\n    } else if (cursorNode.nodeType == Node.TEXT_NODE ||\n               !(cursorNode.wcNode ||\n                 !cursorNode.asciiNode ||\n                 cursorNode.tileNode ||\n                 cursorNode.style.textDecoration ||\n                 cursorNode.style.textDecorationStyle ||\n                 cursorNode.style.textDecorationLine ||\n                 cursorNode.style.backgroundColor)) {\n      // Second best case, the current node is able to hold the whitespace.\n      cursorNode.textContent = (cursorNodeText += ws);\n    } else {\n      // Worst case, we have to create a new node to hold the whitespace.\n      const wsNode = cursorNode.ownerDocument.createTextNode(ws);\n      this.cursorRowNode_.insertBefore(wsNode, cursorNode.nextSibling);\n      this.cursorNode_ = cursorNode = wsNode;\n      this.cursorOffset_ = offset = -reverseOffset;\n      cursorNodeText = ws;\n    }\n\n    // We now know for sure that we're at the last character of the cursor node.\n    reverseOffset = 0;\n  }\n\n  if (this.textAttributes.matchesContainer(cursorNode)) {\n    // The new text can be placed directly in the cursor node.\n    if (reverseOffset == 0) {\n      cursorNode.textContent = cursorNodeText + str;\n    } else if (offset == 0) {\n      cursorNode.textContent = str + cursorNodeText;\n    } else {\n      cursorNode.textContent =\n          hterm.TextAttributes.nodeSubstr(cursorNode, 0, offset) +\n          str + hterm.TextAttributes.nodeSubstr(cursorNode, offset);\n    }\n\n    this.cursorOffset_ += wcwidth;\n    return;\n  }\n\n  // The cursor node is the wrong style for the new text.  If we're at the\n  // beginning or end of the cursor node, then the adjacent node is also a\n  // potential candidate.\n\n  if (offset == 0) {\n    // At the beginning of the cursor node, the check the previous sibling.\n    const previousSibling = cursorNode.previousSibling;\n    if (previousSibling &&\n        this.textAttributes.matchesContainer(previousSibling)) {\n      previousSibling.textContent += str;\n      this.cursorNode_ = previousSibling;\n      this.cursorOffset_ = lib.wc.strWidth(previousSibling.textContent);\n      return;\n    }\n\n    const newNode = this.textAttributes.createContainer(str);\n    this.cursorRowNode_.insertBefore(newNode, cursorNode);\n    this.cursorNode_ = newNode;\n    this.cursorOffset_ = wcwidth;\n    return;\n  }\n\n  if (reverseOffset == 0) {\n    // At the end of the cursor node, the check the next sibling.\n    const nextSibling = cursorNode.nextSibling;\n    if (nextSibling &&\n        this.textAttributes.matchesContainer(nextSibling)) {\n      nextSibling.textContent = str + nextSibling.textContent;\n      this.cursorNode_ = nextSibling;\n      this.cursorOffset_ = lib.wc.strWidth(str);\n      return;\n    }\n\n    const newNode = this.textAttributes.createContainer(str);\n    this.cursorRowNode_.insertBefore(newNode, nextSibling);\n    this.cursorNode_ = newNode;\n    // We specifically need to include any missing whitespace here, since it's\n    // going in a new node.\n    this.cursorOffset_ = hterm.TextAttributes.nodeWidth(newNode);\n    return;\n  }\n\n  // Worst case, we're somewhere in the middle of the cursor node.  We'll\n  // have to split it into two nodes and insert our new container in between.\n  this.splitNode_(cursorNode, offset);\n  const newNode = this.textAttributes.createContainer(str);\n  this.cursorRowNode_.insertBefore(newNode, cursorNode.nextSibling);\n  this.cursorNode_ = newNode;\n  this.cursorOffset_ = wcwidth;\n};\n\n/**\n * Overwrite the text at the current cursor position.\n *\n * You must call maybeClipCurrentRow() after in order to clip overflowed\n * text and clamp the cursor.\n *\n * It is also up to the caller to properly maintain the line overflow state\n * using hterm.Screen..commitLineOverflow().\n *\n * @param {string} str The source string for overwriting existing content.\n * @param {number=} wcwidth The cached lib.wc.strWidth value for |str|.  Will be\n *     calculated on demand if need be.  Passing in a cached value helps speed\n *     up processing as this is a hot codepath.\n */\nhterm.Screen.prototype.overwriteString = function(str, wcwidth = undefined) {\n  const maxLength = this.columnCount_ - this.cursorPosition.column;\n  if (!maxLength) {\n    return;\n  }\n\n  if (wcwidth === undefined) {\n    wcwidth = lib.wc.strWidth(str);\n  }\n\n  if (this.textAttributes.matchesContainer(lib.notNull(this.cursorNode_)) &&\n      this.cursorNode_.textContent.substr(this.cursorOffset_) ==\n          str) {\n    // This overwrite would be a no-op, just move the cursor and return.\n    this.cursorOffset_ += wcwidth;\n    this.cursorPosition.column += wcwidth;\n    return;\n  }\n\n  this.deleteChars(Math.min(wcwidth, maxLength));\n  this.insertString(str, wcwidth);\n};\n\n/**\n * Forward-delete one or more characters at the current cursor position.\n *\n * Text to the right of the deleted characters is shifted left.  Only affects\n * characters on the same row as the cursor.\n *\n * @param {number} count The column width of characters to delete.  This is\n *     clamped to the column width minus the cursor column.\n * @return {number} The column width of the characters actually deleted.\n */\nhterm.Screen.prototype.deleteChars = function(count) {\n  let node = this.cursorNode_;\n  let offset = this.cursorOffset_;\n\n  const currentCursorColumn = this.cursorPosition.column;\n  count = Math.min(count, this.columnCount_ - currentCursorColumn);\n  if (!count) {\n    return 0;\n  }\n\n  const rv = count;\n  let startLength, endLength;\n\n  while (node && count) {\n    // Sanity check so we don't loop forever, but we don't also go quietly.\n    if (count < 0) {\n      console.error(`Deleting ${rv} chars went negative: ${count}`);\n      break;\n    }\n\n    startLength = hterm.TextAttributes.nodeWidth(node);\n    node.textContent = hterm.TextAttributes.nodeSubstr(node, 0, offset) +\n        hterm.TextAttributes.nodeSubstr(node, offset + count);\n    endLength = hterm.TextAttributes.nodeWidth(node);\n\n    // Deal with splitting wide characters.  There are two ways: we could delete\n    // the first column or the second column.  In both cases, we delete the wide\n    // character and replace one of the columns with a space (since the other\n    // was deleted).  If there are more chars to delete, the next loop will pick\n    // up the slack.\n    if (node.wcNode && offset < startLength &&\n        ((endLength && startLength == endLength) ||\n         (!endLength && offset == 1))) {\n      // No characters were deleted when there should be.  We're probably trying\n      // to delete one column width from a wide character node.  We remove the\n      // wide character node here and replace it with a single space.\n      const spaceNode = this.textAttributes.createContainer(' ');\n      node.parentNode.insertBefore(spaceNode, offset ? node : node.nextSibling);\n      node.textContent = '';\n      endLength = 0;\n      count -= 1;\n    } else {\n      count -= startLength - endLength;\n    }\n\n    const nextNode = node.nextSibling;\n    if (endLength == 0 && node != this.cursorNode_) {\n      node.remove();\n    }\n    node = nextNode;\n    offset = 0;\n  }\n\n  // Remove this.cursorNode_ if it is an empty non-text node.\n  if (this.cursorNode_.nodeType != Node.TEXT_NODE &&\n      !this.cursorNode_.textContent) {\n    const cursorNode = this.cursorNode_;\n    if (cursorNode.previousSibling) {\n      this.cursorNode_ = cursorNode.previousSibling;\n      this.cursorOffset_ = hterm.TextAttributes.nodeWidth(\n          cursorNode.previousSibling);\n    } else if (cursorNode.nextSibling) {\n      this.cursorNode_ = cursorNode.nextSibling;\n      this.cursorOffset_ = 0;\n    } else {\n      const emptyNode = this.cursorRowNode_.ownerDocument.createTextNode('');\n      this.cursorRowNode_.appendChild(emptyNode);\n      this.cursorNode_ = emptyNode;\n      this.cursorOffset_ = 0;\n    }\n    this.cursorRowNode_.removeChild(cursorNode);\n  }\n\n  return rv;\n};\n\n/**\n * Finds first X-ROW of a line containing specified X-ROW.\n * Used to support line overflow.\n *\n * @param {!Node} row X-ROW to begin search for first row of line.\n * @return {!Node} The X-ROW that is at the beginning of the line.\n **/\nhterm.Screen.prototype.getLineStartRow_ = function(row) {\n  while (row.previousSibling &&\n         row.previousSibling.hasAttribute('line-overflow')) {\n    row = row.previousSibling;\n  }\n  return row;\n};\n\n/**\n * Gets text of a line beginning with row.\n * Supports line overflow.\n *\n * @param {!Node} row First X-ROW of line.\n * @return {string} Text content of line.\n **/\nhterm.Screen.prototype.getLineText_ = function(row) {\n  let rowText = '';\n  let rowOrNull = row;\n  while (rowOrNull) {\n    rowText += rowOrNull.textContent;\n    if (rowOrNull.hasAttribute('line-overflow')) {\n      rowOrNull = rowOrNull.nextSibling;\n    } else {\n      break;\n    }\n  }\n  return rowText;\n};\n\n/**\n * Returns X-ROW that is ancestor of the node.\n *\n * @param {!Node} node Node to get X-ROW ancestor for.\n * @return {?Node} X-ROW ancestor of node, or null if not found.\n **/\nhterm.Screen.prototype.getXRowAncestor_ = function(node) {\n  let nodeOrNull = node;\n  while (nodeOrNull) {\n    if (nodeOrNull.nodeName === 'X-ROW') {\n      break;\n    }\n    nodeOrNull = nodeOrNull.parentNode;\n  }\n  return nodeOrNull;\n};\n\n/**\n * Returns position within line of character at offset within node.\n * Supports line overflow.\n *\n * @param {!Node} row X-ROW at beginning of line.\n * @param {!Node} node Node to get position of.\n * @param {number} offset Offset into node.\n * @return {number} Position within line of character at offset within node.\n **/\nhterm.Screen.prototype.getPositionWithOverflow_ = function(row, node, offset) {\n  if (!node) {\n    return -1;\n  }\n  const ancestorRow = this.getXRowAncestor_(node);\n  if (!ancestorRow) {\n    return -1;\n  }\n  let position = 0;\n  while (ancestorRow != row) {\n    position += hterm.TextAttributes.nodeWidth(row);\n    if (row.hasAttribute('line-overflow') && row.nextSibling) {\n      row = row.nextSibling;\n    } else {\n      return -1;\n    }\n  }\n  return position + this.getPositionWithinRow_(row, node, offset);\n};\n\n/**\n * Returns position within row of character at offset within node.\n * Does not support line overflow.\n *\n * @param {!Node} row X-ROW to get position within.\n * @param {!Node} node Node to get position for.\n * @param {number} offset Offset within node to get position for.\n * @return {number} Position within row of character at offset within node.\n **/\nhterm.Screen.prototype.getPositionWithinRow_ = function(row, node, offset) {\n  if (node.parentNode != row) {\n    // If we traversed to the top node, then there's nothing to find here.\n    if (node.parentNode == null) {\n      return -1;\n    }\n\n    return this.getPositionWithinRow_(node.parentNode, node, offset) +\n           this.getPositionWithinRow_(row, node.parentNode, 0);\n  }\n  let position = 0;\n  for (let i = 0; i < row.childNodes.length; i++) {\n    const currentNode = row.childNodes[i];\n    if (currentNode == node) {\n      return position + offset;\n    }\n    position += hterm.TextAttributes.nodeWidth(currentNode);\n  }\n  return -1;\n};\n\n/**\n * Returns the node and offset corresponding to position within line.\n * Supports line overflow.\n *\n * @param {!Node} row X-ROW at beginning of line.\n * @param {number} position Position within line to retrieve node and offset.\n * @return {?Array} Two element array containing node and offset respectively.\n **/\nhterm.Screen.prototype.getNodeAndOffsetWithOverflow_ = function(row, position) {\n  while (row && position > hterm.TextAttributes.nodeWidth(row)) {\n    if (row.hasAttribute('line-overflow') && row.nextSibling) {\n      position -= hterm.TextAttributes.nodeWidth(row);\n      row = row.nextSibling;\n    } else {\n      return [null, -1];\n    }\n  }\n  return this.getNodeAndOffsetWithinRow_(row, position);\n};\n\n/**\n * Returns the node and offset corresponding to position within row.\n * Does not support line overflow.\n *\n * @param {!Node} row X-ROW to get position within.\n * @param {number} position Position within row to retrieve node and offset.\n * @return {?Array} Two element array containing node and offset respectively.\n **/\nhterm.Screen.prototype.getNodeAndOffsetWithinRow_ = function(row, position) {\n  for (let i = 0; i < row.childNodes.length; i++) {\n    const node = row.childNodes[i];\n    const nodeTextWidth = hterm.TextAttributes.nodeWidth(node);\n    if (position <= nodeTextWidth) {\n      if (node.nodeName === 'SPAN') {\n        /** Drill down to node contained by SPAN. **/\n        return this.getNodeAndOffsetWithinRow_(node, position);\n      } else {\n        return [node, position];\n      }\n    }\n    position -= nodeTextWidth;\n  }\n  return null;\n};\n\n/**\n * Returns the node and offset corresponding to position within line.\n * Supports line overflow.\n *\n * @param {!Node} row X-ROW at beginning of line.\n * @param {number} start Start position of range within line.\n * @param {number} end End position of range within line.\n * @param {!Range} range Range to modify.\n **/\nhterm.Screen.prototype.setRange_ = function(row, start, end, range) {\n  const startNodeAndOffset = this.getNodeAndOffsetWithOverflow_(row, start);\n  if (startNodeAndOffset == null) {\n    return;\n  }\n  const endNodeAndOffset = this.getNodeAndOffsetWithOverflow_(row, end);\n  if (endNodeAndOffset == null) {\n    return;\n  }\n  range.setStart(startNodeAndOffset[0], startNodeAndOffset[1]);\n  range.setEnd(endNodeAndOffset[0], endNodeAndOffset[1]);\n};\n\n/**\n * Expands selection to surrounding string with word break matches.\n *\n * @param {?Selection} selection Selection to expand.\n * @param {string} leftMatch left word break match.\n * @param {string} rightMatch right word break match.\n * @param {string} insideMatch inside word break match.\n */\nhterm.Screen.prototype.expandSelectionWithWordBreakMatches_ =\n    function(selection, leftMatch, rightMatch, insideMatch) {\n  if (!selection) {\n    return;\n  }\n\n  const range = selection.getRangeAt(0);\n  if (!range || range.toString().match(/\\s/)) {\n    return;\n  }\n\n  const rowElement = this.getXRowAncestor_(lib.notNull(range.startContainer));\n  if (!rowElement) {\n    return;\n  }\n  const row = this.getLineStartRow_(rowElement);\n  if (!row) {\n    return;\n  }\n\n  const startPosition = this.getPositionWithOverflow_(\n      row, lib.notNull(range.startContainer), range.startOffset);\n  if (startPosition == -1) {\n    return;\n  }\n  const endPosition = this.getPositionWithOverflow_(\n      row, lib.notNull(range.endContainer), range.endOffset);\n  if (endPosition == -1) {\n    return;\n  }\n\n  // Move start to the left.\n  const rowText = this.getLineText_(row);\n  const lineUpToRange = lib.wc.substring(rowText, 0, endPosition);\n  const leftRegularExpression = new RegExp(leftMatch + insideMatch + '$');\n  const expandedStart = lineUpToRange.search(leftRegularExpression);\n  if (expandedStart == -1 || expandedStart > startPosition) {\n    return;\n  }\n\n  // Move end to the right.\n  const lineFromRange = lib.wc.substring(rowText, startPosition,\n                                         lib.wc.strWidth(rowText));\n  const rightRegularExpression = new RegExp('^' + insideMatch + rightMatch);\n  const found = lineFromRange.match(rightRegularExpression);\n  if (!found) {\n    return;\n  }\n  const expandedEnd = startPosition + lib.wc.strWidth(found[0]);\n  if (expandedEnd == -1 || expandedEnd < endPosition) {\n    return;\n  }\n\n  this.setRange_(row, expandedStart, expandedEnd, range);\n  selection.addRange(range);\n};\n\n/**\n * Expands selection to surrounding string using the user's settings.\n *\n * @param {?Selection} selection Selection to expand.\n */\nhterm.Screen.prototype.expandSelection = function(selection) {\n  this.expandSelectionWithWordBreakMatches_(\n      selection,\n      lib.notNull(this.wordBreakMatchLeft),\n      lib.notNull(this.wordBreakMatchRight),\n      lib.notNull(this.wordBreakMatchMiddle));\n};\n\n/**\n * Expands selection to surrounding URL using a set of fixed match settings.\n *\n * @param {?Selection} selection Selection to expand.\n */\nhterm.Screen.prototype.expandSelectionForUrl = function(selection) {\n  this.expandSelectionWithWordBreakMatches_(\n      selection,\n      '[^\\\\s[\\\\](){}<>\"\\'^!@#$%&*,;:`\\u{2018}\\u{201c}\\u{2039}\\u{ab}]',\n      '[^\\\\s[\\\\](){}<>\"\\'^!@#$%&*,;:~.`\\u{2019}\\u{201d}\\u{203a}\\u{bb}]',\n      '[^\\\\s[\\\\](){}<>\"\\'^]*');\n};\n\n/**\n * Save the current cursor state to the corresponding screens.\n *\n * @param {!hterm.VT} vt The VT object to read graphic codeset details from.\n */\nhterm.Screen.prototype.saveCursorAndState = function(vt) {\n  this.cursorState_.save(vt);\n};\n\n/**\n * Restore the saved cursor state in the corresponding screens.\n *\n * @param {!hterm.VT} vt The VT object to write graphic codeset details to.\n */\nhterm.Screen.prototype.restoreCursorAndState = function(vt) {\n  this.cursorState_.restore(vt);\n};\n\n/**\n * Track all the things related to the current \"cursor\".\n *\n * The set of things saved & restored here is defined by DEC:\n * https://vt100.net/docs/vt510-rm/DECSC.html\n * - Cursor position\n * - Character attributes set by the SGR command\n * - Character sets (G0, G1, G2, or G3) currently in GL and GR\n * - Wrap flag (autowrap or no autowrap)\n * - State of origin mode (DECOM)\n * - Selective erase attribute\n * - Any single shift 2 (SS2) or single shift 3 (SS3) functions sent\n *\n * These are done on a per-screen basis.\n *\n * @param {!hterm.Screen} screen The screen this cursor is tied to.\n * @constructor\n */\nhterm.Screen.CursorState = function(screen) {\n  this.screen_ = screen;\n  this.cursor = null;\n  this.textAttributes = null;\n  this.GL = this.GR = this.G0 = this.G1 = this.G2 = this.G3 = null;\n};\n\n/**\n * Save all the cursor state.\n *\n * @param {!hterm.VT} vt The VT object to read graphic codeset details from.\n */\nhterm.Screen.CursorState.prototype.save = function(vt) {\n  this.cursor = vt.terminal.saveCursor();\n\n  this.textAttributes = this.screen_.textAttributes.clone();\n\n  this.GL = vt.GL;\n  this.GR = vt.GR;\n\n  this.G0 = vt.G0;\n  this.G1 = vt.G1;\n  this.G2 = vt.G2;\n  this.G3 = vt.G3;\n};\n\n/**\n * Restore the previously saved cursor state.\n *\n * @param {!hterm.VT} vt The VT object to write graphic codeset details to.\n */\nhterm.Screen.CursorState.prototype.restore = function(vt) {\n  vt.terminal.restoreCursor(this.cursor);\n\n  // Cursor restore includes char attributes (bold/etc...), but does not change\n  // the color palette (which are a terminal setting).\n  const tattrs = this.textAttributes.clone();\n  tattrs.colorPaletteOverrides =\n      this.screen_.textAttributes.colorPaletteOverrides;\n  tattrs.syncColors();\n\n  this.screen_.textAttributes = tattrs;\n\n  vt.GL = this.GL;\n  vt.GR = this.GR;\n\n  vt.G0 = this.G0;\n  vt.G1 = this.G1;\n  vt.G2 = this.G2;\n  vt.G3 = this.G3;\n};\n// SOURCE FILE: hterm/js/hterm_scrollport.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * The RowProvider should return rows rooted by the custom tag name 'x-row'.\n * This ensures that we can quickly assign the correct display height\n * to the rows with css.\n *\n * @interface\n */\nhterm.RowProvider = function() {};\n\n/**\n * @abstract\n * @return {number} The current number of rows.\n */\nhterm.RowProvider.prototype.getRowCount = function() {};\n\n/**\n * Get specified row.\n *\n * @abstract\n * @param {number} index The index of the row.\n * @return {!Element}\n */\nhterm.RowProvider.prototype.getRowNode = function(index) {};\n\n/**\n * A 'viewport' view of fixed-height rows with support for selection and\n * copy-to-clipboard.\n *\n * 'Viewport' in this case means that only the visible rows are in the DOM.\n * If the rowProvider has 100,000 rows, but the ScrollPort is only 25 rows\n * tall, then only 25 dom nodes are created.  The ScrollPort will ask the\n * RowProvider to create new visible rows on demand as they are scrolled in\n * to the visible area.\n *\n * This viewport is designed so that select and copy-to-clipboard still works,\n * even when all or part of the selection is scrolled off screen.\n *\n * Note that the X11 mouse clipboard does not work properly when all or part\n * of the selection is off screen.  It would be difficult to fix this without\n * adding significant overhead to pathologically large selection cases.\n *\n * @param {!hterm.RowProvider} rowProvider An object capable of providing rows\n *     as raw text or row nodes.\n * @constructor\n * @extends {hterm.PubSub}\n */\nhterm.ScrollPort = function(rowProvider) {\n  hterm.PubSub.addBehavior(this);\n\n  this.rowProvider_ = rowProvider;\n\n  // SWAG the character size until we can measure it.\n  this.characterSize = new hterm.Size(10, 10);\n\n  // DOM node used for character measurement.\n  this.ruler_ = null;\n\n  this.selection = new hterm.ScrollPort.Selection(this);\n\n  // A map of rowIndex => rowNode for each row that is drawn as part of a\n  // pending redraw_() call.  Null if there is no pending redraw_ call.\n  this.currentRowNodeCache_ = null;\n\n  // A map of rowIndex => rowNode for each row that was drawn as part of the\n  // previous redraw_() call.\n  this.previousRowNodeCache_ = {};\n\n  // Used during scroll events to detect when the underlying cause is a resize.\n  this.lastScreenWidth_ = 0;\n  this.lastScreenHeight_ = 0;\n\n  // True if the user should be allowed to select text in the terminal.\n  // This is disabled when the host requests mouse drag events so that we don't\n  // end up with two notions of selection.\n  this.selectionEnabled_ = true;\n\n  // The last row count returned by the row provider, re-populated during\n  // syncScrollHeight().\n  this.lastRowCount_ = 0;\n\n  // The scroll wheel pixel delta multiplier to increase/decrease\n  // the scroll speed of mouse wheel events. See: https://goo.gl/sXelnq\n  this.scrollWheelMultiplier_ = 1;\n\n  // The last touch events we saw to support touch based scrolling.  Indexed\n  // by touch identifier since we can have more than one touch active.\n  this.lastTouch_ = {};\n\n  /**\n   * Size of screen padding in pixels.\n   */\n  this.screenPaddingSize = 0;\n\n  /**\n   * Size of line height padding in pixels.\n   */\n  this.lineHeightPaddingSize = 0;\n\n  /**\n   * True if the last scroll caused the scrollport to show the final row.\n   */\n  this.isScrolledEnd = true;\n\n  /**\n   * A guess at the current scrollbar width, fixed in resize().\n   */\n  this.currentScrollbarWidthPx = hterm.ScrollPort.DEFAULT_SCROLLBAR_WIDTH;\n\n  /**\n   * Whether the ctrl-v key on the screen should paste.\n   */\n  this.ctrlVPaste = false;\n\n  /**\n   * Whether to paste on dropped text.\n   */\n  this.pasteOnDrop = true;\n\n  this.div_ = null;\n  this.document_ = null;\n  /** @type {?Element} */\n  this.screen_ = null;\n\n  this.contenteditable = 'true';\n\n  // Collection of active timeout handles.\n  this.timeouts_ = {};\n\n  this.observers_ = {};\n\n  // Offscreen selection rows that are set with 'aria-hidden'.\n  // They must be unset when selection changes or the rows are visible.\n  this.ariaHiddenSelectionRows_ = [];\n\n  this.DEBUG_ = false;\n};\n\n/**\n * Default width for scrollbar used when the system such as CrOS pretends that\n * scrollbar is zero width.  CrOS currently uses 11px when expanded.\n *\n * @const {number}\n */\nhterm.ScrollPort.DEFAULT_SCROLLBAR_WIDTH = 12;\n\n/**\n * Proxy for the native selection object which understands how to walk up the\n * DOM to find the containing row node and sort out which comes first.\n *\n * @param {!hterm.ScrollPort} scrollPort The parent hterm.ScrollPort instance.\n * @constructor\n */\nhterm.ScrollPort.Selection = function(scrollPort) {\n  this.scrollPort_ = scrollPort;\n\n  /**\n   * The row containing the start of the selection.\n   *\n   * This may be partially or fully selected.  It may be the selection anchor\n   * or the focus, but its rowIndex is guaranteed to be less-than-or-equal-to\n   * that of the endRow.\n   *\n   * If only one row is selected then startRow == endRow.  If there is no\n   * selection or the selection is collapsed then startRow == null.\n   *\n   * @type {?Node}\n   */\n  this.startRow = null;\n\n  /**\n   * Node where selection starts.\n   *\n   * @type {?Node}\n   */\n  this.startNode = null;\n\n  /**\n   * Character offset in startNode where selection starts.\n   *\n   * @type {number}\n   */\n  this.startOffset = 0;\n\n  /**\n   * The row containing the end of the selection.\n   *\n   * This may be partially or fully selected.  It may be the selection anchor\n   * or the focus, but its rowIndex is guaranteed to be greater-than-or-equal-to\n   * that of the startRow.\n   *\n   * If only one row is selected then startRow == endRow.  If there is no\n   * selection or the selection is collapsed then startRow == null.\n   *\n   * @type {?Node}\n   */\n  this.endRow = null;\n\n  /**\n   * Node where selection ends.\n   *\n   * @type {?Node}\n   */\n  this.endNode = null;\n\n  /**\n   * Character offset in endNode where selection ends.\n   *\n   * @type {number}\n   */\n  this.endOffset = 0;\n\n  /**\n   * True if startRow != endRow.\n   *\n   * @type {boolean}\n   */\n  this.isMultiline = false;\n\n  /**\n   * True if the selection is just a point (empty) rather than a range.\n   *\n   * @type {boolean}\n   */\n  this.isCollapsed = true;\n\n  /**\n   * @private\n   * @const\n   */\n  this.autoScrollOnMouseMoveBound_ =\n      /** @type {!EventListener} */ (this.autoScrollOnMouseMove_.bind(this));\n\n  /**\n   * True when 'mousedown' event is received for primary button until 'mouseup'\n   * is received for primary button.\n   *\n   * @private {boolean}\n   */\n  this.autoScrollEnabled_ = false;\n\n  /**\n   * Direction of auto scroll. 1 for scrolling down, -1 for scrolling up. Set by\n   * detecting mouse position from 'mousemove' events.\n   *\n   * @private {number}\n   */\n  this.autoScrollDirection_ = 1;\n\n  /**\n   * ID of interval running this.autoScroll_(). Set by startAutoScroll_(),\n   * cleared by stopAutoScroll_().\n   *\n   * @private {?number}\n   */\n  this.autoScrollInterval_ = null;\n\n  /**\n   * Number of rows to scroll at a time. Auto scroll runs at a 200ms interval.\n   * It starts by scrolling 1 row and accelerates by 20% each invocation.\n   *\n   * @private {number}\n   */\n  this.autoScrollDelta_ = 1;\n};\n\n/**\n * Given a list of DOM nodes and a container, return the DOM node that\n * is first according to a depth-first search.\n *\n * @param {!Node} parent\n * @param {!Array<!Node>} childAry\n * @return {?Node} Returns null if none of the children are found.\n */\nhterm.ScrollPort.Selection.prototype.findFirstChild = function(\n    parent, childAry) {\n  let node = parent.firstChild;\n\n  while (node) {\n    if (childAry.indexOf(node) != -1) {\n      return node;\n    }\n\n    if (node.childNodes.length) {\n      const rv = this.findFirstChild(node, childAry);\n      if (rv) {\n        return rv;\n      }\n    }\n\n    node = node.nextSibling;\n  }\n\n  return null;\n};\n\n/**\n * Capture mousemove events while auto scroll is enabled. Set scroll direction\n * up if mouse is above midpoint of screen, else set direction down. Start and\n * stop auto scroll when mouse moves above or below rows.\n *\n * @param {!MouseEvent} e\n * @private\n */\nhterm.ScrollPort.Selection.prototype.autoScrollOnMouseMove_ = function(e) {\n  // If mouse is in top half of screen, then direction is up, else down.\n  const screenHeight = this.scrollPort_.lastScreenHeight_;\n  this.autoScrollDirection_ = (e.pageY * 2) < screenHeight ? -1 : 1;\n\n  const padding = this.scrollPort_.screenPaddingSize;\n  if (e.pageY < padding) {\n    // Mouse above rows.\n    this.startAutoScroll_();\n  } else if (e.pageY < (this.scrollPort_.visibleRowsHeight + padding)) {\n    // Mouse inside rows.\n    this.stopAutoScroll_();\n  } else {\n    // Mouse below rows.\n    this.startAutoScroll_();\n  }\n};\n\n/**\n * Enable auto scrolling. True while primary mouse button is down.\n *\n * @param {boolean} enabled\n */\nhterm.ScrollPort.Selection.prototype.setAutoScrollEnabled = function(enabled) {\n  this.autoScrollEnabled_ = enabled;\n  const doc = this.scrollPort_.getDocument();\n  if (enabled) {\n    doc.addEventListener('mousemove', this.autoScrollOnMouseMoveBound_);\n  } else {\n    doc.removeEventListener('mousemove', this.autoScrollOnMouseMoveBound_);\n    this.stopAutoScroll_();\n  }\n};\n\n/**\n * Increase this.autoScrollDelta_ by 20% and scroll.\n *\n * @private\n */\nhterm.ScrollPort.Selection.prototype.autoScroll_ = function() {\n  this.autoScrollDelta_ *= 1.2;\n  const delta = Math.floor(this.autoScrollDelta_) * this.autoScrollDirection_;\n  this.scrollPort_.scrollRowToTop(this.scrollPort_.getTopRowIndex() + delta);\n};\n\n/**\n * Start auto scrolling if primary mouse is down and it is above or below rows.\n *\n * @private\n */\nhterm.ScrollPort.Selection.prototype.startAutoScroll_ = function() {\n  if (this.autoScrollEnabled_ && this.autoScrollInterval_ === null) {\n    this.autoScrollInterval_ = setInterval(this.autoScroll_.bind(this), 200);\n  }\n};\n\n/**\n * Stop auto scrolling called on 'mouseup' or if mouse moves back into rows.\n *\n * @private\n */\nhterm.ScrollPort.Selection.prototype.stopAutoScroll_ = function() {\n  clearInterval(this.autoScrollInterval_);\n  this.autoScrollInterval_ = null;\n  this.autoScrollDelta_ = 1;\n};\n\n/**\n * Synchronize this object with the current DOM selection.\n *\n * This is a one-way synchronization, the DOM selection is copied to this\n * object, not the other way around.\n */\nhterm.ScrollPort.Selection.prototype.sync = function() {\n  // The dom selection object has no way to tell which nodes come first in\n  // the document, so we have to figure that out.\n  //\n  // This function is used when we detect that the \"anchor\" node is first.\n  const anchorFirst = () => {\n    this.startRow = anchorRow;\n    this.startNode = selection.anchorNode;\n    this.startOffset = selection.anchorOffset;\n    this.endRow = focusRow;\n    this.endNode = focusNode;\n    this.endOffset = focusOffset;\n  };\n\n  // This function is used when we detect that the \"focus\" node is first.\n  const focusFirst = () => {\n    this.startRow = focusRow;\n    this.startNode = focusNode;\n    this.startOffset = focusOffset;\n    this.endRow = anchorRow;\n    this.endNode = selection.anchorNode;\n    this.endOffset = selection.anchorOffset;\n  };\n\n  const selection = this.scrollPort_.getDocument().getSelection();\n\n  const clear = () => {\n    this.startRow = null;\n    this.startNode = null;\n    this.startOffset = 0;\n    this.endRow = null;\n    this.endNode = null;\n    this.endOffset = 0;\n    this.isMultiline = false;\n    this.isCollapsed = true;\n  };\n\n  if (!selection) {\n    clear();\n    return;\n  }\n\n  // Do not ignore collapsed selections. They must not be cleared.\n  // Screen readers will set them as they navigate through the DOM.\n  // Auto scroll can also create them as the selection inverts if you scroll\n  // one way and then reverse direction.\n  this.isCollapsed = !selection || selection.isCollapsed;\n\n  let anchorRow = selection.anchorNode;\n  while (anchorRow && anchorRow.nodeName != 'X-ROW') {\n    anchorRow = anchorRow.parentNode;\n  }\n\n  if (!anchorRow) {\n    // Don't set a selection if it's not a row node that's selected.\n    clear();\n    return;\n  }\n\n  let focusRow = selection.focusNode;\n  let focusNode = focusRow;\n  let focusOffset = selection.focusOffset;\n  const focusIsStartOfTopRow = () => {\n    focusRow = this.scrollPort_.topFold_.nextSibling;\n    focusNode = focusRow;\n    focusOffset = 0;\n  };\n  const focusIsEndOfBottomRow = () => {\n    focusRow = this.scrollPort_.bottomFold_.previousSibling;\n    focusNode = focusRow;\n    while (focusNode.lastChild) {\n      focusNode = focusNode.lastChild;\n    }\n    focusOffset = focusNode.length || 0;\n  };\n\n  // If focus is topFold or bottomFold, use adjacent row.\n  if (focusRow === this.scrollPort_.topFold_) {\n    focusIsStartOfTopRow();\n  } else if (focusRow === this.scrollPort_.bottomFold_) {\n    focusIsEndOfBottomRow();\n  }\n\n  while (focusRow && focusRow.nodeName != 'X-ROW') {\n    focusRow = focusRow.parentNode;\n  }\n\n  if (!focusRow) {\n    // Keep existing selection (do not clear()) if focus is not a valid row.\n    return;\n  }\n\n  // During auto scroll, if focusRow is one of the selection rows inside the\n  // fold, use adjacent row.\n  if (this.scrollPort_.autoScrollEnabled_) {\n    let node = this.scrollPort_.topFold_;\n    while ((node = node.previousSibling) !== null) {\n      if (node === focusRow) {\n        focusIsStartOfTopRow();\n      }\n    }\n    node = this.scrollPort_.bottomFold_;\n    while ((node = node.nextSibling) !== null) {\n      if (node === focusRow) {\n        focusIsEndOfBottomRow();\n      }\n    }\n  }\n\n  if (anchorRow.rowIndex < focusRow.rowIndex) {\n    anchorFirst();\n\n  } else if (anchorRow.rowIndex > focusRow.rowIndex) {\n    focusFirst();\n\n  } else if (focusNode == selection.anchorNode) {\n    if (selection.anchorOffset < focusOffset) {\n      anchorFirst();\n    } else {\n      focusFirst();\n    }\n\n  } else {\n    // The selection starts and ends in the same row, but isn't contained all\n    // in a single node.\n    const firstNode = this.findFirstChild(\n        anchorRow, [selection.anchorNode, focusNode]);\n\n    if (!firstNode) {\n      throw new Error('Unexpected error syncing selection.');\n    }\n\n    if (firstNode == selection.anchorNode) {\n      anchorFirst();\n    } else {\n      focusFirst();\n    }\n  }\n\n  this.isMultiline = anchorRow.rowIndex != focusRow.rowIndex;\n};\n\n/**\n * Turn a div into this hterm.ScrollPort.\n *\n * @param {!Element} div\n * @param {function()=} callback\n */\nhterm.ScrollPort.prototype.decorate = function(div, callback) {\n  this.div_ = div;\n\n  this.iframe_ = div.ownerDocument.createElement('iframe');\n  this.iframe_.style.cssText = (\n      'border: 0;' +\n      'height: 100%;' +\n      'position: absolute;' +\n      'width: 100%');\n\n  div.appendChild(this.iframe_);\n\n  const onLoad = () => {\n    this.paintIframeContents_();\n    if (callback) {\n      callback();\n    }\n  };\n\n  // Insert Iframe content asynchronously in FF.  Otherwise when the frame's\n  // load event fires in FF it clears out the content of the iframe.\n  if ('mozInnerScreenX' in window) { // detect a FF only property\n    this.iframe_.addEventListener('load', () => onLoad());\n  } else {\n    onLoad();\n  }\n};\n\n\n/**\n * Initialises the content of this.iframe_. This needs to be done asynchronously\n * in FF after the Iframe's load event has fired.\n *\n * @private\n */\nhterm.ScrollPort.prototype.paintIframeContents_ = function() {\n  this.iframe_.contentWindow.addEventListener('resize',\n                                              this.onResize_.bind(this));\n\n  const doc = this.document_ = this.iframe_.contentDocument;\n  doc.body.style.cssText = (\n      'margin: 0px;' +\n      'padding: 0px;' +\n      'height: 100%;' +\n      'width: 100%;' +\n      'overflow: hidden;' +\n      'cursor: var(--hterm-mouse-cursor-style);' +\n      'user-select: none;');\n\n  const metaCharset = doc.createElement('meta');\n  metaCharset.setAttribute('charset', 'utf-8');\n  doc.head.appendChild(metaCharset);\n\n  if (this.DEBUG_) {\n    // When we're debugging we add padding to the body so that the offscreen\n    // elements are visible.\n    this.document_.body.style.paddingTop =\n        this.document_.body.style.paddingBottom =\n        'calc(var(--hterm-charsize-height) * 3)';\n  }\n\n  const style = doc.createElement('style');\n  style.textContent = (\n      'x-row {' +\n      '  display: block;' +\n      '  height: var(--hterm-charsize-height);' +\n      '  line-height: var(--hterm-charsize-height);' +\n      '}');\n  doc.head.appendChild(style);\n\n  this.userCssLink_ = doc.createElement('link');\n  this.userCssLink_.setAttribute('rel', 'stylesheet');\n\n  this.userCssText_ = doc.createElement('style');\n  doc.head.appendChild(this.userCssText_);\n\n  // TODO(rginda): Sorry, this 'screen_' isn't the same thing as hterm.Screen\n  // from screen.js.  I need to pick a better name for one of them to avoid\n  // the collision.\n  // We make this field editable even though we don't actually allow anything\n  // to be edited here so that Chrome will do the right thing with virtual\n  // keyboards and IMEs.  But make sure we turn off all the input helper logic\n  // that doesn't make sense here, and might inadvertently mung or save input.\n  // Some of these attributes are standard while others are browser specific,\n  // but should be safely ignored by other browsers.\n  this.screen_ = doc.createElement('x-screen');\n  this.screen_.setAttribute('contenteditable', this.contenteditable);\n  this.screen_.setAttribute('spellcheck', 'false');\n  this.screen_.setAttribute('autocomplete', 'off');\n  this.screen_.setAttribute('autocorrect', 'off');\n  this.screen_.setAttribute('autocapitalize', 'none');\n\n  // In some ways the terminal behaves like a text box but not in all ways. It\n  // is not editable in the same ways a text box is editable and the content we\n  // want to be read out by a screen reader does not always align with the edits\n  // (selection changes) that happen in the terminal window. Use the log role so\n  // that the screen reader doesn't treat it like a text box and announce all\n  // selection changes. The announcements that we want spoken are generated\n  // by a separate live region, which gives more control over what will be\n  // spoken.\n  this.screen_.setAttribute('role', 'log');\n  this.screen_.setAttribute('aria-live', 'off');\n  this.screen_.setAttribute('aria-roledescription', 'Terminal');\n\n  // Set aria-readonly to indicate to the screen reader that the text on the\n  // screen is not modifiable by the html cursor. It may be modifiable by\n  // sending input to the application running in the terminal, but this is\n  // orthogonal to the DOM's notion of modifiable.\n  this.screen_.setAttribute('aria-readonly', 'true');\n  this.screen_.setAttribute('tabindex', '-1');\n  this.screen_.style.cssText = `\n      background-color: rgb(var(--hterm-background-color));\n      caret-color: transparent;\n      color: rgb(var(--hterm-foreground-color));\n      display: block;\n      font-family: monospace;\n      font-size: 15px;\n      font-variant-ligatures: none;\n      height: 100%;\n      overflow-y: scroll; overflow-x: hidden;\n      white-space: pre;\n      width: 100%;\n      outline: none !important;\n  `;\n\n\n  /**\n   * @param {function(...)} f\n   * @return {!EventListener}\n   */\n  const el = (f) => /** @type {!EventListener} */ (f);\n  this.screen_.addEventListener('scroll', el(this.onScroll_.bind(this)));\n  this.screen_.addEventListener('wheel', el(this.onScrollWheel_.bind(this)));\n  this.screen_.addEventListener('touchstart', el(this.onTouch_.bind(this)));\n  this.screen_.addEventListener('touchmove', el(this.onTouch_.bind(this)));\n  this.screen_.addEventListener('touchend', el(this.onTouch_.bind(this)));\n  this.screen_.addEventListener('touchcancel', el(this.onTouch_.bind(this)));\n  this.screen_.addEventListener('copy', el(this.onCopy_.bind(this)));\n  this.screen_.addEventListener('paste', el(this.onPaste_.bind(this)));\n  this.screen_.addEventListener('drop', el(this.onDragAndDrop_.bind(this)));\n\n  doc.body.addEventListener('keydown', this.onBodyKeyDown_.bind(this));\n\n  // Add buttons to make accessible scrolling through terminal history work\n  // well. These are positioned off-screen until they are selected, at which\n  // point they are moved on-screen.\n  const a11yButtonHeight = 30;\n  const a11yButtonBorder = 1;\n  const a11yButtonTotalHeight = a11yButtonHeight + 2 * a11yButtonBorder;\n  const a11yButtonStyle = `\n    border-style: solid;\n    border-width: ${a11yButtonBorder}px;\n    color: rgb(var(--hterm-foreground-color));\n    cursor: pointer;\n    font-family: monospace;\n    font-weight: bold;\n    height: ${a11yButtonHeight}px;\n    line-height: ${a11yButtonHeight}px;\n    padding: 0 8px;\n    position: fixed;\n    right: var(--hterm-screen-padding-size);\n    text-align: center;\n    z-index: 1;\n  `;\n  // Note: we use a <div> rather than a <button> because we don't want it to be\n  // focusable. If it's focusable this interferes with the contenteditable\n  // focus.\n  this.scrollUpButton_ = this.document_.createElement('div');\n  this.scrollUpButton_.id = 'hterm:a11y:page-up';\n  this.scrollUpButton_.innerText = hterm.msg('BUTTON_PAGE_UP', [], 'Page up');\n  this.scrollUpButton_.setAttribute('role', 'button');\n  this.scrollUpButton_.style.cssText = a11yButtonStyle;\n  this.scrollUpButton_.style.top = `${-a11yButtonTotalHeight}px`;\n  this.scrollUpButton_.addEventListener('click', this.scrollPageUp.bind(this));\n\n  this.scrollDownButton_ = this.document_.createElement('div');\n  this.scrollDownButton_.id = 'hterm:a11y:page-down';\n  this.scrollDownButton_.innerText =\n      hterm.msg('BUTTON_PAGE_DOWN', [], 'Page down');\n  this.scrollDownButton_.setAttribute('role', 'button');\n  this.scrollDownButton_.style.cssText = a11yButtonStyle;\n  this.scrollDownButton_.style.bottom = `${-a11yButtonTotalHeight}px`;\n  this.scrollDownButton_.addEventListener(\n      'click', this.scrollPageDown.bind(this));\n\n  this.optionsButton_ = this.document_.createElement('div');\n  this.optionsButton_.id = 'hterm:a11y:options';\n  this.optionsButton_.innerText =\n      hterm.msg('OPTIONS_BUTTON_LABEL', [], 'Options');\n  this.optionsButton_.setAttribute('role', 'button');\n  this.optionsButton_.style.cssText = a11yButtonStyle;\n  this.optionsButton_.style.bottom = `${-2 * a11yButtonTotalHeight}px`;\n  this.optionsButton_.addEventListener(\n      'click', this.publish.bind(this, 'options'));\n\n  doc.body.appendChild(this.scrollUpButton_);\n  doc.body.appendChild(this.screen_);\n  doc.body.appendChild(this.scrollDownButton_);\n  doc.body.appendChild(this.optionsButton_);\n\n  // We only allow the scroll buttons to display after a delay, otherwise the\n  // page up button can flash onto the screen during the intial change in focus.\n  // This seems to be because it is the first element inside the <x-screen>\n  // element, which will get focussed on page load.\n  this.allowA11yButtonsToDisplay_ = false;\n  setTimeout(() => { this.allowA11yButtonsToDisplay_ = true; }, 500);\n  this.document_.addEventListener('selectionchange', () => {\n    this.selection.sync();\n\n    if (!this.allowA11yButtonsToDisplay_) {\n      return;\n    }\n\n    const accessibilityEnabled = this.accessibilityReader_ &&\n        this.accessibilityReader_.accessibilityEnabled;\n\n    const selection = this.document_.getSelection();\n    let selectedElement;\n    if (selection.anchorNode && selection.anchorNode.parentElement) {\n      selectedElement = selection.anchorNode.parentElement;\n    }\n    if (accessibilityEnabled && selectedElement == this.scrollUpButton_) {\n      this.scrollUpButton_.style.top = `${this.screenPaddingSize}px`;\n    } else {\n      this.scrollUpButton_.style.top = `${-a11yButtonTotalHeight}px`;\n    }\n    if (accessibilityEnabled && selectedElement == this.scrollDownButton_) {\n      this.scrollDownButton_.style.bottom = `${this.screenPaddingSize}px`;\n    } else {\n      this.scrollDownButton_.style.bottom = `${-a11yButtonTotalHeight}px`;\n    }\n    if (accessibilityEnabled && selectedElement == this.optionsButton_) {\n      this.optionsButton_.style.bottom = `${this.screenPaddingSize}px`;\n    } else {\n      this.optionsButton_.style.bottom = `${-2 * a11yButtonTotalHeight}px`;\n    }\n  });\n\n  // This is the main container for the fixed rows.\n  this.rowNodes_ = doc.createElement('div');\n  this.rowNodes_.id = 'hterm:row-nodes';\n  this.rowNodes_.style.cssText = (\n      'display: block;' +\n      'position: fixed;' +\n      'overflow: hidden;' +\n      'user-select: text;');\n  this.screen_.appendChild(this.rowNodes_);\n\n  // Two nodes to hold offscreen text during the copy event.\n  this.topSelectBag_ = doc.createElement('x-select-bag');\n  this.topSelectBag_.style.cssText = (\n      'display: block;' +\n      'overflow: hidden;' +\n      'height: var(--hterm-charsize-height);' +\n      'white-space: pre;');\n\n  this.bottomSelectBag_ = this.topSelectBag_.cloneNode();\n\n  // Nodes above the top fold and below the bottom fold are hidden.  They are\n  // only used to hold rows that are part of the selection but are currently\n  // scrolled off the top or bottom of the visible range.\n  this.topFold_ = doc.createElement('x-fold');\n  this.topFold_.id = 'hterm:top-fold-for-row-selection';\n  this.topFold_.style.cssText = `\n    display: block;\n    height: var(--hterm-screen-padding-size);\n  `;\n  this.rowNodes_.appendChild(this.topFold_);\n\n  this.bottomFold_ = this.topFold_.cloneNode();\n  this.bottomFold_.id = 'hterm:bottom-fold-for-row-selection';\n  this.rowNodes_.appendChild(this.bottomFold_);\n\n  // This hidden div accounts for the vertical space that would be consumed by\n  // all the rows in the buffer if they were visible.  It's what causes the\n  // scrollbar to appear on the 'x-screen', and it moves within the screen when\n  // the scrollbar is moved.\n  //\n  // It is set 'visibility: hidden' to keep the browser from trying to include\n  // it in the selection when a user 'drag selects' upwards (drag the mouse to\n  // select and scroll at the same time).  Without this, the selection gets\n  // out of whack.\n  this.scrollArea_ = doc.createElement('div');\n  this.scrollArea_.id = 'hterm:scrollarea';\n  this.scrollArea_.style.cssText = 'visibility: hidden';\n  this.screen_.appendChild(this.scrollArea_);\n\n  // We send focus to this element just before a paste happens, so we can\n  // capture the pasted text and forward it on to someone who cares.\n  this.pasteTarget_ = doc.createElement('textarea');\n  this.pasteTarget_.id = 'hterm:ctrl-v-paste-target';\n  this.pasteTarget_.setAttribute('tabindex', '-1');\n  this.pasteTarget_.setAttribute('aria-hidden', 'true');\n  this.pasteTarget_.style.cssText = (\n    'position: absolute;' +\n    'height: 1px;' +\n    'width: 1px;' +\n    'left: 0px; ' +\n    'bottom: 0px;' +\n    'opacity: 0');\n  this.pasteTarget_.contentEditable = true;\n\n  this.screen_.appendChild(this.pasteTarget_);\n  this.pasteTarget_.addEventListener(\n      'textInput', this.handlePasteTargetTextInput_.bind(this));\n\n  this.resize();\n};\n\n/**\n * Set the AccessibilityReader object to use to announce page scroll updates.\n *\n * @param {!hterm.AccessibilityReader} accessibilityReader for announcing page\n *     scroll updates.\n */\nhterm.ScrollPort.prototype.setAccessibilityReader =\n    function(accessibilityReader) {\n  this.accessibilityReader_ = accessibilityReader;\n};\n\n/**\n * Scroll the terminal one page up (minus one line) relative to the current\n * position.\n */\nhterm.ScrollPort.prototype.scrollPageUp = function() {\n  if (this.getTopRowIndex() == 0) {\n    return;\n  }\n\n  const i = this.getTopRowIndex();\n  this.scrollRowToTop(i - this.visibleRowCount + 1);\n\n  this.assertiveAnnounce_();\n};\n\n/**\n * Scroll the terminal one page down (minus one line) relative to the current\n * position.\n */\nhterm.ScrollPort.prototype.scrollPageDown = function() {\n  if (this.isScrolledEnd) {\n    return;\n  }\n\n  const i = this.getTopRowIndex();\n  this.scrollRowToTop(i + this.visibleRowCount - 1);\n\n  this.assertiveAnnounce_();\n};\n\n/**\n * Select the font-family and font-smoothing for this scrollport.\n *\n * @param {string} fontFamily Value of the CSS 'font-family' to use for this\n *     scrollport.  Should be a monospace font.\n * @param {string=} smoothing Optional value for '-webkit-font-smoothing'.\n *     Defaults to an empty string if not specified.\n */\nhterm.ScrollPort.prototype.setFontFamily = function(\n    fontFamily, smoothing = '') {\n  this.screen_.style.fontFamily = fontFamily;\n  this.screen_.style.webkitFontSmoothing = smoothing;\n\n  this.syncCharacterSize();\n};\n\n/** @return {string} */\nhterm.ScrollPort.prototype.getFontFamily = function() {\n  return this.screen_.style.fontFamily;\n};\n\n/**\n * Set a custom stylesheet to include in the scrollport.\n *\n * Defaults to null, meaning no custom css is loaded.  Set it back to null or\n * the empty string to remove a previously applied custom css.\n *\n * @param {?string} url\n */\nhterm.ScrollPort.prototype.setUserCssUrl = function(url) {\n  if (url) {\n    this.userCssLink_.setAttribute('href', url);\n\n    if (!this.userCssLink_.parentNode) {\n      this.document_.head.appendChild(this.userCssLink_);\n    }\n  } else if (this.userCssLink_.parentNode) {\n    this.document_.head.removeChild(this.userCssLink_);\n  }\n};\n\n/** @param {string} text */\nhterm.ScrollPort.prototype.setUserCssText = function(text) {\n  this.userCssText_.textContent = text;\n};\n\n/** Focus. */\nhterm.ScrollPort.prototype.focus = function() {\n  this.iframe_.focus();\n  this.screen_.focus();\n  this.publish('focus');\n};\n\n/**\n * Unfocus the scrollport.\n */\nhterm.ScrollPort.prototype.blur = function() {\n  this.screen_.blur();\n};\n\n/** @param {string} image */\nhterm.ScrollPort.prototype.setBackgroundImage = function(image) {\n  this.screen_.style.backgroundImage = image;\n};\n\n/** @param {string} size */\nhterm.ScrollPort.prototype.setBackgroundSize = function(size) {\n  this.screen_.style.backgroundSize = size;\n};\n\n/** @param {string} position */\nhterm.ScrollPort.prototype.setBackgroundPosition = function(position) {\n  this.screen_.style.backgroundPosition = position;\n};\n\n/** @param {number} size */\nhterm.ScrollPort.prototype.setScreenPaddingSize = function(size) {\n  this.screenPaddingSize = size;\n  this.resize();\n};\n\n/** @param {number} size */\nhterm.ScrollPort.prototype.setLineHeightPaddingSize = function(size) {\n  this.lineHeightPaddingSize = size;\n  this.syncCharacterSize();\n};\n\n/** @param {boolean} ctrlVPaste */\nhterm.ScrollPort.prototype.setCtrlVPaste = function(ctrlVPaste) {\n  this.ctrlVPaste = ctrlVPaste;\n};\n\n/** @param {boolean} pasteOnDrop */\nhterm.ScrollPort.prototype.setPasteOnDrop = function(pasteOnDrop) {\n  this.pasteOnDrop = pasteOnDrop;\n};\n\n/**\n * Get the usable size of the scrollport screen.\n *\n * The width will not include the scrollbar width.\n *\n * @return {{height: number, width: number}}\n */\nhterm.ScrollPort.prototype.getScreenSize = function() {\n  const size = this.screen_.getBoundingClientRect();\n  const rightPadding = Math.max(\n      this.screenPaddingSize, this.currentScrollbarWidthPx);\n  return {\n    height: size.height - (2 * this.screenPaddingSize),\n    width: size.width - this.screenPaddingSize - rightPadding,\n  };\n};\n\n/**\n * Get the usable width of the scrollport screen.\n *\n * This the widget width minus scrollbar width.\n *\n * @return {number}\n */\nhterm.ScrollPort.prototype.getScreenWidth = function() {\n  return this.getScreenSize().width;\n};\n\n/**\n * Get the usable height of the scrollport screen.\n *\n * @return {number}\n */\nhterm.ScrollPort.prototype.getScreenHeight = function() {\n  return this.getScreenSize().height;\n};\n\n/**\n * Get the horizontal position in px where the scrollbar starts.\n *\n * @return {number}\n */\nhterm.ScrollPort.prototype.getScrollbarX = function() {\n  return this.screen_.getBoundingClientRect().width -\n         this.currentScrollbarWidthPx;\n};\n\n/**\n * Return the document that holds the visible rows of this hterm.ScrollPort.\n *\n * @return {!Document}\n */\nhterm.ScrollPort.prototype.getDocument = function() {\n  return this.document_;\n};\n\n/**\n * Returns the x-screen element that holds the rows of this hterm.ScrollPort.\n *\n * @return {?Element}\n */\nhterm.ScrollPort.prototype.getScreenNode = function() {\n  return this.screen_;\n};\n\n/**\n * Clear out any cached rowNodes.\n */\nhterm.ScrollPort.prototype.resetCache = function() {\n  this.currentRowNodeCache_ = null;\n  this.previousRowNodeCache_ = {};\n};\n\n/**\n * Change the current rowProvider.\n *\n * This will clear the row cache and cause a redraw.\n *\n * @param {!hterm.RowProvider} rowProvider An object capable of providing the\n *     rows in this hterm.ScrollPort.\n */\nhterm.ScrollPort.prototype.setRowProvider = function(rowProvider) {\n  this.resetCache();\n  this.rowProvider_ = rowProvider;\n  this.scheduleRedraw();\n};\n\n/**\n * Inform the ScrollPort that the root DOM nodes for some or all of the visible\n * rows are no longer valid.\n *\n * Specifically, this should be called if this.rowProvider_.getRowNode() now\n * returns an entirely different node than it did before.  It does not\n * need to be called if the content of a row node is the only thing that\n * changed.\n *\n * This skips some of the overhead of a full redraw, but should not be used\n * in cases where the scrollport has been scrolled, or when the row count has\n * changed.\n */\nhterm.ScrollPort.prototype.invalidate = function() {\n  let node = this.topFold_.nextSibling;\n  while (node != this.bottomFold_) {\n    const nextSibling = node.nextSibling;\n    node.remove();\n    node = nextSibling;\n  }\n\n  this.previousRowNodeCache_ = null;\n  const topRowIndex = this.getTopRowIndex();\n  const bottomRowIndex = this.getBottomRowIndex(topRowIndex);\n\n  this.drawVisibleRows_(topRowIndex, bottomRowIndex);\n};\n\n/**\n * Schedule invalidate.\n */\nhterm.ScrollPort.prototype.scheduleInvalidate = function() {\n  if (this.timeouts_.invalidate) {\n    return;\n  }\n\n  this.timeouts_.invalidate = setTimeout(() => {\n    delete this.timeouts_.invalidate;\n    this.invalidate();\n  });\n};\n\n/**\n * Set the font size of the ScrollPort.\n *\n * @param {number} px\n */\nhterm.ScrollPort.prototype.setFontSize = function(px) {\n  this.screen_.style.fontSize = px + 'px';\n  this.syncCharacterSize();\n};\n\n/**\n * Return the current font size of the ScrollPort.\n *\n * @return {number}\n */\nhterm.ScrollPort.prototype.getFontSize = function() {\n  return parseInt(this.screen_.style.fontSize, 10);\n};\n\n/**\n * Measure the size of a single character in pixels.\n *\n * @param {string=} weight The font weight to measure, or 'normal' if\n *     omitted.\n * @return {!hterm.Size} A new hterm.Size object.\n */\nhterm.ScrollPort.prototype.measureCharacterSize = function(weight = '') {\n  let ruler = this.ruler_;\n  if (!ruler) {\n    ruler = this.ruler_ = this.document_.createElement('canvas');\n  }\n  const context = ruler.getContext('2d');\n  context.font = `${weight} ${this.getFontSize()}px ${this.getFontFamily()}`;\n  const heightBox = context.measureText('X\\u{2588}');\n  const ascent =\n      heightBox.actualBoundingBoxAscent || heightBox.fontBoundingBoxAscent;\n  const descent =\n      heightBox.actualBoundingBoxDescent || heightBox.fontBoundingBoxDescent;\n  const widthBox = context.measureText('X');\n  return new hterm.Size(widthBox.width,\n                        ascent + descent + this.lineHeightPaddingSize);\n};\n\n/**\n * Synchronize the character size.\n *\n * This will re-measure the current character size and adjust the height\n * of an x-row to match.\n */\nhterm.ScrollPort.prototype.syncCharacterSize = function() {\n  this.characterSize = this.measureCharacterSize();\n\n  this.resize();\n};\n\n/**\n * Reset dimensions and visible row count to account for a change in the\n * dimensions of the 'x-screen'.\n */\nhterm.ScrollPort.prototype.resize = function() {\n  this.syncScrollbarWidth_();\n  this.syncScrollHeight();\n  this.syncRowNodesDimensions_();\n\n  this.publish(\n      'resize', {scrollPort: this},\n      () => this.scheduleRedraw());\n};\n\n/**\n * Announce text content on the current screen for the screen reader.\n */\nhterm.ScrollPort.prototype.assertiveAnnounce_ = function() {\n  if (!this.accessibilityReader_) {\n    return;\n  }\n\n  const topRow = this.getTopRowIndex();\n  const bottomRow = this.getBottomRowIndex(topRow);\n\n  let percentScrolled = 100 * topRow /\n      Math.max(1, this.rowProvider_.getRowCount() - this.visibleRowCount);\n  percentScrolled = Math.min(100, Math.round(percentScrolled));\n  let currentScreenContent = hterm.msg('ANNOUNCE_CURRENT_SCREEN_HEADER',\n                                       [percentScrolled],\n                                       '$1% scrolled,');\n  currentScreenContent += '\\n';\n\n  for (let i = topRow; i <= bottomRow; ++i) {\n    const node = this.fetchRowNode_(i);\n    currentScreenContent += node.textContent + '\\n';\n  }\n\n  this.accessibilityReader_.assertiveAnnounce(currentScreenContent);\n};\n\n/**\n * Set the position and size of the row nodes element.\n */\nhterm.ScrollPort.prototype.syncRowNodesDimensions_ = function() {\n  const screenSize = this.getScreenSize();\n\n  this.lastScreenWidth_ = screenSize.width;\n  this.lastScreenHeight_ = screenSize.height;\n\n  // We don't want to show a partial row because it would be distracting\n  // in a terminal, so we floor any fractional row count.\n  this.visibleRowCount = lib.f.smartFloorDivide(\n      screenSize.height, this.characterSize.height);\n\n  // Then compute the height of our integral number of rows.\n  this.visibleRowsHeight = this.visibleRowCount * this.characterSize.height;\n\n  // Then the difference between the screen height and total row height needs to\n  // be made up for as top margin.  We need to record this value so it\n  // can be used later to determine the topRowIndex.\n  this.visibleRowTopMargin = 0;\n  this.visibleRowBottomMargin = screenSize.height - this.visibleRowsHeight;\n\n  this.topFold_.style.marginBottom = this.visibleRowTopMargin + 'px';\n\n\n  let topFoldOffset = 0;\n  let node = this.topFold_.previousSibling;\n  while (node) {\n    topFoldOffset += node.getBoundingClientRect().height;\n    node = node.previousSibling;\n  }\n\n  // Set the dimensions of the visible rows container.\n  this.rowNodes_.style.width = screenSize.width + 'px';\n  this.rowNodes_.style.height =\n      this.visibleRowsHeight + topFoldOffset + this.screenPaddingSize + 'px';\n  this.rowNodes_.style.left =\n      this.screen_.offsetLeft + this.screenPaddingSize + 'px';\n  this.rowNodes_.style.top =\n      this.screen_.offsetTop - topFoldOffset + 'px';\n};\n\n/**\n * Measure scrollbar width.\n *\n * @private\n */\nhterm.ScrollPort.prototype.syncScrollbarWidth_ = function() {\n  const width = this.screen_.getBoundingClientRect().width -\n                this.screen_.clientWidth;\n  if (width > 0) {\n    this.currentScrollbarWidthPx = width;\n  }\n};\n\n/**\n * Resize the scroll area to appear as though it contains every row.\n */\nhterm.ScrollPort.prototype.syncScrollHeight = function() {\n  this.lastRowCount_ = this.rowProvider_.getRowCount();\n  this.scrollArea_.style.height = (this.characterSize.height *\n                                   this.lastRowCount_ +\n                                   (2 * this.screenPaddingSize) +\n                                   this.visibleRowTopMargin +\n                                   this.visibleRowBottomMargin +\n                                   'px');\n};\n\n/**\n * Schedule a redraw to happen asynchronously.\n *\n * If this method is called multiple times before the redraw has a chance to\n * run only one redraw occurs.\n */\nhterm.ScrollPort.prototype.scheduleRedraw = function() {\n  if (this.timeouts_.redraw) {\n    return;\n  }\n\n  this.timeouts_.redraw = setTimeout(() => {\n    delete this.timeouts_.redraw;\n    this.redraw_();\n  });\n};\n\n/**\n * Update the state of scroll up/down buttons.\n *\n * If the viewport is at the top or bottom row of output, these buttons will\n * be made transparent and clicking them shouldn't scroll any further.\n */\nhterm.ScrollPort.prototype.updateScrollButtonState_ = function() {\n  const setButton = (button, disabled) => {\n    button.setAttribute('aria-disabled', disabled ? 'true' : 'false');\n    button.style.opacity = disabled ? 0.5 : 1;\n  };\n  setButton(this.scrollUpButton_, this.getTopRowIndex() == 0);\n  setButton(this.scrollDownButton_, this.isScrolledEnd);\n};\n\n/**\n * Redraw the current hterm.ScrollPort based on the current scrollbar position.\n *\n * When redrawing, we are careful to make sure that the rows that start or end\n * the current selection are not touched in any way.  Doing so would disturb\n * the selection, and cleaning up after that would cause flashes at best and\n * incorrect selection at worst.  Instead, we modify the DOM around these nodes.\n * We even stash the selection start/end outside of the visible area if\n * they are not supposed to be visible in the hterm.ScrollPort.\n */\nhterm.ScrollPort.prototype.redraw_ = function() {\n  this.resetSelectBags_();\n  this.selection.sync();\n\n  this.syncScrollHeight();\n\n  this.currentRowNodeCache_ = {};\n\n  const topRowIndex = this.getTopRowIndex();\n  const bottomRowIndex = this.getBottomRowIndex(topRowIndex);\n\n  this.drawTopFold_(topRowIndex);\n  this.drawBottomFold_(bottomRowIndex);\n  this.drawVisibleRows_(topRowIndex, bottomRowIndex);\n  this.ariaHideOffscreenSelectionRows_(topRowIndex, bottomRowIndex);\n\n  this.syncRowNodesDimensions_();\n\n  this.previousRowNodeCache_ = this.currentRowNodeCache_;\n  this.currentRowNodeCache_ = null;\n\n  this.isScrolledEnd = (\n    this.getTopRowIndex() + this.visibleRowCount >= this.lastRowCount_);\n\n  this.updateScrollButtonState_();\n};\n\n/**\n * Ensure that the nodes above the top fold are as they should be.\n *\n * If the selection start and/or end nodes are above the visible range\n * of this hterm.ScrollPort then the dom will be adjusted so that they appear\n * before the top fold (the first x-fold element, aka this.topFold).\n *\n * If not, the top fold will be the first element.\n *\n * It is critical that this method does not move the selection nodes.  Doing\n * so would clear the current selection.  Instead, the rest of the DOM is\n * adjusted around them.\n *\n * @param {number} topRowIndex\n */\nhterm.ScrollPort.prototype.drawTopFold_ = function(topRowIndex) {\n  if (!this.selection.startRow ||\n      this.selection.startRow.rowIndex >= topRowIndex) {\n    // Selection is entirely below the top fold, just make sure the fold is\n    // the first child.\n    if (this.rowNodes_.firstChild != this.topFold_) {\n      this.rowNodes_.insertBefore(this.topFold_, this.rowNodes_.firstChild);\n    }\n\n    return;\n  }\n\n  if (!this.selection.isMultiline ||\n      this.selection.endRow.rowIndex >= topRowIndex) {\n    // Only the startRow is above the fold.\n    if (this.selection.startRow.nextSibling != this.topFold_) {\n      this.rowNodes_.insertBefore(this.topFold_,\n                                  this.selection.startRow.nextSibling);\n    }\n  } else {\n    // Both rows are above the fold.\n    if (this.selection.endRow.nextSibling != this.topFold_) {\n      this.rowNodes_.insertBefore(this.topFold_,\n                                  this.selection.endRow.nextSibling);\n    }\n\n    // Trim any intermediate lines.\n    while (this.selection.startRow.nextSibling !=\n           this.selection.endRow) {\n      this.rowNodes_.removeChild(this.selection.startRow.nextSibling);\n    }\n  }\n\n  while (this.rowNodes_.firstChild != this.selection.startRow) {\n    this.rowNodes_.removeChild(this.rowNodes_.firstChild);\n  }\n};\n\n/**\n * Ensure that the nodes below the bottom fold are as they should be.\n *\n * If the selection start and/or end nodes are below the visible range\n * of this hterm.ScrollPort then the dom will be adjusted so that they appear\n * after the bottom fold (the second x-fold element, aka this.bottomFold).\n *\n * If not, the bottom fold will be the last element.\n *\n * It is critical that this method does not move the selection nodes.  Doing\n * so would clear the current selection.  Instead, the rest of the DOM is\n * adjusted around them.\n *\n * @param {number} bottomRowIndex\n */\nhterm.ScrollPort.prototype.drawBottomFold_ = function(bottomRowIndex) {\n  if (!this.selection.endRow ||\n      this.selection.endRow.rowIndex <= bottomRowIndex) {\n    // Selection is entirely above the bottom fold, just make sure the fold is\n    // the last child.\n    if (this.rowNodes_.lastChild != this.bottomFold_) {\n      this.rowNodes_.appendChild(this.bottomFold_);\n    }\n\n    return;\n  }\n\n  if (!this.selection.isMultiline ||\n      this.selection.startRow.rowIndex <= bottomRowIndex) {\n    // Only the endRow is below the fold.\n    if (this.bottomFold_.nextSibling != this.selection.endRow) {\n      this.rowNodes_.insertBefore(this.bottomFold_,\n                                  this.selection.endRow);\n    }\n  } else {\n    // Both rows are below the fold.\n    if (this.bottomFold_.nextSibling != this.selection.startRow) {\n      this.rowNodes_.insertBefore(this.bottomFold_,\n                                  this.selection.startRow);\n    }\n\n    // Trim any intermediate lines.\n    while (this.selection.startRow.nextSibling !=\n           this.selection.endRow) {\n      this.rowNodes_.removeChild(this.selection.startRow.nextSibling);\n    }\n  }\n\n  while (this.rowNodes_.lastChild != this.selection.endRow) {\n    this.rowNodes_.removeChild(this.rowNodes_.lastChild);\n  }\n};\n\n/**\n * Ensure that the rows between the top and bottom folds are as they should be.\n *\n * This method assumes that drawTopFold_() and drawBottomFold_() have already\n * run, and that they have left any visible selection row (selection start\n * or selection end) between the folds.\n *\n * It recycles DOM nodes from the previous redraw where possible, but will ask\n * the rowSource to make new nodes if necessary.\n *\n * It is critical that this method does not move the selection nodes.  Doing\n * so would clear the current selection.  Instead, the rest of the DOM is\n * adjusted around them.\n *\n * @param {number} topRowIndex\n * @param {number} bottomRowIndex\n */\nhterm.ScrollPort.prototype.drawVisibleRows_ = function(\n    topRowIndex, bottomRowIndex) {\n  // Keep removing nodes, starting with currentNode, until we encounter\n  // targetNode.  Throws on failure.\n  const removeUntilNode = (currentNode, targetNode) => {\n    while (currentNode != targetNode) {\n      if (!currentNode) {\n        throw new Error('Did not encounter target node');\n      }\n\n      if (currentNode == this.bottomFold_) {\n        throw new Error('Encountered bottom fold before target node');\n      }\n\n      const deadNode = currentNode;\n      currentNode = currentNode.nextSibling;\n      deadNode.remove();\n    }\n  };\n\n  // Shorthand for things we're going to use a lot.\n  const selectionStartRow = this.selection.startRow;\n  const selectionEndRow = this.selection.endRow;\n  const bottomFold = this.bottomFold_;\n\n  // The node we're examining during the current iteration.\n  let node = this.topFold_.nextSibling;\n\n  const targetDrawCount = Math.min(this.visibleRowCount,\n                                   this.rowProvider_.getRowCount());\n\n  for (let drawCount = 0; drawCount < targetDrawCount; drawCount++) {\n    const rowIndex = topRowIndex + drawCount;\n\n    if (node == bottomFold) {\n      // We've hit the bottom fold, we need to insert a new row.\n      const newNode = this.fetchRowNode_(rowIndex);\n      if (!newNode) {\n        console.log(\"Couldn't fetch row index: \" + rowIndex);\n        break;\n      }\n\n      this.rowNodes_.insertBefore(newNode, node);\n      continue;\n    }\n\n    if (node.rowIndex == rowIndex) {\n      // This node is in the right place, move along.\n      node = node.nextSibling;\n      continue;\n    }\n\n    if (selectionStartRow && selectionStartRow.rowIndex == rowIndex) {\n      // The selection start row is supposed to be here, remove nodes until\n      // we find it.\n      removeUntilNode(node, selectionStartRow);\n      node = selectionStartRow.nextSibling;\n      continue;\n    }\n\n    if (selectionEndRow && selectionEndRow.rowIndex == rowIndex) {\n      // The selection end row is supposed to be here, remove nodes until\n      // we find it.\n      removeUntilNode(node, selectionEndRow);\n      node = selectionEndRow.nextSibling;\n      continue;\n    }\n\n    if (node == selectionStartRow || node == selectionEndRow) {\n      // We encountered the start/end of the selection, but we don't want it\n      // yet.  Insert a new row instead.\n      const newNode = this.fetchRowNode_(rowIndex);\n      if (!newNode) {\n        console.log(\"Couldn't fetch row index: \" + rowIndex);\n        break;\n      }\n\n      this.rowNodes_.insertBefore(newNode, node);\n      continue;\n    }\n\n    // There is nothing special about this node, but it's in our way.  Replace\n    // it with the node that should be here.\n    const newNode = this.fetchRowNode_(rowIndex);\n    if (!newNode) {\n      console.log(\"Couldn't fetch row index: \" + rowIndex);\n      break;\n    }\n\n    if (node == newNode) {\n      node = node.nextSibling;\n      continue;\n    }\n\n    this.rowNodes_.insertBefore(newNode, node);\n    this.rowNodes_.removeChild(node);\n    node = newNode.nextSibling;\n  }\n\n  if (node != this.bottomFold_) {\n    removeUntilNode(node, bottomFold);\n  }\n};\n\n/**\n * Ensure aria-hidden is set on any selection rows that are offscreen.\n *\n * The attribute aria-hidden is set to 'true' so that hidden rows are ignored\n * by screen readers.  We keep a list of currently hidden rows so they can be\n * reset each time this function is called as the selection and/or scrolling\n * may have changed.\n *\n * @param {number} topRowIndex Index of top row on screen.\n * @param {number} bottomRowIndex Index of bottom row on screen.\n */\nhterm.ScrollPort.prototype.ariaHideOffscreenSelectionRows_ = function(\n    topRowIndex, bottomRowIndex) {\n  // Reset previously hidden selection rows.\n  const hiddenRows = this.ariaHiddenSelectionRows_;\n  let row;\n  while ((row = hiddenRows.pop())) {\n    row.removeAttribute('aria-hidden');\n  }\n\n  function checkRow(row) {\n    if (row && (row.rowIndex < topRowIndex || row.rowIndex > bottomRowIndex)) {\n      row.setAttribute('aria-hidden', 'true');\n      hiddenRows.push(row);\n    }\n  }\n  checkRow(this.selection.startRow);\n  checkRow(this.selection.endRow);\n};\n\n/**\n * Empty out both select bags and remove them from the document.\n *\n * These nodes hold the text between the start and end of the selection\n * when that text is otherwise off screen.  They are filled out in the\n * onCopy_ event.\n */\nhterm.ScrollPort.prototype.resetSelectBags_ = function() {\n  if (this.topSelectBag_.parentNode) {\n    this.topSelectBag_.textContent = '';\n    this.topSelectBag_.remove();\n  }\n\n  if (this.bottomSelectBag_.parentNode) {\n    this.bottomSelectBag_.textContent = '';\n    this.bottomSelectBag_.remove();\n  }\n};\n\n/**\n * Place a row node in the cache of visible nodes.\n *\n * This method may only be used during a redraw_.\n *\n * @param {!Node} rowNode\n */\nhterm.ScrollPort.prototype.cacheRowNode_ = function(rowNode) {\n  this.currentRowNodeCache_[rowNode.rowIndex] = rowNode;\n};\n\n/**\n * Fetch the row node for the given index.\n *\n * This will return a node from the cache if possible, or will request one\n * from the RowProvider if not.\n *\n * If a redraw_ is in progress the row will be added to the current cache.\n *\n * @param {number} rowIndex\n * @return {!Node}\n */\nhterm.ScrollPort.prototype.fetchRowNode_ = function(rowIndex) {\n  let node;\n\n  if (this.previousRowNodeCache_ && rowIndex in this.previousRowNodeCache_) {\n    node = this.previousRowNodeCache_[rowIndex];\n  } else {\n    node = this.rowProvider_.getRowNode(rowIndex);\n  }\n\n  if (this.currentRowNodeCache_) {\n    this.cacheRowNode_(node);\n  }\n\n  return node;\n};\n\n/**\n * Select all rows in the terminal including scrollback.\n */\nhterm.ScrollPort.prototype.selectAll = function() {\n  let firstRow;\n\n  if (this.topFold_.nextSibling.rowIndex != 0) {\n    while (this.topFold_.previousSibling) {\n      this.topFold_.previousSibling.remove();\n    }\n\n    firstRow = this.fetchRowNode_(0);\n    this.rowNodes_.insertBefore(firstRow, this.topFold_);\n    this.syncRowNodesDimensions_();\n  } else {\n    firstRow = this.topFold_.nextSibling;\n  }\n\n  const lastRowIndex = this.rowProvider_.getRowCount() - 1;\n  let lastRow;\n\n  if (this.bottomFold_.previousSibling.rowIndex != lastRowIndex) {\n    while (this.bottomFold_.nextSibling) {\n      this.bottomFold_.nextSibling.remove();\n    }\n\n    lastRow = this.fetchRowNode_(lastRowIndex);\n    this.rowNodes_.appendChild(lastRow);\n  } else {\n    lastRow = this.bottomFold_.previousSibling;\n  }\n\n  let focusNode = lastRow;\n  while (focusNode.lastChild) {\n    focusNode = focusNode.lastChild;\n  }\n\n  const selection = this.document_.getSelection();\n  selection.collapse(firstRow, 0);\n  selection.extend(focusNode, focusNode.length || 0);\n\n  this.selection.sync();\n};\n\n/**\n * Return the maximum scroll position in pixels.\n *\n * @return {number}\n */\nhterm.ScrollPort.prototype.getScrollMax_ = function() {\n  return this.scrollArea_.getBoundingClientRect().height +\n         this.visibleRowTopMargin + this.visibleRowBottomMargin -\n         this.screen_.getBoundingClientRect().height;\n};\n\n/**\n * Scroll the given rowIndex to the top of the hterm.ScrollPort.\n *\n * @param {number} rowIndex Index of the target row.\n */\nhterm.ScrollPort.prototype.scrollRowToTop = function(rowIndex) {\n  // Other scrollRowTo* functions and scrollLineUp could pass rowIndex < 0.\n  if (rowIndex < 0) {\n    rowIndex = 0;\n  }\n\n  this.syncScrollHeight();\n\n  this.isScrolledEnd = (\n    rowIndex + this.visibleRowCount >= this.lastRowCount_);\n\n  let scrollTop = rowIndex * this.characterSize.height +\n      this.visibleRowTopMargin;\n\n  const scrollMax = this.getScrollMax_();\n  if (scrollTop > scrollMax) {\n    scrollTop = scrollMax;\n  }\n\n  if (this.screen_.scrollTop == scrollTop) {\n    return;\n  }\n\n  this.screen_.scrollTop = scrollTop;\n  this.scheduleRedraw();\n};\n\n/**\n * Scroll the given rowIndex to the bottom of the hterm.ScrollPort.\n *\n * @param {number} rowIndex Index of the target row.\n */\nhterm.ScrollPort.prototype.scrollRowToBottom = function(rowIndex) {\n  this.scrollRowToTop(rowIndex - this.visibleRowCount);\n};\n\n/**\n * Scroll the given rowIndex to the middle of the hterm.ScrollPort.\n *\n * @param {number} rowIndex Index of the target row.\n */\nhterm.ScrollPort.prototype.scrollRowToMiddle = function(rowIndex) {\n  this.scrollRowToTop(rowIndex - Math.floor(this.visibleRowCount / 2));\n};\n\n/**\n * Return the row index of the first visible row.\n *\n * This is based on the scroll position.  If a redraw_ is in progress this\n * returns the row that *should* be at the top.\n *\n * @return {number}\n */\nhterm.ScrollPort.prototype.getTopRowIndex = function() {\n  return Math.round(this.screen_.scrollTop / this.characterSize.height);\n};\n\n/**\n * Return the row index of the last visible row.\n *\n * This is based on the scroll position.  If a redraw_ is in progress this\n * returns the row that *should* be at the bottom.\n *\n * @param {number} topRowIndex\n * @return {number}\n */\nhterm.ScrollPort.prototype.getBottomRowIndex = function(topRowIndex) {\n  return topRowIndex + this.visibleRowCount - 1;\n};\n\n/**\n * Handler for scroll events.\n *\n * The onScroll event fires when scrollArea's scrollTop property changes.  This\n * may be due to the user manually move the scrollbar, or a programmatic change.\n *\n * @param {!Event} e\n */\nhterm.ScrollPort.prototype.onScroll_ = function(e) {\n  const screenSize = this.getScreenSize();\n  if (screenSize.width != this.lastScreenWidth_ ||\n      screenSize.height != this.lastScreenHeight_) {\n    // This event may also fire during a resize (but before the resize event!).\n    // This happens when the browser moves the scrollbar as part of the resize.\n    // In these cases, we want to ignore the scroll event and let onResize\n    // handle things.  If we don't, then we end up scrolling to the wrong\n    // position after a resize.\n    this.resize();\n    return;\n  }\n\n  this.redraw_();\n  this.publish('scroll', {scrollPort: this});\n};\n\n/**\n * Clients can override this if they want to hear scrollwheel events.\n *\n * Clients may call event.preventDefault() if they want to keep the scrollport\n * from also handling the events.\n *\n * @param {!WheelEvent} e\n */\nhterm.ScrollPort.prototype.onScrollWheel = function(e) {};\n\n/**\n * Handler for scroll-wheel events.\n *\n * The onScrollWheel event fires when the user moves their scrollwheel over this\n * hterm.ScrollPort.  Because the frontmost element in the hterm.ScrollPort is\n * a fixed position DIV, the scroll wheel does nothing by default.  Instead, we\n * have to handle it manually.\n *\n * @param {!WheelEvent} e\n */\nhterm.ScrollPort.prototype.onScrollWheel_ = function(e) {\n  this.onScrollWheel(e);\n\n  if (e.defaultPrevented) {\n    return;\n  }\n\n  // Figure out how far this event wants us to scroll.\n  const delta = this.scrollWheelDelta(e);\n\n  let top = this.screen_.scrollTop - delta.y;\n  if (top < 0) {\n    top = 0;\n  }\n\n  const scrollMax = this.getScrollMax_();\n  if (top > scrollMax) {\n    top = scrollMax;\n  }\n\n  if (top != this.screen_.scrollTop) {\n    // Moving scrollTop causes a scroll event, which triggers the redraw.\n    this.screen_.scrollTop = top;\n\n    // Only preventDefault when we've actually scrolled.  If there's nothing\n    // to scroll we want to pass the event through so Chrome can detect the\n    // overscroll.\n    e.preventDefault();\n  } else if (e.ctrlKey) {\n    // Holding Contrl while scrolling will trigger zoom events.  Defeat them!\n    // Touchpad pinches also hit here via fake events.  https://crbug.com/289887\n    e.preventDefault();\n  }\n};\n\n/**\n * Calculate how far a wheel event should scroll.\n *\n * This normalizes the browser's concept of a scroll (pixels, lines, etc...)\n * into a standard pixel distance.\n *\n * @param {!WheelEvent} e The mouse wheel event to process.\n * @return {{x:number, y:number}} The x & y of how far (in pixels) to scroll.\n */\nhterm.ScrollPort.prototype.scrollWheelDelta = function(e) {\n  const delta = {x: 0, y: 0};\n\n  switch (e.deltaMode) {\n    case WheelEvent.DOM_DELTA_PIXEL:\n      delta.x = e.deltaX * this.scrollWheelMultiplier_;\n      delta.y = e.deltaY * this.scrollWheelMultiplier_;\n      break;\n    case WheelEvent.DOM_DELTA_LINE:\n      delta.x = e.deltaX * this.characterSize.width;\n      delta.y = e.deltaY * this.characterSize.height;\n      break;\n    case WheelEvent.DOM_DELTA_PAGE: {\n      const {width, height} = this.screen_.getBoundingClientRect();\n      delta.x = e.deltaX * this.characterSize.width * width;\n      delta.y = e.deltaY * this.characterSize.height * height;\n      break;\n    }\n  }\n\n  // The Y sign is inverted from what we would expect: up/down are\n  // negative/positive respectively.  The X sign is sane though: left/right\n  // are negative/positive respectively.\n  delta.y *= -1;\n\n  return delta;\n};\n\n/**\n * Clients can override this if they want to hear touch events.\n *\n * Clients may call event.preventDefault() if they want to keep the scrollport\n * from also handling the events.\n *\n * @param {!TouchEvent} e\n */\nhterm.ScrollPort.prototype.onTouch = function(e) {};\n\n/**\n * Handler for touch events.\n *\n * @param {!TouchEvent} e\n */\nhterm.ScrollPort.prototype.onTouch_ = function(e) {\n  this.onTouch(e);\n\n  if (e.defaultPrevented) {\n    return;\n  }\n\n  // Extract the fields from the Touch event that we need.  If we saved the\n  // event directly, it has references to other objects (like x-row) that\n  // might stick around for a long time.  This way we only have small objects\n  // in our lastTouch_ state.\n  const scrubTouch = function(t) {\n    return {\n      id: t.identifier,\n      y: t.clientY,\n      x: t.clientX,\n    };\n  };\n\n  let i, touch;\n  switch (e.type) {\n    case 'touchstart':\n      // Workaround focus bug on CrOS if possible.\n      // TODO(vapier): Drop this once https://crbug.com/919222 is fixed.\n      if (hterm.os == 'cros' && window.chrome && chrome.windows) {\n        chrome.windows.getCurrent((win) => {\n          if (!win.focused) {\n            chrome.windows.update(win.id, {focused: true});\n          }\n        });\n      }\n\n      // Save the current set of touches.\n      for (i = 0; i < e.changedTouches.length; ++i) {\n        touch = scrubTouch(e.changedTouches[i]);\n        this.lastTouch_[touch.id] = touch;\n      }\n      break;\n\n    case 'touchcancel':\n    case 'touchend':\n      // Throw away existing touches that we're finished with.\n      for (i = 0; i < e.changedTouches.length; ++i) {\n        delete this.lastTouch_[e.changedTouches[i].identifier];\n      }\n      break;\n\n    case 'touchmove': {\n      // Walk all of the touches in this one event and merge all of their\n      // changes into one delta.  This lets multiple fingers scroll faster.\n      let delta = 0;\n      for (i = 0; i < e.changedTouches.length; ++i) {\n        touch = scrubTouch(e.changedTouches[i]);\n        delta += (this.lastTouch_[touch.id].y - touch.y);\n        this.lastTouch_[touch.id] = touch;\n      }\n\n      // Invert to match the touchscreen scrolling direction of browser windows.\n      delta *= -1;\n\n      let top = this.screen_.scrollTop - delta;\n      if (top < 0) {\n        top = 0;\n      }\n\n      const scrollMax = this.getScrollMax_();\n      if (top > scrollMax) {\n        top = scrollMax;\n      }\n\n      if (top != this.screen_.scrollTop) {\n        // Moving scrollTop causes a scroll event, which triggers the redraw.\n        this.screen_.scrollTop = top;\n      }\n      break;\n    }\n  }\n\n  // To disable gestures or anything else interfering with our scrolling.\n  e.preventDefault();\n};\n\n/**\n * Handler for resize events.\n *\n * The browser will resize us such that the top row stays at the top, but we\n * prefer to the bottom row to stay at the bottom.\n *\n * @param {!FocusEvent} e\n */\nhterm.ScrollPort.prototype.onResize_ = function(e) {\n  // Re-measure, since onResize also happens for browser zoom changes.\n  this.syncCharacterSize();\n};\n\n/**\n * Clients can override this if they want to hear copy events.\n *\n * Clients may call event.preventDefault() if they want to keep the scrollport\n * from also handling the events.\n *\n * @param {!ClipboardEvent} e\n */\nhterm.ScrollPort.prototype.onCopy = function(e) { };\n\n/**\n * Handler for copy-to-clipboard events.\n *\n * If some or all of the selected rows are off screen we may need to fill in\n * the rows between selection start and selection end.  This handler determines\n * if we're missing some of the selected text, and if so populates one or both\n * of the \"select bags\" with the missing text.\n *\n * @param {!ClipboardEvent} e\n */\nhterm.ScrollPort.prototype.onCopy_ = function(e) {\n  this.onCopy(e);\n\n  if (e.defaultPrevented) {\n    return;\n  }\n\n  this.resetSelectBags_();\n  this.selection.sync();\n\n  if (this.selection.isCollapsed ||\n      this.selection.endRow.rowIndex - this.selection.startRow.rowIndex < 2) {\n    return;\n  }\n\n  const topRowIndex = this.getTopRowIndex();\n  const bottomRowIndex = this.getBottomRowIndex(topRowIndex);\n\n  if (this.selection.startRow.rowIndex < topRowIndex) {\n    // Start of selection is above the top fold.\n    let endBackfillIndex;\n\n    if (this.selection.endRow.rowIndex < topRowIndex) {\n      // Entire selection is above the top fold.\n      endBackfillIndex = this.selection.endRow.rowIndex;\n    } else {\n      // Selection extends below the top fold.\n      endBackfillIndex = this.topFold_.nextSibling.rowIndex;\n    }\n\n    this.topSelectBag_.textContent = this.rowProvider_.getRowsText(\n        this.selection.startRow.rowIndex + 1, endBackfillIndex);\n    this.rowNodes_.insertBefore(this.topSelectBag_,\n                                this.selection.startRow.nextSibling);\n    this.syncRowNodesDimensions_();\n  }\n\n  if (this.selection.endRow.rowIndex > bottomRowIndex) {\n    // Selection ends below the bottom fold.\n    let startBackfillIndex;\n\n    if (this.selection.startRow.rowIndex > bottomRowIndex) {\n      // Entire selection is below the bottom fold.\n      startBackfillIndex = this.selection.startRow.rowIndex + 1;\n    } else {\n      // Selection starts above the bottom fold.\n      startBackfillIndex = this.bottomFold_.previousSibling.rowIndex + 1;\n    }\n\n    this.bottomSelectBag_.textContent = this.rowProvider_.getRowsText(\n        startBackfillIndex, this.selection.endRow.rowIndex);\n    this.rowNodes_.insertBefore(this.bottomSelectBag_, this.selection.endRow);\n  }\n};\n\n/**\n * Focuses on the paste target on a ctrl-v keydown event, as in\n * FF a content editable element must be focused before the paste event.\n *\n * @param {!KeyboardEvent} e\n */\nhterm.ScrollPort.prototype.onBodyKeyDown_ = function(e) {\n  if (!this.ctrlVPaste) {\n    return;\n  }\n\n  if ((e.ctrlKey || e.metaKey) && e.keyCode == 86 /* 'V' */) {\n    this.pasteTarget_.focus();\n  }\n};\n\n/**\n * Handle a paste event on the the ScrollPort's screen element.\n *\n * TODO: Handle ClipboardData.files transfers.  https://crbug.com/433581.\n *\n * @param {!ClipboardEvent} e\n */\nhterm.ScrollPort.prototype.onPaste_ = function(e) {\n  this.pasteTarget_.focus();\n\n  setTimeout(() => {\n    this.publish('paste', {text: this.pasteTarget_.value});\n    this.pasteTarget_.value = '';\n    this.focus();\n  });\n};\n\n/**\n * Handles a textInput event on the paste target. Stops this from\n * propagating as we want this to be handled in the onPaste_ method.\n *\n * @param {!Event} e\n */\nhterm.ScrollPort.prototype.handlePasteTargetTextInput_ = function(e) {\n  e.stopPropagation();\n};\n\n/**\n * Handle a drop event on the the ScrollPort's screen element.\n *\n * By default we try to copy in the structured format (HTML/whatever).\n * The shift key can select plain text though.\n *\n * TODO: Handle DataTransfer.files transfers.  https://crbug.com/433581.\n *\n * @param {!DragEvent} e The drag event that fired us.\n */\nhterm.ScrollPort.prototype.onDragAndDrop_ = function(e) {\n  if (!this.pasteOnDrop) {\n    return;\n  }\n\n  e.preventDefault();\n\n  let data;\n  let format;\n\n  // If the shift key active, try to find a \"rich\" text source (but not plain\n  // text).  e.g. text/html is OK.\n  if (e.shiftKey) {\n    e.dataTransfer.types.forEach((t) => {\n      if (!format && t != 'text/plain' && t.startsWith('text/')) {\n        format = t;\n      }\n    });\n\n    // If we found a non-plain text source, try it out first.\n    if (format) {\n      data = e.dataTransfer.getData(format);\n    }\n  }\n\n  // If we haven't loaded anything useful, fall back to plain text.\n  if (!data) {\n    data = e.dataTransfer.getData('text/plain');\n  }\n\n  if (data) {\n    this.publish('paste', {text: data});\n  }\n};\n\n/**\n * Set the vertical scrollbar mode of the ScrollPort.\n *\n * @param {boolean} state\n */\nhterm.ScrollPort.prototype.setScrollbarVisible = function(state) {\n  if (state) {\n    this.screen_.style.overflowY = 'scroll';\n    this.currentScrollbarWidthPx = hterm.ScrollPort.DEFAULT_SCROLLBAR_WIDTH;\n    this.syncScrollbarWidth_();\n  } else {\n    this.screen_.style.overflowY = 'hidden';\n    this.currentScrollbarWidthPx = 0;\n  }\n};\n\n/**\n * Set scroll wheel multiplier. This alters how much the screen scrolls on\n * mouse wheel events.\n *\n * @param {number} multiplier\n */\nhterm.ScrollPort.prototype.setScrollWheelMoveMultipler = function(multiplier) {\n  this.scrollWheelMultiplier_ = multiplier;\n};\n// SOURCE FILE: hterm/js/hterm_terminal.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Constructor for the Terminal class.\n *\n * A Terminal pulls together the hterm.ScrollPort, hterm.Screen and hterm.VT100\n * classes to provide the complete terminal functionality.\n *\n * There are a number of lower-level Terminal methods that can be called\n * directly to manipulate the cursor, text, scroll region, and other terminal\n * attributes.  However, the primary method is interpret(), which parses VT\n * escape sequences and invokes the appropriate Terminal methods.\n *\n * This class was heavily influenced by Cory Maccarrone's Framebuffer class.\n *\n * TODO(rginda): Eventually we're going to need to support characters which are\n * displayed twice as wide as standard latin characters.  This is to support\n * CJK (and possibly other character sets).\n *\n * @param {{\n *   profileId: (?string|undefined),\n * }=} options Various settings to control behavior.\n *     profileId: The preference profile name.  Defaults to \"default\".\n * @constructor\n * @implements {hterm.RowProvider}\n */\nhterm.Terminal = function({profileId} = {}) {\n  // Set to true once terminal is initialized and onTerminalReady() is called.\n  this.ready_ = false;\n\n  this.profileId_ = null;\n\n  /** @type {?hterm.PreferenceManager} */\n  this.prefs_ = null;\n\n  // Two screen instances.\n  this.primaryScreen_ = new hterm.Screen();\n  this.alternateScreen_ = new hterm.Screen();\n\n  // The \"current\" screen.\n  this.screen_ = this.primaryScreen_;\n\n  // The local notion of the screen size.  ScreenBuffers also have a size which\n  // indicates their present size.  During size changes, the two may disagree.\n  // Also, the inactive screen's size is not altered until it is made the active\n  // screen.\n  this.screenSize = new hterm.Size(0, 0);\n\n  // The scroll port we'll be using to display the visible rows.\n  this.scrollPort_ = new hterm.ScrollPort(this);\n  this.scrollPort_.subscribe('resize', this.onResize_.bind(this));\n  this.scrollPort_.subscribe('scroll', this.onScroll_.bind(this));\n  this.scrollPort_.subscribe('paste', this.onPaste_.bind(this));\n  this.scrollPort_.subscribe('focus', this.onScrollportFocus_.bind(this));\n  this.scrollPort_.subscribe('options', this.onOpenOptionsPage_.bind(this));\n  this.scrollPort_.onCopy = this.onCopy_.bind(this);\n\n  // The div that contains this terminal.\n  this.div_ = null;\n\n  // UI for showing info to the user in a privileged way.\n  this.notifications_ = null;\n\n  // The document that contains the scrollPort.  Defaulted to the global\n  // document here so that the terminal is functional even if it hasn't been\n  // inserted into a document yet, but re-set in decorate().\n  this.document_ = window.document;\n\n  // The rows that have scrolled off screen and are no longer addressable.\n  this.scrollbackRows_ = [];\n\n  // Saved tab stops.\n  this.tabStops_ = [];\n\n  // Keep track of whether default tab stops have been erased; after a TBC\n  // clears all tab stops, defaults aren't restored on resize until a reset.\n  this.defaultTabStops = true;\n\n  // The VT's notion of the top and bottom rows.  Used during some VT\n  // cursor positioning and scrolling commands.\n  this.vtScrollTop_ = null;\n  this.vtScrollBottom_ = null;\n\n  // The DIV element for the visible cursor.\n  this.cursorNode_ = null;\n\n  // The current cursor shape of the terminal.\n  this.cursorShape_ = hterm.Terminal.cursorShape.BLOCK;\n\n  // Cursor blink on/off cycle in ms, overwritten by prefs once they're loaded.\n  this.cursorBlinkCycle_ = [100, 100];\n\n  // Whether to temporarily disable blinking.\n  this.cursorBlinkPause_ = false;\n\n  // Cursor is hidden when scrolling up pushes it off the bottom of the screen.\n  this.cursorOffScreen_ = false;\n\n  // Pre-bound onCursorBlink_ handler, so we don't have to do this for each\n  // cursor on/off servicing.\n  this.myOnCursorBlink_ = this.onCursorBlink_.bind(this);\n\n  // These prefs are cached so we don't have to read from local storage with\n  // each output and keystroke.  They are initialized by the preference manager.\n  /** @type {?string} */\n  this.backgroundColor_ = null;\n  /** @type {?string} */\n  this.foregroundColor_ = null;\n\n  /** @type {!Map<number, string>} */\n  this.colorPaletteOverrides_ = new Map();\n\n  this.screenBorderSize_ = 0;\n\n  this.scrollOnOutput_ = null;\n  this.scrollOnKeystroke_ = null;\n  this.scrollWheelArrowKeys_ = null;\n\n  // True if we should override mouse event reporting to allow local selection.\n  this.defeatMouseReports_ = false;\n\n  // Whether to auto hide the mouse cursor when typing.\n  this.setAutomaticMouseHiding();\n  // Timer to keep mouse visible while it's being used.\n  this.mouseHideDelay_ = null;\n\n  // Terminal bell sound.\n  this.bellAudio_ = this.document_.createElement('audio');\n  this.bellAudio_.id = 'hterm:bell-audio';\n  this.bellAudio_.setAttribute('preload', 'auto');\n\n  // The AccessibilityReader object for announcing command output.\n  this.accessibilityReader_ = null;\n\n  // The context menu object.\n  this.contextMenu = new hterm.ContextMenu();\n\n  // All terminal bell notifications that have been generated (not necessarily\n  // shown).\n  this.bellNotificationList_ = [];\n  this.bellSquelchTimeout_ = null;\n\n  // Whether we have permission to display notifications.\n  this.desktopNotificationBell_ = false;\n\n  // Cursor position and attributes saved with DECSC.\n  this.savedOptions_ = {};\n\n  // The current mode bits for the terminal.\n  this.options_ = new hterm.Options();\n\n  // Timeouts we might need to clear.\n  this.timeouts_ = {};\n\n  // The VT escape sequence interpreter.\n  this.vt = new hterm.VT(this);\n\n  this.saveCursorAndState(true);\n\n  // The keyboard handler.\n  this.keyboard = new hterm.Keyboard(this);\n\n  // General IO interface that can be given to third parties without exposing\n  // the entire terminal object.\n  this.io = new hterm.Terminal.IO(this);\n\n  // True if mouse-click-drag should scroll the terminal.\n  this.enableMouseDragScroll = true;\n\n  this.copyOnSelect = null;\n  this.mouseRightClickPaste = null;\n  this.mousePasteButton = null;\n\n  // Whether to use the default window copy behavior.\n  this.useDefaultWindowCopy = false;\n\n  this.clearSelectionAfterCopy = true;\n\n  this.realizeSize_(80, 24);\n  this.setDefaultTabStops();\n\n  // Whether we allow images to be shown.\n  this.allowImagesInline = null;\n\n  this.reportFocus = false;\n\n  // TODO(crbug.com/1063219) Remove this once the bug is fixed.\n  this.alwaysUseLegacyPasting = false;\n\n  this.setProfile(profileId || hterm.Terminal.DEFAULT_PROFILE_ID,\n                  function() { this.onTerminalReady(); }.bind(this));\n\n  /** @const */\n  this.findBar = new hterm.FindBar(this);\n};\n\n/**\n * Default Profile ID.\n *\n * @const {string}\n */\nhterm.Terminal.DEFAULT_PROFILE_ID = 'default';\n\n/**\n * Possible cursor shapes.\n */\nhterm.Terminal.cursorShape = {\n  BLOCK: 'BLOCK',\n  BEAM: 'BEAM',\n  UNDERLINE: 'UNDERLINE',\n};\n\n/**\n * Clients should override this to be notified when the terminal is ready\n * for use.\n *\n * The terminal initialization is asynchronous, and shouldn't be used before\n * this method is called.\n */\nhterm.Terminal.prototype.onTerminalReady = function() { };\n\n/**\n * Default tab with of 8 to match xterm.\n */\nhterm.Terminal.prototype.tabWidth = 8;\n\n/**\n * Select a preference profile.\n *\n * This will load the terminal preferences for the given profile name and\n * associate subsequent preference changes with the new preference profile.\n *\n * @param {string} profileId The name of the preference profile.  Forward slash\n *     characters will be removed from the name.\n * @param {function()=} callback Optional callback to invoke when the\n *     profile transition is complete.\n */\nhterm.Terminal.prototype.setProfile = function(\n    profileId, callback = undefined) {\n  profileId = profileId.replace(/\\//g, '');\n  if (this.profileId_ === profileId) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n\n  this.profileId_ = profileId;\n\n  if (this.prefs_) {\n    this.prefs_.deactivate();\n  }\n\n  this.prefs_ = new hterm.PreferenceManager(this.profileId_);\n\n  /**\n   * Clears and reloads key bindings.  Used by preferences\n   * 'keybindings' and 'keybindings-os-defaults'.\n   *\n   * @param {*?=} bindings\n   * @param {*?=} useOsDefaults\n   */\n  const loadKeyBindings = (bindings = null, useOsDefaults = false) => {\n    this.keyboard.bindings.clear();\n\n    // Default to an empty object so we still handle OS defaults.\n    if (bindings === null) {\n      bindings = {};\n    }\n\n    if (!(bindings instanceof Object)) {\n      console.error('Error in keybindings preference: Expected object');\n      bindings = {};\n      // Fall through to handle OS defaults.\n    }\n\n    try {\n      this.keyboard.bindings.addBindings(bindings, !!useOsDefaults);\n    } catch (ex) {\n      console.error('Error in keybindings preference: ' + ex);\n    }\n  };\n\n  this.prefs_.addObservers(null, {\n    'alt-gr-mode': (v) => {\n      if (v == null) {\n        if (navigator.language.toLowerCase() == 'en-us') {\n          v = 'none';\n        } else {\n          v = 'right-alt';\n        }\n      } else if (typeof v == 'string') {\n        v = v.toLowerCase();\n      } else {\n        v = 'none';\n      }\n\n      if (!/^(none|ctrl-alt|left-alt|right-alt)$/.test(v)) {\n        v = 'none';\n      }\n\n      this.keyboard.altGrMode = v;\n    },\n\n    'alt-backspace-is-meta-backspace': (v) => {\n      this.keyboard.altBackspaceIsMetaBackspace = v;\n    },\n\n    'alt-is-meta': (v) => {\n      this.keyboard.altIsMeta = v;\n    },\n\n    'alt-sends-what': (v) => {\n      if (!/^(escape|8-bit|browser-key)$/.test(v)) {\n        v = 'escape';\n      }\n\n      this.keyboard.altSendsWhat = v;\n    },\n\n    'audible-bell-sound': (v) => {\n      const ary = v.match(/^lib-resource:(\\S+)/);\n      if (ary) {\n        const name = ary[1];\n        if (lib.resource.get(name) === undefined) {\n          console.warn(`Invalid resource name '${name}'`);\n          this.prefs_.reset('audible-bell-sound');\n          return;\n        }\n        this.bellAudio_.setAttribute('src', lib.resource.getDataUrl(name));\n      } else {\n        this.bellAudio_.setAttribute('src', v);\n      }\n    },\n\n    'desktop-notification-bell': (v) => {\n      if (v && Notification) {\n        this.desktopNotificationBell_ = Notification.permission === 'granted';\n        if (!this.desktopNotificationBell_) {\n          // Note: We don't call Notification.requestPermission here because\n          // Chrome requires the call be the result of a user action (such as an\n          // onclick handler), and pref listeners are run asynchronously.\n          //\n          // A way of working around this would be to display a dialog in the\n          // terminal with a \"click-to-request-permission\" button.\n          console.warn('desktop-notification-bell is true but we do not have ' +\n                       'permission to display notifications.');\n        }\n      } else {\n        this.desktopNotificationBell_ = false;\n      }\n    },\n\n    'background-color': (v) => {\n      this.setBackgroundColor(v);\n    },\n\n    'background-image': (v) => {\n      this.scrollPort_.setBackgroundImage(v);\n    },\n\n    'background-size': (v) => {\n      this.scrollPort_.setBackgroundSize(v);\n    },\n\n    'background-position': (v) => {\n      this.scrollPort_.setBackgroundPosition(v);\n    },\n\n    'backspace-sends-backspace': (v) => {\n      this.keyboard.backspaceSendsBackspace = v;\n    },\n\n    'character-map-overrides': (v) => {\n      if (!(v == null || v instanceof Object)) {\n        console.warn('Preference character-map-modifications is not an ' +\n                     'object: ' + v);\n        return;\n      }\n\n      this.vt.characterMaps.reset();\n      this.vt.characterMaps.setOverrides(v);\n    },\n\n    'cursor-blink': (v) => {\n      this.setCursorBlink(!!v);\n    },\n\n    'cursor-shape': (v) => {\n      this.setCursorShape(v);\n    },\n\n    'cursor-blink-cycle': (v) => {\n        if (v instanceof Array &&\n            typeof v[0] == 'number' &&\n            typeof v[1] == 'number') {\n          this.cursorBlinkCycle_ = v;\n        } else if (typeof v == 'number') {\n          this.cursorBlinkCycle_ = [v, v];\n        } else {\n          // Fast blink indicates an error.\n          this.cursorBlinkCycle_ = [100, 100];\n        }\n    },\n\n    'cursor-color': (v) => {\n      this.setCursorColor(v);\n    },\n\n    'color-palette-overrides': (v) => {\n      if (!(v == null || v instanceof Object || v instanceof Array)) {\n        console.warn('Preference color-palette-overrides is not an array or ' +\n                     'object: ' + v);\n        return;\n      }\n\n      // Reset all existing colors first as the new palette override might not\n      // have the same mappings.  If the old one set colors the new one doesn't,\n      // those old mappings have to get cleared first.\n      lib.colors.stockPalette.forEach((c, i) => this.setColorPalette(i, c));\n      this.colorPaletteOverrides_.clear();\n\n      if (v) {\n        for (const key in v) {\n          const i = parseInt(key, 10);\n          if (isNaN(i) || i < 0 || i > 255) {\n            console.log('Invalid value in palette: ' + key + ': ' + v[key]);\n            continue;\n          }\n\n          if (v[i]) {\n            const rgb = lib.colors.normalizeCSS(v[i]);\n            if (rgb) {\n              this.setColorPalette(i, rgb);\n              this.colorPaletteOverrides_.set(i, rgb);\n            }\n          }\n        }\n      }\n\n      this.primaryScreen_.textAttributes.colorPaletteOverrides = [];\n      this.alternateScreen_.textAttributes.colorPaletteOverrides = [];\n    },\n\n    'copy-on-select': (v) => {\n      this.copyOnSelect = !!v;\n    },\n\n    'use-default-window-copy': (v) => {\n      this.useDefaultWindowCopy = !!v;\n    },\n\n    'clear-selection-after-copy': (v) => {\n      this.clearSelectionAfterCopy = !!v;\n    },\n\n    'ctrl-plus-minus-zero-zoom': (v) => {\n      this.keyboard.ctrlPlusMinusZeroZoom = v;\n    },\n\n    'ctrl-c-copy': (v) => {\n      this.keyboard.ctrlCCopy = v;\n    },\n\n    'ctrl-v-paste': (v) => {\n      this.keyboard.ctrlVPaste = v;\n      this.scrollPort_.setCtrlVPaste(v);\n    },\n\n    'paste-on-drop': (v) => {\n      this.scrollPort_.setPasteOnDrop(v);\n    },\n\n    'east-asian-ambiguous-as-two-column': (v) => {\n      lib.wc.regardCjkAmbiguous = v;\n    },\n\n    'enable-8-bit-control': (v) => {\n      this.vt.enable8BitControl = !!v;\n    },\n\n    'enable-bold': (v) => {\n      this.syncBoldSafeState();\n    },\n\n    'enable-bold-as-bright': (v) => {\n      this.primaryScreen_.textAttributes.enableBoldAsBright = !!v;\n      this.alternateScreen_.textAttributes.enableBoldAsBright = !!v;\n    },\n\n    'enable-blink': (v) => {\n      this.setTextBlink(!!v);\n    },\n\n    'enable-clipboard-write': (v) => {\n      this.vt.enableClipboardWrite = !!v;\n    },\n\n    'enable-dec12': (v) => {\n      this.vt.enableDec12 = !!v;\n    },\n\n    'enable-csi-j-3': (v) => {\n      this.vt.enableCsiJ3 = !!v;\n    },\n\n    'find-result-color': (v) => {\n      this.findBar.setFindResultColor(v);\n    },\n\n    'find-result-selected-color': (v) => {\n      this.findBar.setFindResultSelectedColor(v);\n    },\n\n    'font-family': (v) => {\n      this.syncFontFamily();\n    },\n\n    'font-size': (v) => {\n      v = parseInt(v, 10);\n      if (isNaN(v) || v <= 0) {\n        console.error(`Invalid font size: ${v}`);\n        return;\n      }\n\n      this.setFontSize(v);\n    },\n\n    'font-smoothing': (v) => {\n      this.syncFontFamily();\n    },\n\n    'foreground-color': (v) => {\n      this.setForegroundColor(v);\n    },\n\n    'hide-mouse-while-typing': (v) => {\n      this.setAutomaticMouseHiding(v);\n    },\n\n    'home-keys-scroll': (v) => {\n      this.keyboard.homeKeysScroll = v;\n    },\n\n    'keybindings': (v) => {\n      loadKeyBindings(v, this.prefs_.get('keybindings-os-defaults'));\n    },\n\n    'keybindings-os-defaults': (v) => {\n      loadKeyBindings(this.prefs_.get('keybindings'), v);\n    },\n\n    'line-height-padding-size': (v) => {\n      v = parseFloat(v);\n      if (isNaN(v)) {\n        console.error(`Invalid line height padding size: ${v}`);\n        return;\n      }\n      this.setLineHeightPaddingSize(v);\n    },\n\n    'media-keys-are-fkeys': (v) => {\n      this.keyboard.mediaKeysAreFKeys = v;\n    },\n\n    'meta-sends-escape': (v) => {\n      this.keyboard.metaSendsEscape = v;\n    },\n\n    'mouse-right-click-paste': (v) => {\n      this.mouseRightClickPaste = v;\n    },\n\n    'mouse-paste-button': (v) => {\n      this.syncMousePasteButton();\n    },\n\n    'page-keys-scroll': (v) => {\n      this.keyboard.pageKeysScroll = v;\n    },\n\n    'pass-alt-number': (v) => {\n      if (v == null) {\n        // Let Alt+1..9 pass to the browser (to control tab switching) on\n        // non-OS X systems, or if hterm is not opened in an app window.\n        v = (hterm.os !== 'mac' &&\n             hterm.windowType !== 'popup' &&\n             hterm.windowType !== 'app');\n      }\n\n      this.passAltNumber = v;\n    },\n\n    'pass-ctrl-number': (v) => {\n      if (v == null) {\n        // Let Ctrl+1..9 pass to the browser (to control tab switching) on\n        // non-OS X systems, or if hterm is not opened in an app window.\n        v = (hterm.os !== 'mac' &&\n             hterm.windowType !== 'popup' &&\n             hterm.windowType !== 'app');\n      }\n\n      this.passCtrlNumber = v;\n    },\n\n    'pass-ctrl-n': (v) => {\n      this.passCtrlN = v;\n    },\n\n    'pass-ctrl-t': (v) => {\n      this.passCtrlT = v;\n    },\n\n    'pass-ctrl-tab': (v) => {\n      this.passCtrlTab = v;\n    },\n\n    'pass-ctrl-w': (v) => {\n      this.passCtrlW = v;\n    },\n\n    'pass-meta-number': (v) => {\n      if (v == null) {\n        // Let Meta+1..9 pass to the browser (to control tab switching) on\n        // OS X systems, or if hterm is not opened in an app window.\n        v = (hterm.os === 'mac' &&\n             hterm.windowType !== 'popup' &&\n             hterm.windowType !== 'app');\n      }\n\n      this.passMetaNumber = v;\n    },\n\n    'pass-meta-v': (v) => {\n      this.keyboard.passMetaV = v;\n    },\n\n    'screen-padding-size': (v) => {\n      v = parseInt(v, 10);\n      if (isNaN(v) || v < 0) {\n        console.error(`Invalid screen padding size: ${v}`);\n        return;\n      }\n      this.setScreenPaddingSize(v);\n    },\n\n    'screen-border-size': (v) => {\n      v = parseInt(v, 10);\n      if (isNaN(v) || v < 0) {\n        console.error(`Invalid screen border size: ${v}`);\n        return;\n      }\n      this.setScreenBorderSize(v);\n    },\n\n    'screen-border-color': (v) => {\n      this.div_.style.borderColor = v;\n    },\n\n    'scroll-on-keystroke': (v) => {\n      this.scrollOnKeystroke_ = v;\n    },\n\n    'scroll-on-output': (v) => {\n      this.scrollOnOutput_ = v;\n    },\n\n    'scrollbar-visible': (v) => {\n      this.setScrollbarVisible(v);\n    },\n\n    'scroll-wheel-may-send-arrow-keys': (v) => {\n      this.scrollWheelArrowKeys_ = v;\n    },\n\n    'scroll-wheel-move-multiplier': (v) => {\n      this.setScrollWheelMoveMultipler(v);\n    },\n\n    'shift-insert-paste': (v) => {\n      this.keyboard.shiftInsertPaste = v;\n    },\n\n    'terminal-encoding': (v) => {\n      this.vt.setEncoding(v);\n    },\n\n    'user-css': (v) => {\n      this.scrollPort_.setUserCssUrl(v);\n    },\n\n    'user-css-text': (v) => {\n      this.scrollPort_.setUserCssText(v);\n    },\n\n    'word-break-match-left': (v) => {\n      this.primaryScreen_.wordBreakMatchLeft = v;\n      this.alternateScreen_.wordBreakMatchLeft = v;\n    },\n\n    'word-break-match-right': (v) => {\n      this.primaryScreen_.wordBreakMatchRight = v;\n      this.alternateScreen_.wordBreakMatchRight = v;\n    },\n\n    'word-break-match-middle': (v) => {\n      this.primaryScreen_.wordBreakMatchMiddle = v;\n      this.alternateScreen_.wordBreakMatchMiddle = v;\n    },\n\n    'allow-images-inline': (v) => {\n      this.allowImagesInline = v;\n    },\n  });\n\n  this.prefs_.readStorage(function() {\n    this.prefs_.notifyAll();\n\n    if (callback) {\n      this.ready_ = true;\n      callback();\n    }\n  }.bind(this));\n};\n\n/**\n * Returns the preferences manager used for configuring this terminal.\n *\n * @return {!hterm.PreferenceManager}\n */\nhterm.Terminal.prototype.getPrefs = function() {\n  return lib.notNull(this.prefs_);\n};\n\n/**\n * Enable or disable bracketed paste mode.\n *\n * @param {boolean} state The value to set.\n */\nhterm.Terminal.prototype.setBracketedPaste = function(state) {\n  this.options_.bracketedPaste = state;\n};\n\n/**\n * Set the color for the cursor.\n *\n * If you want this setting to persist, set it through prefs_, rather than\n * with this method.\n *\n * @param {string=} color The color to set.  If not defined, we reset to the\n *     saved user preference.\n */\nhterm.Terminal.prototype.setCursorColor = function(color) {\n  if (color === undefined) {\n    color = this.prefs_.getString('cursor-color');\n  }\n\n  this.setCssVar('cursor-color', color);\n};\n\n/**\n * Return the current cursor color as a string.\n *\n * @return {string}\n */\nhterm.Terminal.prototype.getCursorColor = function() {\n  return this.getCssVar('cursor-color');\n};\n\n/**\n * Enable or disable mouse based text selection in the terminal.\n *\n * @param {boolean} state The value to set.\n */\nhterm.Terminal.prototype.setSelectionEnabled = function(state) {\n  this.enableMouseDragScroll = state;\n};\n\n/**\n * Set the background image.\n *\n * If you want this setting to persist, set it through prefs_, rather than\n * with this method.\n *\n * @param {string=} cssUrl The image to set as a css url.  If not defined, we\n *     reset to the saved user preference.\n */\nhterm.Terminal.prototype.setBackgroundImage = function(cssUrl) {\n  if (cssUrl === undefined) {\n    cssUrl = this.prefs_.getString('background-image');\n  }\n  this.scrollPort_.setBackgroundImage(cssUrl);\n};\n\n/**\n * Set the background color.\n *\n * If you want this setting to persist, set it through prefs_, rather than\n * with this method.\n *\n * @param {string=} color The color to set.  If not defined, we reset to the\n *     saved user preference.\n */\nhterm.Terminal.prototype.setBackgroundColor = function(color) {\n  if (color === undefined) {\n    color = this.prefs_.getString('background-color');\n  }\n\n  this.backgroundColor_ = lib.colors.normalizeCSS(color);\n  this.setRgbColorCssVar('background-color', this.backgroundColor_);\n};\n\n/**\n * Return the current terminal background color.\n *\n * Intended for use by other classes, so we don't have to expose the entire\n * prefs_ object.\n *\n * @return {?string}\n */\nhterm.Terminal.prototype.getBackgroundColor = function() {\n  return this.backgroundColor_;\n};\n\n/**\n * Set the foreground color.\n *\n * If you want this setting to persist, set it through prefs_, rather than\n * with this method.\n *\n * @param {string=} color The color to set.  If not defined, we reset to the\n *     saved user preference.\n */\nhterm.Terminal.prototype.setForegroundColor = function(color) {\n  if (color === undefined) {\n    color = this.prefs_.getString('foreground-color');\n  }\n\n  this.foregroundColor_ = lib.colors.normalizeCSS(color);\n  this.setRgbColorCssVar('foreground-color', this.foregroundColor_);\n};\n\n/**\n * Return the current terminal foreground color.\n *\n * Intended for use by other classes, so we don't have to expose the entire\n * prefs_ object.\n *\n * @return {?string}\n */\nhterm.Terminal.prototype.getForegroundColor = function() {\n  return this.foregroundColor_;\n};\n\n/**\n * Create a new instance of a terminal command and run it with a given\n * argument string.\n *\n * @param {!Function} commandClass The constructor for a terminal command.\n * @param {string} commandName The command to run for this terminal.\n * @param {!Array<string>} args The arguments to pass to the command.\n */\nhterm.Terminal.prototype.runCommandClass = function(\n    commandClass, commandName, args) {\n  let environment = this.prefs_.get('environment');\n  if (typeof environment != 'object' || environment == null) {\n    environment = {};\n  }\n\n  this.command = new commandClass(\n      {\n        commandName: commandName,\n        args: args,\n        io: this.io.push(),\n        environment: environment,\n        onExit: (code) => {\n          this.io.pop();\n          this.uninstallKeyboard();\n          this.div_.dispatchEvent(new CustomEvent('terminal-closing'));\n          if (this.prefs_.get('close-on-exit')) {\n            window.close();\n          }\n        },\n      });\n\n  this.installKeyboard();\n  this.command.run();\n};\n\n/**\n * Returns true if the current screen is the primary screen, false otherwise.\n *\n * @return {boolean}\n */\nhterm.Terminal.prototype.isPrimaryScreen = function() {\n  return this.screen_ == this.primaryScreen_;\n};\n\n/**\n * Install the keyboard handler for this terminal.\n *\n * This will prevent the browser from seeing any keystrokes sent to the\n * terminal.\n */\nhterm.Terminal.prototype.installKeyboard = function() {\n  this.keyboard.installKeyboard(this.scrollPort_.getDocument().body);\n};\n\n/**\n * Uninstall the keyboard handler for this terminal.\n */\nhterm.Terminal.prototype.uninstallKeyboard = function() {\n  this.keyboard.installKeyboard(null);\n};\n\n/**\n * Set a CSS variable.\n *\n * Normally this is used to set variables in the hterm namespace.\n *\n * @param {string} name The variable to set.\n * @param {string|number} value The value to assign to the variable.\n * @param {string=} prefix The variable namespace/prefix to use.\n */\nhterm.Terminal.prototype.setCssVar = function(name, value,\n                                              prefix = '--hterm-') {\n  this.document_.documentElement.style.setProperty(\n      `${prefix}${name}`, value.toString());\n};\n\n/**\n * Sets --hterm-{name} to the cracked rgb components (no alpha) if the provided\n * input is valid.\n *\n * @param {string} name The variable to set.\n * @param {?string} rgb The rgb value to assign to the variable.\n */\nhterm.Terminal.prototype.setRgbColorCssVar = function(name, rgb) {\n  const ary = rgb ? lib.colors.crackRGB(rgb) : null;\n  if (ary) {\n    this.setCssVar(name, ary.slice(0, 3).join(','));\n  }\n};\n\n/**\n * Sets the specified color for the active screen.\n *\n * @param {number} i The index into the 256 color palette to set.\n * @param {?string} rgb The rgb value to assign to the variable.\n */\nhterm.Terminal.prototype.setColorPalette = function(i, rgb) {\n  if (i >= 0 && i < 256 && rgb != null && rgb != this.getColorPalette[i]) {\n    this.setRgbColorCssVar(`color-${i}`, rgb);\n    this.screen_.textAttributes.colorPaletteOverrides[i] = rgb;\n  }\n};\n\n/**\n * Returns the current value in the active screen of the specified color.\n *\n * @param {number} i Color palette index.\n * @return {string} rgb color.\n */\nhterm.Terminal.prototype.getColorPalette = function(i) {\n  return this.screen_.textAttributes.colorPaletteOverrides[i] ||\n      this.colorPaletteOverrides_.get(i) ||\n      lib.colors.stockPalette[i];\n};\n\n/**\n * Reset the specified color in the active screen to its default value.\n *\n * @param {number} i Color to reset\n */\nhterm.Terminal.prototype.resetColor = function(i) {\n  this.setColorPalette(\n      i, this.colorPaletteOverrides_.get(i) || lib.colors.stockPalette[i]);\n  delete this.screen_.textAttributes.colorPaletteOverrides[i];\n};\n\n/**\n * Reset the current screen color palette to the default state.\n */\nhterm.Terminal.prototype.resetColorPalette = function() {\n  this.screen_.textAttributes.colorPaletteOverrides.forEach(\n      (c, i) => this.resetColor(i));\n};\n\n/**\n * Get a CSS variable.\n *\n * Normally this is used to get variables in the hterm namespace.\n *\n * @param {string} name The variable to read.\n * @param {string=} prefix The variable namespace/prefix to use.\n * @return {string} The current setting for this variable.\n */\nhterm.Terminal.prototype.getCssVar = function(name, prefix = '--hterm-') {\n  return this.document_.documentElement.style.getPropertyValue(\n      `${prefix}${name}`);\n};\n\n/**\n * @return {!hterm.ScrollPort}\n */\nhterm.Terminal.prototype.getScrollPort = function() {\n  return this.scrollPort_;\n};\n\n/**\n * Update CSS character size variables to match the scrollport.\n */\nhterm.Terminal.prototype.updateCssCharsize_ = function() {\n  this.setCssVar('charsize-width', this.scrollPort_.characterSize.width + 'px');\n  this.setCssVar('charsize-height',\n                 this.scrollPort_.characterSize.height + 'px');\n};\n\n/**\n * Set the font size for this terminal.\n *\n * Call setFontSize(0) to reset to the default font size.\n *\n * This function does not modify the font-size preference.\n *\n * @param {number} px The desired font size, in pixels.\n */\nhterm.Terminal.prototype.setFontSize = function(px) {\n  if (px <= 0) {\n    px = this.prefs_.getNumber('font-size');\n  }\n\n  this.scrollPort_.setFontSize(px);\n  this.setCssVar('font-size', `${px}px`);\n  this.updateCssCharsize_();\n};\n\n/**\n * Get the current font size.\n *\n * @return {number}\n */\nhterm.Terminal.prototype.getFontSize = function() {\n  return this.scrollPort_.getFontSize();\n};\n\n/**\n * Get the current font family.\n *\n * @return {string}\n */\nhterm.Terminal.prototype.getFontFamily = function() {\n  return this.scrollPort_.getFontFamily();\n};\n\n/**\n * Set the CSS \"font-family\" for this terminal.\n */\nhterm.Terminal.prototype.syncFontFamily = function() {\n  this.scrollPort_.setFontFamily(this.prefs_.getString('font-family'),\n                                 this.prefs_.getString('font-smoothing'));\n  this.updateCssCharsize_();\n  this.syncBoldSafeState();\n};\n\n/**\n * Set this.mousePasteButton based on the mouse-paste-button pref,\n * autodetecting if necessary.\n */\nhterm.Terminal.prototype.syncMousePasteButton = function() {\n  const button = this.prefs_.get('mouse-paste-button');\n  if (typeof button == 'number') {\n    this.mousePasteButton = button;\n    return;\n  }\n\n  // If the button is set to undefined, then there is no button that pastes\n  if (button === \"no-button\") {\n    return;\n  }\n\n  if (hterm.os != 'linux') {\n    this.mousePasteButton = 1;  // Middle mouse button.\n  } else {\n    this.mousePasteButton = 2;  // Right mouse button.\n  }\n};\n\n/**\n * Enable or disable bold based on the enable-bold pref, autodetecting if\n * necessary.\n */\nhterm.Terminal.prototype.syncBoldSafeState = function() {\n  const enableBold = this.prefs_.get('enable-bold');\n  if (enableBold !== null) {\n    this.primaryScreen_.textAttributes.enableBold = enableBold;\n    this.alternateScreen_.textAttributes.enableBold = enableBold;\n    return;\n  }\n\n  const normalSize = this.scrollPort_.measureCharacterSize();\n  const boldSize = this.scrollPort_.measureCharacterSize('bold');\n\n  const isBoldSafe = normalSize.equals(boldSize);\n  if (!isBoldSafe) {\n    console.warn('Bold characters disabled: Size of bold weight differs ' +\n                 'from normal.  Font family is: ' +\n                 this.scrollPort_.getFontFamily());\n  }\n\n  this.primaryScreen_.textAttributes.enableBold = isBoldSafe;\n  this.alternateScreen_.textAttributes.enableBold = isBoldSafe;\n};\n\n/**\n * Control text blinking behavior.\n *\n * @param {boolean=} state Whether to enable support for blinking text.\n */\nhterm.Terminal.prototype.setTextBlink = function(state) {\n  if (state === undefined) {\n    state = this.prefs_.getBoolean('enable-blink');\n  }\n  this.setCssVar('blink-node-duration', state ? '0.7s' : '0');\n};\n\n/**\n * Set the mouse cursor style based on the current terminal mode.\n */\nhterm.Terminal.prototype.syncMouseStyle = function() {\n  this.setCssVar('mouse-cursor-style',\n                 this.vt.mouseReport == this.vt.MOUSE_REPORT_DISABLED ?\n                     'var(--hterm-mouse-cursor-text)' :\n                     'var(--hterm-mouse-cursor-default)');\n};\n\n/**\n * Return a copy of the current cursor position.\n *\n * @return {!hterm.RowCol} The RowCol object representing the current position.\n */\nhterm.Terminal.prototype.saveCursor = function() {\n  return this.screen_.cursorPosition.clone();\n};\n\n/**\n * Return the current text attributes.\n *\n * @return {!hterm.TextAttributes}\n */\nhterm.Terminal.prototype.getTextAttributes = function() {\n  return this.screen_.textAttributes;\n};\n\n/**\n * Set the text attributes.\n *\n * @param {!hterm.TextAttributes} textAttributes The attributes to set.\n */\nhterm.Terminal.prototype.setTextAttributes = function(textAttributes) {\n  this.screen_.textAttributes = textAttributes;\n};\n\n/**\n * Change the title of this terminal's window.\n *\n * @param {string} title The title to set.\n */\nhterm.Terminal.prototype.setWindowTitle = function(title) {\n  window.document.title = title;\n};\n\n/**\n * Change the name of the terminal. This is used by tmux, and it is different\n * from the window title. See the \"NAMES AND TITLES\" section in `man tmux`.\n *\n * @param {string} name The name to set.\n */\nhterm.Terminal.prototype.setWindowName = function(name) {};\n\n/**\n * Restore a previously saved cursor position.\n *\n * @param {!hterm.RowCol} cursor The position to restore.\n */\nhterm.Terminal.prototype.restoreCursor = function(cursor) {\n  const row = lib.f.clamp(cursor.row, 0, this.screenSize.height - 1);\n  const column = lib.f.clamp(cursor.column, 0, this.screenSize.width - 1);\n  this.screen_.setCursorPosition(row, column);\n  if (cursor.column > column ||\n      cursor.column == column && cursor.overflow) {\n    this.screen_.cursorPosition.overflow = true;\n  }\n};\n\n/**\n * Clear the cursor's overflow flag.\n */\nhterm.Terminal.prototype.clearCursorOverflow = function() {\n  this.screen_.cursorPosition.overflow = false;\n};\n\n/**\n * Save the current cursor state to the corresponding screens.\n *\n * See the hterm.Screen.CursorState class for more details.\n *\n * @param {boolean=} both If true, update both screens, else only update the\n *     current screen.\n */\nhterm.Terminal.prototype.saveCursorAndState = function(both) {\n  if (both) {\n    this.primaryScreen_.saveCursorAndState(this.vt);\n    this.alternateScreen_.saveCursorAndState(this.vt);\n  } else {\n    this.screen_.saveCursorAndState(this.vt);\n  }\n};\n\n/**\n * Restore the saved cursor state in the corresponding screens.\n *\n * See the hterm.Screen.CursorState class for more details.\n *\n * @param {boolean=} both If true, update both screens, else only update the\n *     current screen.\n */\nhterm.Terminal.prototype.restoreCursorAndState = function(both) {\n  if (both) {\n    this.primaryScreen_.restoreCursorAndState(this.vt);\n    this.alternateScreen_.restoreCursorAndState(this.vt);\n  } else {\n    this.screen_.restoreCursorAndState(this.vt);\n  }\n};\n\n/**\n * Sets the cursor shape\n *\n * @param {string} shape The shape to set.\n */\nhterm.Terminal.prototype.setCursorShape = function(shape) {\n  this.cursorShape_ = shape;\n  this.restyleCursor_();\n};\n\n/**\n * Get the cursor shape\n *\n * @return {string}\n */\nhterm.Terminal.prototype.getCursorShape = function() {\n  return this.cursorShape_;\n};\n\n/**\n * Set the line height padding size in pixels.\n *\n * @param {number} size\n */\nhterm.Terminal.prototype.setLineHeightPaddingSize = function(size) {\n  this.scrollPort_.setLineHeightPaddingSize(size);\n};\n\n/**\n * Set the screen padding size in pixels.\n *\n * @param {number} size\n */\nhterm.Terminal.prototype.setScreenPaddingSize = function(size) {\n  this.setCssVar('screen-padding-size', `${size}px`);\n  this.scrollPort_.setScreenPaddingSize(size);\n};\n\n/**\n * Set the screen border size in pixels.\n *\n * @param {number} size\n */\nhterm.Terminal.prototype.setScreenBorderSize = function(size) {\n  this.div_.style.borderWidth = `${size}px`;\n  this.screenBorderSize_ = size;\n  this.scrollPort_.resize();\n};\n\n/**\n * Set the width of the terminal, resizing the UI to match.\n *\n * @param {?number} columnCount\n */\nhterm.Terminal.prototype.setWidth = function(columnCount) {\n  if (columnCount == null) {\n    this.div_.style.width = '100%';\n    return;\n  }\n\n  const rightPadding = Math.max(\n      this.scrollPort_.screenPaddingSize,\n      this.scrollPort_.currentScrollbarWidthPx);\n  this.div_.style.width = Math.ceil(\n      (this.scrollPort_.characterSize.width * columnCount) +\n      this.scrollPort_.screenPaddingSize + rightPadding +\n      (2 * this.screenBorderSize_)) + 'px';\n  this.realizeSize_(columnCount, this.screenSize.height);\n  this.scheduleSyncCursorPosition_();\n};\n\n/**\n * Set the height of the terminal, resizing the UI to match.\n *\n * @param {?number} rowCount The height in rows.\n */\nhterm.Terminal.prototype.setHeight = function(rowCount) {\n  if (rowCount == null) {\n    this.div_.style.height = '100%';\n    return;\n  }\n\n  this.div_.style.height = (this.scrollPort_.characterSize.height * rowCount) +\n                           (2 * this.scrollPort_.screenPaddingSize) +\n                           (2 * this.screenBorderSize_) + 'px';\n  this.realizeSize_(this.screenSize.width, rowCount);\n  this.scheduleSyncCursorPosition_();\n};\n\n/**\n * Deal with terminal size changes.\n *\n * @param {number} columnCount The number of columns.\n * @param {number} rowCount The number of rows.\n */\nhterm.Terminal.prototype.realizeSize_ = function(columnCount, rowCount) {\n  let notify = false;\n\n  if (columnCount != this.screenSize.width) {\n    notify = true;\n    this.realizeWidth_(columnCount);\n  }\n\n  if (rowCount != this.screenSize.height) {\n    notify = true;\n    this.realizeHeight_(rowCount);\n  }\n\n  // Send new terminal size to plugin.\n  if (notify) {\n    this.io.onTerminalResize_(columnCount, rowCount);\n  }\n};\n\n/**\n * Deal with terminal width changes.\n *\n * This function does what needs to be done when the terminal width changes\n * out from under us.  It happens here rather than in onResize_() because this\n * code may need to run synchronously to handle programmatic changes of\n * terminal width.\n *\n * Relying on the browser to send us an async resize event means we may not be\n * in the correct state yet when the next escape sequence hits.\n *\n * @param {number} columnCount The number of columns.\n */\nhterm.Terminal.prototype.realizeWidth_ = function(columnCount) {\n  if (columnCount <= 0) {\n    throw new Error('Attempt to realize bad width: ' + columnCount);\n  }\n\n  const deltaColumns = columnCount - this.screen_.getWidth();\n  if (deltaColumns == 0) {\n    // No change, so don't bother recalculating things.\n    return;\n  }\n\n  this.screenSize.width = columnCount;\n  this.screen_.setColumnCount(columnCount);\n\n  if (deltaColumns > 0) {\n    if (this.defaultTabStops) {\n      this.setDefaultTabStops(this.screenSize.width - deltaColumns);\n    }\n  } else {\n    for (let i = this.tabStops_.length - 1; i >= 0; i--) {\n      if (this.tabStops_[i] < columnCount) {\n        break;\n      }\n\n      this.tabStops_.pop();\n    }\n  }\n\n  this.screen_.setColumnCount(this.screenSize.width);\n};\n\n/**\n * Deal with terminal height changes.\n *\n * This function does what needs to be done when the terminal height changes\n * out from under us.  It happens here rather than in onResize_() because this\n * code may need to run synchronously to handle programmatic changes of\n * terminal height.\n *\n * Relying on the browser to send us an async resize event means we may not be\n * in the correct state yet when the next escape sequence hits.\n *\n * @param {number} rowCount The number of rows.\n */\nhterm.Terminal.prototype.realizeHeight_ = function(rowCount) {\n  if (rowCount <= 0) {\n    throw new Error('Attempt to realize bad height: ' + rowCount);\n  }\n\n  let deltaRows = rowCount - this.screen_.getHeight();\n  if (deltaRows == 0) {\n    // No change, so don't bother recalculating things.\n    return;\n  }\n\n  this.screenSize.height = rowCount;\n\n  const cursor = this.saveCursor();\n\n  if (deltaRows < 0) {\n    // Screen got smaller.\n    deltaRows *= -1;\n    while (deltaRows) {\n      const lastRow = this.getRowCount() - 1;\n      if (lastRow - this.scrollbackRows_.length == cursor.row) {\n        break;\n      }\n\n      if (this.getRowText(lastRow)) {\n        break;\n      }\n\n      this.screen_.popRow();\n      deltaRows--;\n    }\n\n    const ary = this.screen_.shiftRows(deltaRows);\n    this.scrollbackRows_.push.apply(this.scrollbackRows_, ary);\n\n    // We just removed rows from the top of the screen, we need to update\n    // the cursor to match.\n    cursor.row = Math.max(cursor.row - deltaRows, 0);\n  } else if (deltaRows > 0) {\n    // Screen got larger.\n\n    if (deltaRows <= this.scrollbackRows_.length) {\n      const scrollbackCount = Math.min(deltaRows, this.scrollbackRows_.length);\n      const rows = this.scrollbackRows_.splice(\n          this.scrollbackRows_.length - scrollbackCount, scrollbackCount);\n      this.screen_.unshiftRows(rows);\n      deltaRows -= scrollbackCount;\n      cursor.row += scrollbackCount;\n    }\n\n    if (deltaRows) {\n      this.appendRows_(deltaRows);\n    }\n  }\n\n  this.setVTScrollRegion(null, null);\n  this.restoreCursor(cursor);\n};\n\n/**\n * Scroll the terminal to the top of the scrollback buffer.\n */\nhterm.Terminal.prototype.scrollHome = function() {\n  this.scrollPort_.scrollRowToTop(0);\n};\n\n/**\n * Scroll the terminal to the end.\n */\nhterm.Terminal.prototype.scrollEnd = function() {\n  this.scrollPort_.scrollRowToBottom(this.getRowCount());\n};\n\n/**\n * Scroll the terminal one page up (minus one line) relative to the current\n * position.\n */\nhterm.Terminal.prototype.scrollPageUp = function() {\n  this.scrollPort_.scrollPageUp();\n};\n\n/**\n * Scroll the terminal one page down (minus one line) relative to the current\n * position.\n */\nhterm.Terminal.prototype.scrollPageDown = function() {\n  this.scrollPort_.scrollPageDown();\n};\n\n/**\n * Scroll the terminal one line up relative to the current position.\n */\nhterm.Terminal.prototype.scrollLineUp = function() {\n  const i = this.scrollPort_.getTopRowIndex();\n  this.scrollPort_.scrollRowToTop(i - 1);\n};\n\n/**\n * Scroll the terminal one line down relative to the current position.\n */\nhterm.Terminal.prototype.scrollLineDown = function() {\n  const i = this.scrollPort_.getTopRowIndex();\n  this.scrollPort_.scrollRowToTop(i + 1);\n};\n\n/**\n * Clear primary screen, secondary screen, and the scrollback buffer.\n */\nhterm.Terminal.prototype.wipeContents = function() {\n  this.clearHome(this.primaryScreen_);\n  this.clearHome(this.alternateScreen_);\n\n  this.clearScrollback();\n};\n\n/**\n * Clear scrollback buffer.\n */\nhterm.Terminal.prototype.clearScrollback = function() {\n  // Move to the end of the buffer in case the screen was scrolled back.\n  // We're going to throw it away which would leave the display invalid.\n  this.scrollEnd();\n\n  this.scrollbackRows_.length = 0;\n  this.scrollPort_.resetCache();\n\n  [this.primaryScreen_, this.alternateScreen_].forEach((screen) => {\n    const bottom = screen.getHeight();\n    this.renumberRows_(0, bottom, screen);\n  });\n\n  this.syncCursorPosition_();\n  this.scrollPort_.invalidate();\n};\n\n/**\n * Full terminal reset.\n *\n * Perform a full reset to the default values listed in\n * https://vt100.net/docs/vt510-rm/RIS.html\n */\nhterm.Terminal.prototype.reset = function() {\n  this.vt.reset();\n\n  this.clearAllTabStops();\n  this.setDefaultTabStops();\n\n  this.resetColorPalette();\n  const resetScreen = (screen) => {\n    // We want to make sure to reset the attributes before we clear the screen.\n    // The attributes might be used to initialize default/empty rows.\n    screen.textAttributes.reset();\n    screen.textAttributes.colorPaletteOverrides = [];\n    this.clearHome(screen);\n    screen.saveCursorAndState(this.vt);\n  };\n  resetScreen(this.primaryScreen_);\n  resetScreen(this.alternateScreen_);\n\n  // Reset terminal options to their default values.\n  this.options_ = new hterm.Options();\n  this.setCursorBlink(!!this.prefs_.get('cursor-blink'));\n\n  this.setVTScrollRegion(null, null);\n\n  this.setCursorVisible(true);\n};\n\n/**\n * Soft terminal reset.\n *\n * Perform a soft reset to the default values listed in\n * http://www.vt100.net/docs/vt510-rm/DECSTR#T5-9\n */\nhterm.Terminal.prototype.softReset = function() {\n  this.vt.reset();\n\n  // Reset terminal options to their default values.\n  this.options_ = new hterm.Options();\n\n  // We show the cursor on soft reset but do not alter the blink state.\n  this.options_.cursorBlink = !!this.timeouts_.cursorBlink;\n\n  this.resetColorPalette();\n  const resetScreen = (screen) => {\n    // Xterm also resets the color palette on soft reset, even though it doesn't\n    // seem to be documented anywhere.\n    screen.textAttributes.reset();\n    screen.textAttributes.colorPaletteOverrides = [];\n    screen.saveCursorAndState(this.vt);\n  };\n  resetScreen(this.primaryScreen_);\n  resetScreen(this.alternateScreen_);\n\n  // The xterm man page explicitly says this will happen on soft reset.\n  this.setVTScrollRegion(null, null);\n\n  // Xterm also shows the cursor on soft reset, but does not alter the blink\n  // state.\n  this.setCursorVisible(true);\n};\n\n/**\n * Move the cursor forward to the next tab stop, or to the last column\n * if no more tab stops are set.\n */\nhterm.Terminal.prototype.forwardTabStop = function() {\n  const column = this.screen_.cursorPosition.column;\n\n  for (let i = 0; i < this.tabStops_.length; i++) {\n    if (this.tabStops_[i] > column) {\n      this.setCursorColumn(this.tabStops_[i]);\n      return;\n    }\n  }\n\n  // xterm does not clear the overflow flag on HT or CHT.\n  const overflow = this.screen_.cursorPosition.overflow;\n  this.setCursorColumn(this.screenSize.width - 1);\n  this.screen_.cursorPosition.overflow = overflow;\n};\n\n/**\n * Move the cursor backward to the previous tab stop, or to the first column\n * if no previous tab stops are set.\n */\nhterm.Terminal.prototype.backwardTabStop = function() {\n  const column = this.screen_.cursorPosition.column;\n\n  for (let i = this.tabStops_.length - 1; i >= 0; i--) {\n    if (this.tabStops_[i] < column) {\n      this.setCursorColumn(this.tabStops_[i]);\n      return;\n    }\n  }\n\n  this.setCursorColumn(1);\n};\n\n/**\n * Set a tab stop at the given column.\n *\n * @param {number} column Zero based column.\n */\nhterm.Terminal.prototype.setTabStop = function(column) {\n  for (let i = this.tabStops_.length - 1; i >= 0; i--) {\n    if (this.tabStops_[i] == column) {\n      return;\n    }\n\n    if (this.tabStops_[i] < column) {\n      this.tabStops_.splice(i + 1, 0, column);\n      return;\n    }\n  }\n\n  this.tabStops_.splice(0, 0, column);\n};\n\n/**\n * Clear the tab stop at the current cursor position.\n *\n * No effect if there is no tab stop at the current cursor position.\n */\nhterm.Terminal.prototype.clearTabStopAtCursor = function() {\n  const column = this.screen_.cursorPosition.column;\n\n  const i = this.tabStops_.indexOf(column);\n  if (i == -1) {\n    return;\n  }\n\n  this.tabStops_.splice(i, 1);\n};\n\n/**\n * Clear all tab stops.\n */\nhterm.Terminal.prototype.clearAllTabStops = function() {\n  this.tabStops_.length = 0;\n  this.defaultTabStops = false;\n};\n\n/**\n * Set up the default tab stops, starting from a given column.\n *\n * This sets a tabstop every (column % this.tabWidth) column, starting\n * from the specified column, or 0 if no column is provided.  It also flags\n * future resizes to set them up.\n *\n * This does not clear the existing tab stops first, use clearAllTabStops\n * for that.\n *\n * @param {number=} start Optional starting zero based starting column,\n *     useful for filling out missing tab stops when the terminal is resized.\n */\nhterm.Terminal.prototype.setDefaultTabStops = function(start = 0) {\n  const w = this.tabWidth;\n  // Round start up to a default tab stop.\n  start = start - 1 - ((start - 1) % w) + w;\n  for (let i = start; i < this.screenSize.width; i += w) {\n    this.setTabStop(i);\n  }\n\n  this.defaultTabStops = true;\n};\n\n/**\n * Interpret a sequence of characters.\n *\n * Incomplete escape sequences are buffered until the next call.\n *\n * @param {string} str Sequence of characters to interpret or pass through.\n */\nhterm.Terminal.prototype.interpret = function(str) {\n  this.scheduleSyncCursorPosition_();\n  this.vt.interpret(str);\n};\n\n/**\n * Take over the given DIV for use as the terminal display.\n *\n * @param {!Element} div The div to use as the terminal display.\n */\nhterm.Terminal.prototype.decorate = function(div) {\n  const charset = div.ownerDocument.characterSet.toLowerCase();\n  if (charset != 'utf-8') {\n    console.warn(`Document encoding should be set to utf-8, not \"${charset}\";` +\n                 ` Add <meta charset='utf-8'/> to your HTML <head> to fix.`);\n  }\n\n  this.div_ = div;\n  this.div_.style.borderStyle = 'solid';\n  this.div_.style.borderWidth = 0;\n  this.div_.style.boxSizing = 'border-box';\n\n  this.accessibilityReader_ = new hterm.AccessibilityReader(div);\n\n  this.scrollPort_.decorate(div, () => this.setupScrollPort_());\n};\n\n/**\n * Initialisation of ScrollPort properties which need to be set after its DOM\n * has been initialised.\n *\n * @private\n */\nhterm.Terminal.prototype.setupScrollPort_ = function() {\n  this.scrollPort_.setBackgroundImage(\n      this.prefs_.getString('background-image'));\n  this.scrollPort_.setBackgroundSize(this.prefs_.getString('background-size'));\n  this.scrollPort_.setBackgroundPosition(\n      this.prefs_.getString('background-position'));\n  this.scrollPort_.setUserCssUrl(this.prefs_.getString('user-css'));\n  this.scrollPort_.setUserCssText(this.prefs_.getString('user-css-text'));\n  this.scrollPort_.setAccessibilityReader(\n      lib.notNull(this.accessibilityReader_));\n\n  this.div_.focus = this.focus.bind(this);\n\n  this.setFontSize(this.prefs_.getNumber('font-size'));\n  this.syncFontFamily();\n\n  this.setScrollbarVisible(this.prefs_.getBoolean('scrollbar-visible'));\n  this.setScrollWheelMoveMultipler(\n      this.prefs_.getNumber('scroll-wheel-move-multiplier'));\n\n  this.document_ = this.scrollPort_.getDocument();\n  this.accessibilityReader_.decorate(this.document_);\n  this.findBar.decorate(this.document_);\n  this.notifications_ = new hterm.NotificationCenter(\n      lib.notNull(this.document_.body), this.accessibilityReader_);\n\n  this.document_.body.oncontextmenu = function() { return false; };\n  this.contextMenu.setDocument(this.document_);\n\n  const onMouse = this.onMouse_.bind(this);\n  const screenNode = this.scrollPort_.getScreenNode();\n  screenNode.addEventListener(\n      'mousedown', /** @type {!EventListener} */ (onMouse));\n  screenNode.addEventListener(\n      'mouseup', /** @type {!EventListener} */ (onMouse));\n  screenNode.addEventListener(\n      'mousemove', /** @type {!EventListener} */ (onMouse));\n  this.scrollPort_.onScrollWheel = onMouse;\n\n  screenNode.addEventListener(\n      'keydown',\n      /** @type {!EventListener} */ (this.onKeyboardActivity_.bind(this)));\n\n  screenNode.addEventListener(\n      'focus', this.onFocusChange_.bind(this, true));\n  // Listen for mousedown events on the screenNode as in FF the focus\n  // events don't bubble.\n  screenNode.addEventListener('mousedown', function() {\n    setTimeout(this.onFocusChange_.bind(this, true));\n  }.bind(this));\n\n  screenNode.addEventListener(\n      'blur', this.onFocusChange_.bind(this, false));\n\n  const style = this.document_.createElement('style');\n  style.textContent = `\n.cursor-node[focus=\"false\"] {\n  box-sizing: border-box;\n  background-color: transparent !important;\n  border-width: 2px;\n  border-style: solid;\n}\nmenu {\n  background: #fff;\n  border-radius: 4px;\n  color: #202124;\n  cursor: var(--hterm-mouse-cursor-pointer);\n  display: none;\n  filter: drop-shadow(0 1px 3px #3C40434D) drop-shadow(0 4px 8px #3C404326);\n  margin: 0;\n  padding: 8px 0;\n  position: absolute;\n  transition-duration: 200ms;\n}\nmenuitem {\n  display: block;\n  font: var(--hterm-font-size) 'Roboto', 'Noto Sans', sans-serif;\n  padding: 0.5em 1em;\n  white-space: nowrap;\n}\nmenuitem.separator {\n  border-bottom: none;\n  height: 0.5em;\n  padding: 0;\n}\nmenuitem:hover {\n  background-color: #e2e4e6;\n}\n.wc-node {\n  display: inline-block;\n  text-align: center;\n  width: calc(var(--hterm-charsize-width) * 2);\n  line-height: var(--hterm-charsize-height);\n}\n:root {\n  --hterm-charsize-width: ${this.scrollPort_.characterSize.width}px;\n  --hterm-charsize-height: ${this.scrollPort_.characterSize.height}px;\n  --hterm-blink-node-duration: 0.7s;\n  --hterm-mouse-cursor-default: default;\n  --hterm-mouse-cursor-text: text;\n  --hterm-mouse-cursor-pointer: pointer;\n  --hterm-mouse-cursor-style: var(--hterm-mouse-cursor-text);\n  --hterm-screen-padding-size: 0;\n\n${lib.colors.stockPalette.map((c, i) => `\n  --hterm-color-${i}: ${lib.colors.crackRGB(c).slice(0, 3).join(',')};\n`).join('')}\n}\n.uri-node:hover {\n  text-decoration: underline;\n  cursor: var(--hterm-mouse-cursor-pointer);\n}\n@keyframes blink {\n  from { opacity: 1.0; }\n  to { opacity: 0.0; }\n}\n.blink-node {\n  animation-name: blink;\n  animation-duration: var(--hterm-blink-node-duration);\n  animation-iteration-count: infinite;\n  animation-timing-function: ease-in-out;\n  animation-direction: alternate;\n}`;\n  // Insert this stock style as the first node so that any user styles will\n  // override w/out having to use !important everywhere.  The rules above mix\n  // runtime variables with default ones designed to be overridden by the user,\n  // but we can wait for a concrete case from the users to determine the best\n  // way to split the sheet up to before & after the user-css settings.\n  this.document_.head.insertBefore(style, this.document_.head.firstChild);\n\n  this.cursorNode_ = this.document_.createElement('div');\n  this.cursorNode_.id = 'hterm:terminal-cursor';\n  this.cursorNode_.className = 'cursor-node';\n  this.cursorNode_.style.cssText = `\nposition: absolute;\nleft: calc(var(--hterm-screen-padding-size) +\n    var(--hterm-charsize-width) * var(--hterm-cursor-offset-col));\ntop: calc(var(--hterm-screen-padding-size) +\n    var(--hterm-charsize-height) * var(--hterm-cursor-offset-row));\ndisplay: ${this.options_.cursorVisible ? '' : 'none'};\nwidth: var(--hterm-charsize-width);\nheight: var(--hterm-charsize-height);\nbackground-color: var(--hterm-cursor-color);\nborder-color: var(--hterm-cursor-color);\ntransition: opacity, background-color 100ms linear;`;\n\n  this.setCursorColor();\n  this.setCursorBlink(!!this.prefs_.get('cursor-blink'));\n  this.restyleCursor_();\n\n  this.document_.body.appendChild(this.cursorNode_);\n\n  // When 'enableMouseDragScroll' is off we reposition this element directly\n  // under the mouse cursor after a click.  This makes Chrome associate\n  // subsequent mousemove events with the scroll-blocker.  Since the\n  // scroll-blocker is a peer (not a child) of the scrollport, the mousemove\n  // events do not cause the scrollport to scroll.\n  //\n  // It's a hack, but it's the cleanest way I could find.\n  this.scrollBlockerNode_ = this.document_.createElement('div');\n  this.scrollBlockerNode_.id = 'hterm:mouse-drag-scroll-blocker';\n  this.scrollBlockerNode_.setAttribute('aria-hidden', 'true');\n  this.scrollBlockerNode_.style.cssText =\n      ('position: absolute;' +\n       'top: -99px;' +\n       'display: block;' +\n       'width: 10px;' +\n       'height: 10px;');\n  this.document_.body.appendChild(this.scrollBlockerNode_);\n\n  this.scrollPort_.onScrollWheel = onMouse;\n  ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick',\n   ].forEach(function(event) {\n       this.scrollBlockerNode_.addEventListener(event, onMouse);\n       this.cursorNode_.addEventListener(\n           event, /** @type {!EventListener} */ (onMouse));\n       this.document_.addEventListener(\n           event, /** @type {!EventListener} */ (onMouse));\n     }.bind(this));\n\n  this.cursorNode_.addEventListener('mousedown', function() {\n      setTimeout(this.focus.bind(this));\n    }.bind(this));\n\n  this.setReverseVideo(false);\n\n  // Re-sync fonts whenever a web font loads.\n  this.document_.fonts.addEventListener(\n      'loadingdone', () => this.syncFontFamily());\n\n  this.scrollPort_.focus();\n  this.scrollPort_.scheduleRedraw();\n};\n\n/**\n * Return the HTML document that contains the terminal DOM nodes.\n *\n * @return {!Document}\n */\nhterm.Terminal.prototype.getDocument = function() {\n  return this.document_;\n};\n\n/**\n * Focus the terminal.\n */\nhterm.Terminal.prototype.focus = function() {\n  this.scrollPort_.focus();\n};\n\n/**\n * Unfocus the terminal.\n */\nhterm.Terminal.prototype.blur = function() {\n  this.scrollPort_.blur();\n};\n\n/**\n * Return the HTML Element for a given row index.\n *\n * This is a method from the RowProvider interface.  The ScrollPort uses\n * it to fetch rows on demand as they are scrolled into view.\n *\n * TODO(rginda): Consider saving scrollback rows as (HTML source, text content)\n * pairs to conserve memory.\n *\n * @param {number} index The zero-based row index, measured relative to the\n *     start of the scrollback buffer.  On-screen rows will always have the\n *     largest indices.\n * @return {!Element} The 'x-row' element containing for the requested row.\n * @override\n */\nhterm.Terminal.prototype.getRowNode = function(index) {\n  if (index < this.scrollbackRows_.length) {\n    return this.scrollbackRows_[index];\n  }\n\n  const screenIndex = index - this.scrollbackRows_.length;\n  return this.screen_.rowsArray[screenIndex];\n};\n\n/**\n * Return the text content for a given range of rows.\n *\n * This is a method from the RowProvider interface.  The ScrollPort uses\n * it to fetch text content on demand when the user attempts to copy their\n * selection to the clipboard.\n *\n * @param {number} start The zero-based row index to start from, measured\n *     relative to the start of the scrollback buffer.  On-screen rows will\n *     always have the largest indices.\n * @param {number} end The zero-based row index to end on, measured\n *     relative to the start of the scrollback buffer.\n * @return {string} A single string containing the text value of the range of\n *     rows.  Lines will be newline delimited, with no trailing newline.\n */\nhterm.Terminal.prototype.getRowsText = function(start, end) {\n  const ary = [];\n  for (let i = start; i < end; i++) {\n    const node = this.getRowNode(i);\n    ary.push(node.textContent);\n    if (i < end - 1 && !node.getAttribute('line-overflow')) {\n      ary.push('\\n');\n    }\n  }\n\n  return ary.join('');\n};\n\n/**\n * Return the text content for a given row.\n *\n * This is a method from the RowProvider interface.  The ScrollPort uses\n * it to fetch text content on demand when the user attempts to copy their\n * selection to the clipboard.\n *\n * @param {number} index The zero-based row index to return, measured\n *     relative to the start of the scrollback buffer.  On-screen rows will\n *     always have the largest indices.\n * @return {string} A string containing the text value of the selected row.\n */\nhterm.Terminal.prototype.getRowText = function(index) {\n  const node = this.getRowNode(index);\n  return node.textContent;\n};\n\n/**\n * Return the total number of rows in the addressable screen and in the\n * scrollback buffer of this terminal.\n *\n * This is a method from the RowProvider interface.  The ScrollPort uses\n * it to compute the size of the scrollbar.\n *\n * @return {number} The number of rows in this terminal.\n * @override\n */\nhterm.Terminal.prototype.getRowCount = function() {\n  return this.scrollbackRows_.length + this.screen_.rowsArray.length;\n};\n\n/**\n * Create DOM nodes for new rows and append them to the end of the terminal.\n *\n * The new row is appended to the bottom of the list of rows, and does not\n * require renumbering (of the rowIndex property) of previous rows.\n *\n * If you think you want a new blank row somewhere in the middle of the\n * terminal, look into insertRow_() or moveRows_().\n *\n * This method does not pay attention to vtScrollTop/Bottom, since you should\n * be using insertRow_() or moveRows_() in cases where they would matter.\n *\n * The cursor will be positioned at column 0 of the first inserted line.\n *\n * @param {number} count The number of rows to created.\n */\nhterm.Terminal.prototype.appendRows_ = function(count) {\n  let cursorRow = this.screen_.rowsArray.length;\n  const offset = this.scrollbackRows_.length + cursorRow;\n  for (let i = 0; i < count; i++) {\n    const row = this.document_.createElement('x-row');\n    row.appendChild(this.document_.createTextNode(''));\n    row.rowIndex = offset + i;\n    this.screen_.pushRow(row);\n  }\n\n  const extraRows = this.screen_.rowsArray.length - this.screenSize.height;\n  if (extraRows > 0) {\n    const ary = this.screen_.shiftRows(extraRows);\n    Array.prototype.push.apply(this.scrollbackRows_, ary);\n    if (this.scrollPort_.isScrolledEnd) {\n      this.scheduleScrollDown_();\n    }\n  }\n\n  if (cursorRow >= this.screen_.rowsArray.length) {\n    cursorRow = this.screen_.rowsArray.length - 1;\n  }\n\n  this.setAbsoluteCursorPosition(cursorRow, 0);\n};\n\n/**\n * Create a DOM node for a new row and insert it at the current position.\n *\n * The new row is inserted at the current cursor position, the existing top row\n * is moved to scrollback, and lines below are renumbered.\n *\n * The cursor will be positioned at column 0.\n */\nhterm.Terminal.prototype.insertRow_ = function() {\n  const row = this.document_.createElement('x-row');\n  row.appendChild(this.document_.createTextNode(''));\n\n  this.scrollbackRows_.push(this.screen_.shiftRow());\n\n  const cursorRow = this.screen_.cursorPosition.row;\n  this.screen_.insertRow(cursorRow, row);\n\n  this.renumberRows_(cursorRow, this.screen_.rowsArray.length);\n\n  this.setAbsoluteCursorPosition(cursorRow, 0);\n  if (this.scrollPort_.isScrolledEnd) {\n    this.scheduleScrollDown_();\n  }\n};\n\n/**\n * Relocate rows from one part of the addressable screen to another.\n *\n * This is used to recycle rows during VT scrolls where a top region is set\n * (those which are driven by VT commands, rather than by the user manipulating\n * the scrollbar.)\n *\n * In this case, the blank lines scrolled into the scroll region are made of\n * the nodes we scrolled off.  These have their rowIndex properties carefully\n * renumbered so as not to confuse the ScrollPort.\n *\n * @param {number} fromIndex The start index.\n * @param {number} count The number of rows to move.\n * @param {number} toIndex The destination index.\n */\nhterm.Terminal.prototype.moveRows_ = function(fromIndex, count, toIndex) {\n  const ary = this.screen_.removeRows(fromIndex, count);\n  this.screen_.insertRows(toIndex, ary);\n\n  let start, end;\n  if (fromIndex < toIndex) {\n    start = fromIndex;\n    end = toIndex + count;\n  } else {\n    start = toIndex;\n    end = fromIndex + count;\n  }\n\n  this.renumberRows_(start, end);\n  this.scrollPort_.scheduleInvalidate();\n};\n\n/**\n * Renumber the rowIndex property of the given range of rows.\n *\n * The start and end indices are relative to the screen, not the scrollback.\n * Rows in the scrollback buffer cannot be renumbered.  Since they are not\n * addressable (you can't delete them, scroll them, etc), you should have\n * no need to renumber scrollback rows.\n *\n * @param {number} start The start index.\n * @param {number} end The end index.\n * @param {!hterm.Screen=} screen The screen to renumber.\n */\nhterm.Terminal.prototype.renumberRows_ = function(\n    start, end, screen = undefined) {\n  if (!screen) {\n    screen = this.screen_;\n  }\n\n  const offset = this.scrollbackRows_.length;\n  for (let i = start; i < end; i++) {\n    screen.rowsArray[i].rowIndex = offset + i;\n  }\n};\n\n/**\n * Print a string to the terminal.\n *\n * This respects the current insert and wraparound modes.  It will add new lines\n * to the end of the terminal, scrolling off the top into the scrollback buffer\n * if necessary.\n *\n * The string is *not* parsed for escape codes.  Use the interpret() method if\n * that's what you're after.\n *\n * @param {string} str The string to print.\n */\nhterm.Terminal.prototype.print = function(str) {\n  this.scheduleSyncCursorPosition_();\n\n  // Basic accessibility output for the screen reader.\n  this.accessibilityReader_.announce(str);\n\n  let startOffset = 0;\n\n  let strWidth = lib.wc.strWidth(str);\n  // Fun edge case: If the string only contains zero width codepoints (like\n  // combining characters), we make sure to iterate at least once below.\n  if (strWidth == 0 && str) {\n    strWidth = 1;\n  }\n\n  while (startOffset < strWidth) {\n    if (this.options_.wraparound && this.screen_.cursorPosition.overflow) {\n      this.screen_.commitLineOverflow();\n      this.newLine(true);\n    }\n\n    let count = strWidth - startOffset;\n    let didOverflow = false;\n    let substr;\n\n    if (this.screen_.cursorPosition.column + count >= this.screenSize.width) {\n      didOverflow = true;\n      count = this.screenSize.width - this.screen_.cursorPosition.column;\n    }\n\n    if (didOverflow && !this.options_.wraparound) {\n      // If the string overflowed the line but wraparound is off, then the\n      // last printed character should be the last of the string.\n      // TODO: This will add to our problems with multibyte UTF-16 characters.\n      substr = lib.wc.substr(str, startOffset, count - 1) +\n          lib.wc.substr(str, strWidth - 1);\n      count = strWidth;\n    } else {\n      substr = lib.wc.substr(str, startOffset, count);\n    }\n\n    const tokens = hterm.TextAttributes.splitWidecharString(substr);\n    for (let i = 0; i < tokens.length; i++) {\n      this.screen_.textAttributes.wcNode = tokens[i].wcNode;\n      this.screen_.textAttributes.asciiNode = tokens[i].asciiNode;\n\n      if (this.options_.insertMode) {\n        this.screen_.insertString(tokens[i].str, tokens[i].wcStrWidth);\n      } else {\n        this.screen_.overwriteString(tokens[i].str, tokens[i].wcStrWidth);\n      }\n      this.screen_.textAttributes.wcNode = false;\n      this.screen_.textAttributes.asciiNode = true;\n    }\n\n    this.screen_.maybeClipCurrentRow();\n    startOffset += count;\n    this.findBar.scheduleNotifyChanges(\n        this.scrollbackRows_.length + this.screen_.cursorPosition.row);\n  }\n\n  if (this.scrollOnOutput_) {\n    this.scrollPort_.scrollRowToBottom(this.getRowCount());\n  }\n};\n\n/**\n * Set the VT scroll region.\n *\n * This also resets the cursor position to the absolute (0, 0) position, since\n * that's what xterm appears to do.\n *\n * Setting the scroll region to the full height of the terminal will clear\n * the scroll region.  This is *NOT* what most terminals do.  We're explicitly\n * going \"off-spec\" here because it makes `screen` and `tmux` overflow into the\n * local scrollback buffer, which means the scrollbars and shift-pgup/pgdn\n * continue to work as most users would expect.\n *\n * @param {?number} scrollTop The zero-based top of the scroll region.\n * @param {?number} scrollBottom The zero-based bottom of the scroll region,\n *     inclusive.\n */\nhterm.Terminal.prototype.setVTScrollRegion = function(scrollTop, scrollBottom) {\n  this.vtScrollTop_ = scrollTop;\n  this.vtScrollBottom_ = scrollBottom;\n  if (scrollBottom == this.screenSize.height - 1) {\n    this.vtScrollBottom_ = null;\n    if (scrollTop == 0) {\n      this.vtScrollTop_ = null;\n    }\n  }\n};\n\n/**\n * Return the top row index according to the VT.\n *\n * This will return 0 unless the terminal has been told to restrict scrolling\n * to some lower row.  It is used for some VT cursor positioning and scrolling\n * commands.\n *\n * @return {number} The topmost row in the terminal's scroll region.\n */\nhterm.Terminal.prototype.getVTScrollTop = function() {\n  if (this.vtScrollTop_ != null) {\n    return this.vtScrollTop_;\n  }\n\n  return 0;\n};\n\n/**\n * Return the bottom row index according to the VT.\n *\n * This will return the height of the terminal unless the it has been told to\n * restrict scrolling to some higher row.  It is used for some VT cursor\n * positioning and scrolling commands.\n *\n * @return {number} The bottom most row in the terminal's scroll region.\n */\nhterm.Terminal.prototype.getVTScrollBottom = function() {\n  if (this.vtScrollBottom_ != null) {\n    return this.vtScrollBottom_;\n  }\n\n  return this.screenSize.height - 1;\n};\n\n/**\n * Process a '\\n' character.\n *\n * If the cursor is on the final row of the terminal this will append a new\n * blank row to the screen and scroll the topmost row into the scrollback\n * buffer.\n *\n * Otherwise, this moves the cursor to column zero of the next row.\n *\n * @param {boolean=} dueToOverflow Whether the newline is due to wraparound of\n *     the terminal.\n */\nhterm.Terminal.prototype.newLine = function(dueToOverflow = false) {\n  if (!dueToOverflow) {\n    this.accessibilityReader_.newLine();\n  }\n\n  const cursorAtEndOfScreen =\n      (this.screen_.cursorPosition.row == this.screen_.rowsArray.length - 1);\n  const cursorAtEndOfVTRegion =\n      (this.screen_.cursorPosition.row == this.getVTScrollBottom());\n\n  if (this.vtScrollTop_ != null && cursorAtEndOfVTRegion) {\n    // A VT Scroll region is active on top, we never append new rows.\n    // We're at the end of the VT Scroll Region, perform a VT scroll.\n    this.vtScrollUp(1);\n    this.setAbsoluteCursorPosition(this.screen_.cursorPosition.row, 0);\n  } else if (cursorAtEndOfScreen) {\n    // We're at the end of the screen.  Append a new row to the terminal,\n    // shifting the top row into the scrollback.\n    this.appendRows_(1);\n  } else if (cursorAtEndOfVTRegion) {\n    this.insertRow_();\n  } else {\n    // Anywhere else in the screen just moves the cursor.\n    this.setAbsoluteCursorPosition(this.screen_.cursorPosition.row + 1, 0);\n  }\n};\n\n/**\n * Like newLine(), except maintain the cursor column.\n */\nhterm.Terminal.prototype.lineFeed = function() {\n  const column = this.screen_.cursorPosition.column;\n  this.newLine();\n  this.setCursorColumn(column);\n};\n\n/**\n * If autoCarriageReturn is set then newLine(), else lineFeed().\n */\nhterm.Terminal.prototype.formFeed = function() {\n  if (this.options_.autoCarriageReturn) {\n    this.newLine();\n  } else {\n    this.lineFeed();\n  }\n};\n\n/**\n * Move the cursor up one row, possibly inserting a blank line.\n *\n * The cursor column is not changed.\n */\nhterm.Terminal.prototype.reverseLineFeed = function() {\n  const scrollTop = this.getVTScrollTop();\n  const currentRow = this.screen_.cursorPosition.row;\n\n  if (currentRow == scrollTop) {\n    this.insertLines(1);\n  } else {\n    this.setAbsoluteCursorRow(currentRow - 1);\n  }\n};\n\n/**\n * Replace all characters to the left of the current cursor with the space\n * character.\n *\n * TODO(rginda): This should probably *remove* the characters (not just replace\n * with a space) if there are no characters at or beyond the current cursor\n * position.\n */\nhterm.Terminal.prototype.eraseToLeft = function() {\n  const cursor = this.saveCursor();\n  this.setCursorColumn(0);\n  const count = cursor.column + 1;\n  this.screen_.overwriteString(' '.repeat(count), count);\n    this.findBar.scheduleNotifyChanges(\n        this.scrollbackRows_.length + this.screen_.cursorPosition.row);\n  this.restoreCursor(cursor);\n};\n\n/**\n * Erase a given number of characters to the right of the cursor.\n *\n * The cursor position is unchanged.\n *\n * If the current background color is not the default background color this\n * will insert spaces rather than delete.  This is unfortunate because the\n * trailing space will affect text selection, but it's difficult to come up\n * with a way to style empty space that wouldn't trip up the hterm.Screen\n * code.\n *\n * eraseToRight is ignored in the presence of a cursor overflow.  This deviates\n * from xterm, but agrees with gnome-terminal and konsole, xfce4-terminal.  See\n * crbug.com/232390 for details.\n *\n * @param {number=} count The number of characters to erase.\n */\nhterm.Terminal.prototype.eraseToRight = function(count = undefined) {\n  if (this.screen_.cursorPosition.overflow) {\n    return;\n  }\n\n  const maxCount = this.screenSize.width - this.screen_.cursorPosition.column;\n  count = count ? Math.min(count, maxCount) : maxCount;\n\n  this.findBar.scheduleNotifyChanges(\n    this.scrollbackRows_.length + this.screen_.cursorPosition.row);\n\n  if (this.screen_.textAttributes.background ===\n      this.screen_.textAttributes.DEFAULT_COLOR) {\n    const cursorRow = this.screen_.rowsArray[this.screen_.cursorPosition.row];\n    if (hterm.TextAttributes.nodeWidth(cursorRow) <=\n        this.screen_.cursorPosition.column + count) {\n      this.screen_.deleteChars(count);\n      this.clearCursorOverflow();\n      return;\n    }\n  }\n\n  const cursor = this.saveCursor();\n  this.screen_.overwriteString(' '.repeat(count), count);\n  this.restoreCursor(cursor);\n  this.clearCursorOverflow();\n};\n\n/**\n * Erase the current line.\n *\n * The cursor position is unchanged.\n */\nhterm.Terminal.prototype.eraseLine = function() {\n  const cursor = this.saveCursor();\n  this.screen_.clearCursorRow();\n  this.restoreCursor(cursor);\n  this.clearCursorOverflow();\n};\n\n/**\n * Erase all characters from the start of the screen to the current cursor\n * position, regardless of scroll region.\n *\n * The cursor position is unchanged.\n */\nhterm.Terminal.prototype.eraseAbove = function() {\n  const cursor = this.saveCursor();\n\n  this.eraseToLeft();\n\n  for (let i = 0; i < cursor.row; i++) {\n    this.setAbsoluteCursorPosition(i, 0);\n    this.screen_.clearCursorRow();\n  }\n\n  this.restoreCursor(cursor);\n  this.clearCursorOverflow();\n};\n\n/**\n * Erase all characters from the current cursor position to the end of the\n * screen, regardless of scroll region.\n *\n * The cursor position is unchanged.\n */\nhterm.Terminal.prototype.eraseBelow = function() {\n  const cursor = this.saveCursor();\n\n  this.eraseToRight();\n\n  const bottom = this.screenSize.height - 1;\n  for (let i = cursor.row + 1; i <= bottom; i++) {\n    this.setAbsoluteCursorPosition(i, 0);\n    this.screen_.clearCursorRow();\n  }\n\n  this.restoreCursor(cursor);\n  this.clearCursorOverflow();\n};\n\n/**\n * Fill the terminal with a given character.\n *\n * This methods does not respect the VT scroll region.\n *\n * @param {string} ch The character to use for the fill.\n */\nhterm.Terminal.prototype.fill = function(ch) {\n  const cursor = this.saveCursor();\n\n  this.setAbsoluteCursorPosition(0, 0);\n  for (let row = 0; row < this.screenSize.height; row++) {\n    for (let col = 0; col < this.screenSize.width; col++) {\n      this.setAbsoluteCursorPosition(row, col);\n      this.screen_.overwriteString(ch, 1);\n    }\n    this.findBar.scheduleNotifyChanges(this.scrollbackRows_.length + row);\n  }\n\n  this.restoreCursor(cursor);\n};\n\n/**\n * Erase the entire display and leave the cursor at (0, 0).\n *\n * This does not respect the scroll region.\n *\n * @param {!hterm.Screen=} screen Optional screen to operate on.  Defaults\n *     to the current screen.\n */\nhterm.Terminal.prototype.clearHome = function(screen = undefined) {\n  if (!screen) {\n    screen = this.screen_;\n  }\n  const bottom = screen.getHeight();\n\n  this.accessibilityReader_.clear();\n\n  if (bottom == 0) {\n    // Empty screen, nothing to do.\n    return;\n  }\n\n  for (let i = 0; i < bottom; i++) {\n    screen.setCursorPosition(i, 0);\n    screen.clearCursorRow();\n  }\n\n  screen.setCursorPosition(0, 0);\n};\n\n/**\n * Erase the entire display without changing the cursor position.\n *\n * The cursor position is unchanged.  This does not respect the scroll\n * region.\n *\n * @param {!hterm.Screen=} screen Optional screen to operate on.  Defaults\n *     to the current screen.\n */\nhterm.Terminal.prototype.clear = function(screen = undefined) {\n  if (!screen) {\n    screen = this.screen_;\n  }\n  const cursor = screen.cursorPosition.clone();\n  this.clearHome(screen);\n  screen.setCursorPosition(cursor.row, cursor.column);\n};\n\n/**\n * VT command to insert lines at the current cursor row.\n *\n * This respects the current scroll region.  Rows pushed off the bottom are\n * lost (they won't show up in the scrollback buffer).\n *\n * @param {number} count The number of lines to insert.\n */\nhterm.Terminal.prototype.insertLines = function(count) {\n  const cursorRow = this.screen_.cursorPosition.row;\n\n  const bottom = this.getVTScrollBottom();\n  count = Math.min(count, bottom - cursorRow);\n\n  // The moveCount is the number of rows we need to relocate to make room for\n  // the new row(s).  The count is the distance to move them.\n  const moveCount = bottom - cursorRow - count + 1;\n  if (moveCount) {\n    this.moveRows_(cursorRow, moveCount, cursorRow + count);\n  }\n\n  for (let i = count - 1; i >= 0; i--) {\n    this.setAbsoluteCursorPosition(cursorRow + i, 0);\n    this.screen_.clearCursorRow();\n  }\n};\n\n/**\n * VT command to delete lines at the current cursor row.\n *\n * New rows are added to the bottom of scroll region to take their place.  New\n * rows are strictly there to take up space and have no content or style.\n *\n * @param {number} count The number of lines to delete.\n */\nhterm.Terminal.prototype.deleteLines = function(count) {\n  const cursor = this.saveCursor();\n\n  const top = cursor.row;\n  const bottom = this.getVTScrollBottom();\n\n  const maxCount = bottom - top + 1;\n  count = Math.min(count, maxCount);\n\n  const moveStart = bottom - count + 1;\n  if (count != maxCount) {\n    this.moveRows_(top, count, moveStart);\n  }\n\n  for (let i = 0; i < count; i++) {\n    this.setAbsoluteCursorPosition(moveStart + i, 0);\n    this.screen_.clearCursorRow();\n  }\n\n  this.restoreCursor(cursor);\n  this.clearCursorOverflow();\n};\n\n/**\n * Inserts the given number of spaces at the current cursor position.\n *\n * The cursor position is not changed.\n *\n * @param {number} count The number of spaces to insert.\n */\nhterm.Terminal.prototype.insertSpace = function(count) {\n  const cursor = this.saveCursor();\n\n  const ws = ' '.repeat(count || 1);\n  this.screen_.insertString(ws, ws.length);\n  this.screen_.maybeClipCurrentRow();\n  this.findBar.scheduleNotifyChanges(\n    this.scrollbackRows_.length + this.screen_.cursorPosition.row);\n\n  this.restoreCursor(cursor);\n  this.clearCursorOverflow();\n};\n\n/**\n * Forward-delete the specified number of characters starting at the cursor\n * position.\n *\n * @param {number} count The number of characters to delete.\n */\nhterm.Terminal.prototype.deleteChars = function(count) {\n  const deleted = this.screen_.deleteChars(count);\n  if (deleted && !this.screen_.textAttributes.isDefault()) {\n    const cursor = this.saveCursor();\n    this.setCursorColumn(this.screenSize.width - deleted);\n    this.screen_.insertString(' '.repeat(deleted));\n    this.restoreCursor(cursor);\n  }\n\n  this.findBar.scheduleNotifyChanges(\n    this.scrollbackRows_.length + this.screen_.cursorPosition.row);\n  this.clearCursorOverflow();\n};\n\n/**\n * Shift rows in the scroll region upwards by a given number of lines.\n *\n * New rows are inserted at the bottom of the scroll region to fill the\n * vacated rows.  The new rows not filled out with the current text attributes.\n *\n * This function does not affect the scrollback rows at all.  Rows shifted\n * off the top are lost.\n *\n * The cursor position is not altered.\n *\n * @param {number} count The number of rows to scroll.\n */\nhterm.Terminal.prototype.vtScrollUp = function(count) {\n  const cursor = this.saveCursor();\n\n  this.setAbsoluteCursorRow(this.getVTScrollTop());\n  this.deleteLines(count);\n\n  this.restoreCursor(cursor);\n};\n\n/**\n * Shift rows below the cursor down by a given number of lines.\n *\n * This function respects the current scroll region.\n *\n * New rows are inserted at the top of the scroll region to fill the\n * vacated rows.  The new rows not filled out with the current text attributes.\n *\n * This function does not affect the scrollback rows at all.  Rows shifted\n * off the bottom are lost.\n *\n * @param {number} count The number of rows to scroll.\n */\nhterm.Terminal.prototype.vtScrollDown = function(count) {\n  const cursor = this.saveCursor();\n\n  this.setAbsoluteCursorPosition(this.getVTScrollTop(), 0);\n  this.insertLines(count);\n\n  this.restoreCursor(cursor);\n};\n\n/**\n * Enable accessibility-friendly features that have a performance impact.\n *\n * This will generate additional DOM nodes in an aria-live region that will\n * cause Assitive Technology to announce the output of the terminal. It also\n * enables other features that aid assistive technology. All the features gated\n * behind this flag have a performance impact on the terminal which is why they\n * are made optional.\n *\n * @param {boolean} enabled Whether to enable accessibility-friendly features.\n */\nhterm.Terminal.prototype.setAccessibilityEnabled = function(enabled) {\n  this.accessibilityReader_.setAccessibilityEnabled(enabled);\n};\n\n/**\n * Set the cursor position.\n *\n * The cursor row is relative to the scroll region if the terminal has\n * 'origin mode' enabled, or relative to the addressable screen otherwise.\n *\n * @param {number} row The new zero-based cursor row.\n * @param {number} column The new zero-based cursor column.\n */\nhterm.Terminal.prototype.setCursorPosition = function(row, column) {\n  if (this.options_.originMode) {\n    this.setRelativeCursorPosition(row, column);\n  } else {\n    this.setAbsoluteCursorPosition(row, column);\n  }\n};\n\n/**\n * Move the cursor relative to its current position.\n *\n * @param {number} row\n * @param {number} column\n */\nhterm.Terminal.prototype.setRelativeCursorPosition = function(row, column) {\n  const scrollTop = this.getVTScrollTop();\n  row = lib.f.clamp(row + scrollTop, scrollTop, this.getVTScrollBottom());\n  column = lib.f.clamp(column, 0, this.screenSize.width - 1);\n  this.screen_.setCursorPosition(row, column);\n};\n\n/**\n * Move the cursor to the specified position.\n *\n * @param {number} row\n * @param {number} column\n */\nhterm.Terminal.prototype.setAbsoluteCursorPosition = function(row, column) {\n  row = lib.f.clamp(row, 0, this.screenSize.height - 1);\n  column = lib.f.clamp(column, 0, this.screenSize.width - 1);\n  this.screen_.setCursorPosition(row, column);\n};\n\n/**\n * Set the cursor column.\n *\n * @param {number} column The new zero-based cursor column.\n */\nhterm.Terminal.prototype.setCursorColumn = function(column) {\n  this.setAbsoluteCursorPosition(this.screen_.cursorPosition.row, column);\n};\n\n/**\n * Return the cursor column.\n *\n * @return {number} The zero-based cursor column.\n */\nhterm.Terminal.prototype.getCursorColumn = function() {\n  return this.screen_.cursorPosition.column;\n};\n\n/**\n * Set the cursor row.\n *\n * The cursor row is relative to the scroll region if the terminal has\n * 'origin mode' enabled, or relative to the addressable screen otherwise.\n *\n * @param {number} row The new cursor row.\n */\nhterm.Terminal.prototype.setAbsoluteCursorRow = function(row) {\n  this.setAbsoluteCursorPosition(row, this.screen_.cursorPosition.column);\n};\n\n/**\n * Return the cursor row.\n *\n * @return {number} The zero-based cursor row.\n */\nhterm.Terminal.prototype.getCursorRow = function() {\n  return this.screen_.cursorPosition.row;\n};\n\n/**\n * Request that the ScrollPort redraw itself soon.\n *\n * The redraw will happen asynchronously, soon after the call stack winds down.\n * Multiple calls will be coalesced into a single redraw.\n */\nhterm.Terminal.prototype.scheduleRedraw_ = function() {\n  if (this.timeouts_.redraw) {\n    return;\n  }\n\n  this.timeouts_.redraw = setTimeout(() => {\n    delete this.timeouts_.redraw;\n    this.scrollPort_.redraw_();\n  });\n};\n\n/**\n * Request that the ScrollPort be scrolled to the bottom.\n *\n * The scroll will happen asynchronously, soon after the call stack winds down.\n * Multiple calls will be coalesced into a single scroll.\n *\n * This affects the scrollbar position of the ScrollPort, and has nothing to\n * do with the VT scroll commands.\n */\nhterm.Terminal.prototype.scheduleScrollDown_ = function() {\n  if (this.timeouts_.scrollDown) {\n    return;\n  }\n\n  this.timeouts_.scrollDown = setTimeout(() => {\n    delete this.timeouts_.scrollDown;\n    this.scrollPort_.scrollRowToBottom(this.getRowCount());\n  }, 10);\n};\n\n/**\n * Move the cursor up a specified number of rows.\n *\n * @param {number} count The number of rows to move the cursor.\n */\nhterm.Terminal.prototype.cursorUp = function(count) {\n  this.cursorDown(-(count || 1));\n};\n\n/**\n * Move the cursor down a specified number of rows.\n *\n * @param {number} count The number of rows to move the cursor.\n */\nhterm.Terminal.prototype.cursorDown = function(count) {\n  count = count || 1;\n  const minHeight = (this.options_.originMode ? this.getVTScrollTop() : 0);\n  const maxHeight = (this.options_.originMode ? this.getVTScrollBottom() :\n                     this.screenSize.height - 1);\n\n  const row = lib.f.clamp(this.screen_.cursorPosition.row + count,\n                          minHeight, maxHeight);\n  this.setAbsoluteCursorRow(row);\n};\n\n/**\n * Move the cursor left a specified number of columns.\n *\n * If reverse wraparound mode is enabled and the previous row wrapped into\n * the current row then we back up through the wraparound as well.\n *\n * @param {number} count The number of columns to move the cursor.\n */\nhterm.Terminal.prototype.cursorLeft = function(count) {\n  count = count || 1;\n\n  if (count < 1) {\n    return;\n  }\n\n  const currentColumn = this.screen_.cursorPosition.column;\n  if (this.options_.reverseWraparound) {\n    if (this.screen_.cursorPosition.overflow) {\n      // If this cursor is in the right margin, consume one count to get it\n      // back to the last column.  This only applies when we're in reverse\n      // wraparound mode.\n      count--;\n      this.clearCursorOverflow();\n\n      if (!count) {\n        return;\n      }\n    }\n\n    let newRow = this.screen_.cursorPosition.row;\n    let newColumn = currentColumn - count;\n    if (newColumn < 0) {\n      newRow = newRow - Math.floor(count / this.screenSize.width) - 1;\n      if (newRow < 0) {\n        // xterm also wraps from row 0 to the last row.\n        newRow = this.screenSize.height + newRow % this.screenSize.height;\n      }\n      newColumn = this.screenSize.width + newColumn % this.screenSize.width;\n    }\n\n    this.setCursorPosition(Math.max(newRow, 0), newColumn);\n\n  } else {\n    const newColumn = Math.max(currentColumn - count, 0);\n    this.setCursorColumn(newColumn);\n  }\n};\n\n/**\n * Move the cursor right a specified number of columns.\n *\n * @param {number} count The number of columns to move the cursor.\n */\nhterm.Terminal.prototype.cursorRight = function(count) {\n  count = count || 1;\n\n  if (count < 1) {\n    return;\n  }\n\n  const column = lib.f.clamp(this.screen_.cursorPosition.column + count,\n                             0, this.screenSize.width - 1);\n  this.setCursorColumn(column);\n};\n\n/**\n * Reverse the foreground and background colors of the terminal.\n *\n * This only affects text that was drawn with no attributes.\n *\n * TODO(rginda): Test xterm to see if reverse is respected for text that has\n * been drawn with attributes that happen to coincide with the default\n * 'no-attribute' colors.  My guess is probably not.\n *\n * @param {boolean} state The state to set.\n */\nhterm.Terminal.prototype.setReverseVideo = function(state) {\n  this.options_.reverseVideo = state;\n  if (state) {\n    this.setRgbColorCssVar('foreground-color', this.backgroundColor_);\n    this.setRgbColorCssVar('background-color', this.foregroundColor_);\n  } else {\n    this.setRgbColorCssVar('foreground-color', this.foregroundColor_);\n    this.setRgbColorCssVar('background-color', this.backgroundColor_);\n  }\n};\n\n/**\n * Ring the terminal bell.\n *\n * This will not play the bell audio more than once per second.\n */\nhterm.Terminal.prototype.ringBell = function() {\n  this.cursorNode_.style.backgroundColor = 'rgb(var(--hterm-foreground-color))';\n\n  setTimeout(() => this.restyleCursor_(), 200);\n\n  // bellSquelchTimeout_ affects both audio and notification bells.\n  if (this.bellSquelchTimeout_) {\n    return;\n  }\n\n  if (this.bellAudio_.getAttribute('src')) {\n    this.bellAudio_.play();\n    this.bellSequelchTimeout_ = setTimeout(() => {\n        this.bellSquelchTimeout_ = null;\n      }, 500);\n  } else {\n    this.bellSquelchTimeout_ = null;\n  }\n\n  if (this.desktopNotificationBell_ && !this.document_.hasFocus()) {\n    const n = hterm.notify();\n    this.bellNotificationList_.push(n);\n    // TODO: Should we try to raise the window here?\n    n.onclick = () => this.closeBellNotifications_();\n  }\n};\n\n/**\n * Set the origin mode bit.\n *\n * If origin mode is on, certain VT cursor and scrolling commands measure their\n * row parameter relative to the VT scroll region.  Otherwise, row 0 corresponds\n * to the top of the addressable screen.\n *\n * Defaults to off.\n *\n * @param {boolean} state True to set origin mode, false to unset.\n */\nhterm.Terminal.prototype.setOriginMode = function(state) {\n  this.options_.originMode = state;\n  this.setCursorPosition(0, 0);\n};\n\n/**\n * Set the insert mode bit.\n *\n * If insert mode is on, existing text beyond the cursor position will be\n * shifted right to make room for new text.  Otherwise, new text overwrites\n * any existing text.\n *\n * Defaults to off.\n *\n * @param {boolean} state True to set insert mode, false to unset.\n */\nhterm.Terminal.prototype.setInsertMode = function(state) {\n  this.options_.insertMode = state;\n};\n\n/**\n * Set the auto carriage return bit.\n *\n * If auto carriage return is on then a formfeed character is interpreted\n * as a newline, otherwise it's the same as a linefeed.  The difference boils\n * down to whether or not the cursor column is reset.\n *\n * @param {boolean} state The state to set.\n */\nhterm.Terminal.prototype.setAutoCarriageReturn = function(state) {\n  this.options_.autoCarriageReturn = state;\n};\n\n/**\n * Set the wraparound mode bit.\n *\n * If wraparound mode is on, certain VT commands will allow the cursor to wrap\n * to the start of the following row.  Otherwise, the cursor is clamped to the\n * end of the screen and attempts to write past it are ignored.\n *\n * Defaults to on.\n *\n * @param {boolean} state True to set wraparound mode, false to unset.\n */\nhterm.Terminal.prototype.setWraparound = function(state) {\n  this.options_.wraparound = state;\n};\n\n/**\n * Set the reverse-wraparound mode bit.\n *\n * If wraparound mode is off, certain VT commands will allow the cursor to wrap\n * to the end of the previous row.  Otherwise, the cursor is clamped to column\n * 0.\n *\n * Defaults to off.\n *\n * @param {boolean} state True to set reverse-wraparound mode, false to unset.\n */\nhterm.Terminal.prototype.setReverseWraparound = function(state) {\n  this.options_.reverseWraparound = state;\n};\n\n/**\n * Selects between the primary and alternate screens.\n *\n * If alternate mode is on, the alternate screen is active.  Otherwise the\n * primary screen is active.\n *\n * Swapping screens has no effect on the scrollback buffer.\n *\n * Each screen maintains its own cursor position.\n *\n * Defaults to off.\n *\n * @param {boolean} state True to set alternate mode, false to unset.\n */\nhterm.Terminal.prototype.setAlternateMode = function(state) {\n  if (state == (this.screen_ == this.alternateScreen_)) {\n    return;\n  }\n  const oldOverrides = this.screen_.textAttributes.colorPaletteOverrides;\n  const cursor = this.saveCursor();\n  this.screen_ = state ? this.alternateScreen_ : this.primaryScreen_;\n\n  // Swap color overrides.\n  const newOverrides = this.screen_.textAttributes.colorPaletteOverrides;\n  oldOverrides.forEach((c, i) => {\n    if (!newOverrides.hasOwnProperty(i)) {\n      this.setRgbColorCssVar(`color-${i}`, this.getColorPalette(i));\n    }\n  });\n  newOverrides.forEach((c, i) => this.setRgbColorCssVar(`color-${i}`, c));\n\n  if (this.screen_.rowsArray.length &&\n      this.screen_.rowsArray[0].rowIndex != this.scrollbackRows_.length) {\n    // If the screen changed sizes while we were away, our rowIndexes may\n    // be incorrect.\n    const offset = this.scrollbackRows_.length;\n    const ary = this.screen_.rowsArray;\n    for (let i = 0; i < ary.length; i++) {\n      ary[i].rowIndex = offset + i;\n    }\n  }\n\n  // NB: We specifically do not use realizeSize_ because that's optimized to\n  // elide updates when the size is the same which is the most common scenario\n  // at this point.  We need the other cascading changes from switching the\n  // underlying screen to be processed.\n  this.realizeWidth_(this.screenSize.width);\n  this.realizeHeight_(this.screenSize.height);\n  this.scrollPort_.syncScrollHeight();\n  this.scrollPort_.invalidate();\n\n  this.restoreCursor(cursor);\n  this.scrollPort_.resize();\n};\n\n/**\n * Set the cursor-blink mode bit.\n *\n * If cursor-blink is on, the cursor will blink when it is visible.  Otherwise\n * a visible cursor does not blink.\n *\n * You should make sure to turn blinking off if you're going to dispose of a\n * terminal, otherwise you'll leak a timeout.\n *\n * Defaults to on.\n *\n * @param {boolean} state True to set cursor-blink mode, false to unset.\n */\nhterm.Terminal.prototype.setCursorBlink = function(state) {\n  this.options_.cursorBlink = state;\n\n  if (!state && this.timeouts_.cursorBlink) {\n    clearTimeout(this.timeouts_.cursorBlink);\n    delete this.timeouts_.cursorBlink;\n  }\n\n  if (this.options_.cursorVisible) {\n    this.setCursorVisible(true);\n  }\n};\n\n/**\n * Set the cursor-visible mode bit.\n *\n * If cursor-visible is on, the cursor will be visible.  Otherwise it will not.\n *\n * Defaults to on.\n *\n * @param {boolean} state True to set cursor-visible mode, false to unset.\n */\nhterm.Terminal.prototype.setCursorVisible = function(state) {\n  this.options_.cursorVisible = state;\n\n  if (!state) {\n    if (this.timeouts_.cursorBlink) {\n      clearTimeout(this.timeouts_.cursorBlink);\n      delete this.timeouts_.cursorBlink;\n    }\n    this.cursorNode_.style.opacity = '0';\n    return;\n  }\n\n  this.syncCursorPosition_();\n\n  this.cursorNode_.style.opacity = '1';\n\n  if (this.options_.cursorBlink) {\n    if (this.timeouts_.cursorBlink) {\n      return;\n    }\n\n    this.onCursorBlink_();\n  } else {\n    if (this.timeouts_.cursorBlink) {\n      clearTimeout(this.timeouts_.cursorBlink);\n      delete this.timeouts_.cursorBlink;\n    }\n  }\n};\n\n/**\n * Pause blinking temporarily.\n *\n * When the cursor moves around, it can be helpful to momentarily pause the\n * blinking.  This could be when the user is typing in things, or when they're\n * moving around with the arrow keys.\n */\nhterm.Terminal.prototype.pauseCursorBlink_ = function() {\n  if (!this.options_.cursorBlink) {\n    return;\n  }\n\n  this.cursorBlinkPause_ = true;\n\n  // If a timeout is already pending, reset the clock due to the new input.\n  if (this.timeouts_.cursorBlinkPause) {\n    clearTimeout(this.timeouts_.cursorBlinkPause);\n  }\n  // After 500ms, resume blinking.  That seems like a good balance between user\n  // input timings & responsiveness to resume.\n  this.timeouts_.cursorBlinkPause = setTimeout(() => {\n    delete this.timeouts_.cursorBlinkPause;\n    this.cursorBlinkPause_ = false;\n  }, 500);\n};\n\n/**\n * Synchronizes the visible cursor and document selection with the current\n * cursor coordinates.\n *\n * @return {boolean} True if the cursor is onscreen and synced.\n */\nhterm.Terminal.prototype.syncCursorPosition_ = function() {\n  const topRowIndex = this.scrollPort_.getTopRowIndex();\n  const bottomRowIndex = this.scrollPort_.getBottomRowIndex(topRowIndex);\n  const cursorRowIndex = this.scrollbackRows_.length +\n      this.screen_.cursorPosition.row;\n\n  let forceSyncSelection = false;\n  if (this.accessibilityReader_.accessibilityEnabled) {\n    // Report the new position of the cursor for accessibility purposes.\n    const cursorColumnIndex = this.screen_.cursorPosition.column;\n    const cursorLineText =\n        this.screen_.rowsArray[this.screen_.cursorPosition.row].innerText;\n    // This will force the selection to be sync'd to the cursor position if the\n    // user has pressed a key. Generally we would only sync the cursor position\n    // when selection is collapsed so that if the user has selected something\n    // we don't clear the selection by moving the selection. However when a\n    // screen reader is used, it's intuitive for entering a key to move the\n    // selection to the cursor.\n    forceSyncSelection = this.accessibilityReader_.hasUserGesture;\n    this.accessibilityReader_.afterCursorChange(\n        cursorLineText, cursorRowIndex, cursorColumnIndex);\n  }\n\n  if (cursorRowIndex > bottomRowIndex) {\n    // Cursor is scrolled off screen, hide it.\n    this.cursorOffScreen_ = true;\n    this.cursorNode_.style.display = 'none';\n    return false;\n  }\n\n  if (this.cursorNode_.style.display == 'none') {\n    // Re-display the terminal cursor if it was hidden.\n    this.cursorOffScreen_ = false;\n    this.cursorNode_.style.display = '';\n  }\n\n  // Position the cursor using CSS variable math.  If we do the math in JS,\n  // the float math will end up being more precise than the CSS which will\n  // cause the cursor tracking to be off.\n  this.setCssVar(\n      'cursor-offset-row',\n      `${cursorRowIndex - topRowIndex} + ` +\n      `${this.scrollPort_.visibleRowTopMargin}px`);\n  this.setCssVar('cursor-offset-col', this.screen_.cursorPosition.column);\n\n  this.cursorNode_.setAttribute('title',\n                                '(' + this.screen_.cursorPosition.column +\n                                ', ' + this.screen_.cursorPosition.row +\n                                ')');\n\n  // Update the caret for a11y purposes unless FindBar has focus which it should\n  // keep.\n  if (!this.findBar.hasFocus) {\n    const selection = this.document_.getSelection();\n    if (selection && (selection.isCollapsed || forceSyncSelection)) {\n      this.screen_.syncSelectionCaret(selection);\n    }\n  }\n  return true;\n};\n\n/**\n * Adjusts the style of this.cursorNode_ according to the current cursor shape\n * and character cell dimensions.\n */\nhterm.Terminal.prototype.restyleCursor_ = function() {\n  let shape = this.cursorShape_;\n\n  if (this.cursorNode_.getAttribute('focus') == 'false') {\n    // Always show a block cursor when unfocused.\n    shape = hterm.Terminal.cursorShape.BLOCK;\n  }\n\n  const style = this.cursorNode_.style;\n\n  switch (shape) {\n    case hterm.Terminal.cursorShape.BEAM:\n      style.backgroundColor = 'transparent';\n      style.borderBottomStyle = '';\n      style.borderLeftStyle = 'solid';\n      break;\n\n    case hterm.Terminal.cursorShape.UNDERLINE:\n      style.backgroundColor = 'transparent';\n      style.borderBottomStyle = 'solid';\n      style.borderLeftStyle = '';\n      break;\n\n    default:\n      style.backgroundColor = 'var(--hterm-cursor-color)';\n      style.borderBottomStyle = '';\n      style.borderLeftStyle = '';\n      break;\n  }\n};\n\n/**\n * Synchronizes the visible cursor with the current cursor coordinates.\n *\n * The sync will happen asynchronously, soon after the call stack winds down.\n * Multiple calls will be coalesced into a single sync. This should be called\n * prior to the cursor actually changing position.\n */\nhterm.Terminal.prototype.scheduleSyncCursorPosition_ = function() {\n  if (this.timeouts_.syncCursor) {\n    return;\n  }\n\n  if (this.accessibilityReader_.accessibilityEnabled) {\n    // Report the previous position of the cursor for accessibility purposes.\n    const cursorRowIndex = this.scrollbackRows_.length +\n        this.screen_.cursorPosition.row;\n    const cursorColumnIndex = this.screen_.cursorPosition.column;\n    const cursorLineText =\n        this.screen_.rowsArray[this.screen_.cursorPosition.row].innerText;\n    this.accessibilityReader_.beforeCursorChange(\n        cursorLineText, cursorRowIndex, cursorColumnIndex);\n  }\n\n  this.timeouts_.syncCursor = setTimeout(() => {\n    this.syncCursorPosition_();\n    delete this.timeouts_.syncCursor;\n  });\n};\n\n/**\n * Show the terminal overlay.\n *\n * @see hterm.NotificationCenter.show\n * @param {string|!Node} msg The message to display.\n * @param {?number=} timeout How long to time to wait before hiding.\n */\nhterm.Terminal.prototype.showOverlay = function(msg, timeout = 1500) {\n  if (!this.ready_ || !this.notifications_) {\n    return;\n  }\n\n  this.notifications_.show(msg, {timeout});\n};\n\n/**\n * Hide the terminal overlay immediately.\n *\n * @see hterm.NotificationCenter.hide\n */\nhterm.Terminal.prototype.hideOverlay = function() {\n  this.notifications_.hide();\n};\n\n/**\n * Paste from the system clipboard to the terminal.\n *\n * Note: In Chrome, this should work unless the user has rejected the permission\n * request. In Firefox extension environment, you'll need the \"clipboardRead\"\n * permission.  In other environments, this might always fail as the browser\n * frequently blocks access for security reasons.\n *\n * @return {?boolean} If nagivator.clipboard.readText is available, the return\n *     value is always null. Otherwise, this function uses legacy pasting and\n *     returns a boolean indicating whether it is successful.\n */\nhterm.Terminal.prototype.paste = function() {\n  if (!this.alwaysUseLegacyPasting &&\n      navigator.clipboard && navigator.clipboard.readText) {\n    navigator.clipboard.readText().then((data) => this.onPasteData_(data));\n    return null;\n  } else {\n    // Legacy pasting.\n    try {\n      return this.document_.execCommand('paste');\n    } catch (firefoxException) {\n      // Ignore this.  FF 40 and older would incorrectly throw an exception if\n      // there was an error instead of returning false.\n      return false;\n    }\n  }\n};\n\n/**\n * Copy a string to the system clipboard.\n *\n * Note: If there is a selected range in the terminal, it'll be cleared.\n *\n * @param {string} str The string to copy.\n */\nhterm.Terminal.prototype.copyStringToClipboard = function(str) {\n  if (this.prefs_.get('enable-clipboard-notice')) {\n    if (!this.clipboardNotice_) {\n      this.clipboardNotice_ = this.document_.createElement('div');\n      this.clipboardNotice_.style.textAlign = 'center';\n      const copyImage = lib.resource.getData('hterm/images/copy');\n      this.clipboardNotice_.innerHTML =\n          `${copyImage}<div>${hterm.msg('NOTIFY_COPY')}</div>`;\n    }\n    setTimeout(() => this.showOverlay(this.clipboardNotice_, 500), 200);\n  }\n\n  hterm.copySelectionToClipboard(this.document_, str);\n};\n\n/**\n * Display an image.\n *\n * Either URI or buffer or blob fields must be specified.\n *\n * @param {{\n *     name: (string|undefined),\n *     size: (string|number|undefined),\n *     preserveAspectRation: (boolean|undefined),\n *     inline: (boolean|undefined),\n *     width: (string|number|undefined),\n *     height: (string|number|undefined),\n *     align: (string|undefined),\n *     url: (string|undefined),\n *     buffer: (!ArrayBuffer|undefined),\n *     blob: (!Blob|undefined),\n *     type: (string|undefined),\n * }} options The image to display.\n *   name A human readable string for the image\n *   size The size (in bytes).\n *   preserveAspectRatio Whether to preserve aspect.\n *   inline Whether to display the image inline.\n *   width The width of the image.\n *   height The height of the image.\n *   align Direction to align the image.\n *   uri The source URI for the image.\n *   buffer The ArrayBuffer image data.\n *   blob The Blob image data.\n *   type The MIME type of the image data.\n * @param {function()=} onLoad Callback when loading finishes.\n * @param {function(!Event)=} onError Callback when loading fails.\n */\nhterm.Terminal.prototype.displayImage = function(options, onLoad, onError) {\n  // Make sure we're actually given a resource to display.\n  if (options.uri === undefined && options.buffer === undefined &&\n      options.blob === undefined) {\n    return;\n  }\n\n  // Set up the defaults to simplify code below.\n  if (!options.name) {\n    options.name = '';\n  }\n\n  // See if the mime type is available.  If not, guess from the filename.\n  // We don't list all possible mime types because the browser can usually\n  // guess it correctly.  So list the ones that need a bit more help.\n  if (!options.type) {\n    const ary = options.name.split('.');\n    const ext = ary[ary.length - 1].trim();\n    switch (ext) {\n      case 'svg':\n      case 'svgz':\n        options.type = 'image/svg+xml';\n        break;\n    }\n  }\n\n  // Has the user approved image display yet?\n  if (this.allowImagesInline !== true) {\n    if (this.allowImagesInline === false) {\n      this.showOverlay(hterm.msg('POPUP_INLINE_IMAGE_DISABLED', [],\n                       'Inline Images Disabled'));\n      return;\n    }\n\n    // Show a prompt.\n    let button;\n    const span = this.document_.createElement('span');\n\n    const label = this.document_.createElement('p');\n    label.innerText = hterm.msg('POPUP_INLINE_IMAGE', [], 'Inline Images');\n    label.style.textAlign = 'center';\n    span.appendChild(label);\n\n    button = this.document_.createElement('input');\n    button.type = 'button';\n    button.value = hterm.msg('BUTTON_BLOCK', [], 'block');\n    button.addEventListener('click', () => {\n      this.prefs_.set('allow-images-inline', false);\n      this.hideOverlay();\n    });\n    span.appendChild(button);\n\n    span.appendChild(new Text(' '));\n\n    button = this.document_.createElement('input');\n    button.type = 'button';\n    button.value = hterm.msg('BUTTON_ALLOW_SESSION', [], 'allow this session');\n    button.addEventListener('click', () => {\n      this.allowImagesInline = true;\n      this.hideOverlay();\n    });\n    span.appendChild(button);\n\n    span.appendChild(new Text(' '));\n\n    button = this.document_.createElement('input');\n    button.type = 'button';\n    button.value = hterm.msg('BUTTON_ALLOW_ALWAYS', [], 'always allow');\n    button.addEventListener('click', () => {\n      this.prefs_.set('allow-images-inline', true);\n      this.hideOverlay();\n    });\n    span.appendChild(button);\n\n    this.showOverlay(span, null);\n    return;\n  }\n\n  // See if we should show this object directly, or download it.\n  if (options.inline) {\n    const io = this.io.push();\n    io.showOverlay(hterm.msg('LOADING_RESOURCE_START', [options.name],\n                             'Loading $1 ...'));\n\n    // While we're loading the image, eat all the user's input.\n    io.onVTKeystroke = io.sendString = () => {};\n\n    // Initialize this new image.\n    const img = this.document_.createElement('img');\n    if (options.uri !== undefined) {\n      img.src = options.uri;\n    } else if (options.buffer !== undefined) {\n      const blob = new Blob([options.buffer], {type: options.type});\n      img.src = URL.createObjectURL(blob);\n    } else {\n      const blob = new Blob([options.blob], {type: options.type});\n      img.src = URL.createObjectURL(blob);\n    }\n    img.title = img.alt = options.name;\n\n    // Attach the image to the page to let it load/render.  It won't stay here.\n    // This is needed so it's visible and the DOM can calculate the height.  If\n    // the image is hidden or not in the DOM, the height is always 0.\n    this.document_.body.appendChild(img);\n\n    // Wait for the image to finish loading before we try moving it to the\n    // right place in the terminal.\n    img.onload = () => {\n      // Now that we have the image dimensions, figure out how to show it.\n      const screenSize = this.scrollPort_.getScreenSize();\n      img.style.objectFit = options.preserveAspectRatio ? 'scale-down' : 'fill';\n      img.style.maxWidth = `${screenSize.width}px`;\n      img.style.maxHeight = `${screenSize.height}px`;\n\n      // Parse a width/height specification.\n      const parseDim = (dim, maxDim, cssVar) => {\n        if (!dim || dim == 'auto') {\n          return '';\n        }\n\n        const ary = dim.match(/^([0-9]+)(px|%)?$/);\n        if (ary) {\n          if (ary[2] == '%') {\n            return Math.floor(maxDim * ary[1] / 100) + 'px';\n          } else if (ary[2] == 'px') {\n            return dim;\n          } else {\n            return `calc(${dim} * var(${cssVar}))`;\n          }\n        }\n\n        return '';\n      };\n      img.style.width = parseDim(\n          options.width, screenSize.width, '--hterm-charsize-width');\n      img.style.height = parseDim(\n          options.height, screenSize.height, '--hterm-charsize-height');\n\n      // Figure out how many rows the image occupies, then add that many.\n      // Note: This count will be inaccurate if the font size changes on us.\n      const padRows = Math.ceil(img.clientHeight /\n                                this.scrollPort_.characterSize.height);\n      for (let i = 0; i < padRows; ++i) {\n        this.newLine();\n      }\n\n      // Update the max height in case the user shrinks the character size.\n      img.style.maxHeight = `calc(${padRows} * var(--hterm-charsize-height))`;\n\n      // Move the image to the last row.  This way when we scroll up, it doesn't\n      // disappear when the first row gets clipped.  It will disappear when we\n      // scroll down and the last row is clipped ...\n      this.document_.body.removeChild(img);\n      // Create a wrapper node so we can do an absolute in a relative position.\n      // This helps with rounding errors between JS & CSS counts.\n      const div = this.document_.createElement('div');\n      div.style.position = 'relative';\n      div.style.textAlign = options.align || '';\n      img.style.position = 'absolute';\n      img.style.bottom = 'calc(0px - var(--hterm-charsize-height))';\n      div.appendChild(img);\n      const row = this.getRowNode(this.scrollbackRows_.length +\n                                  this.getCursorRow() - 1);\n      row.appendChild(div);\n\n      // Now that the image has been read, we can revoke the source.\n      if (options.uri === undefined) {\n        URL.revokeObjectURL(img.src);\n      }\n\n      io.hideOverlay();\n      io.pop();\n\n      if (onLoad) {\n        onLoad();\n      }\n    };\n\n    // If we got a malformed image, give up.\n    img.onerror = (e) => {\n      this.document_.body.removeChild(img);\n      io.showOverlay(hterm.msg('LOADING_RESOURCE_FAILED', [options.name],\n                               'Loading $1 failed'));\n      io.pop();\n\n      if (onError) {\n        onError(e);\n      }\n    };\n  } else {\n    // We can't use chrome.downloads.download as that requires \"downloads\"\n    // permissions, and that works only in extensions, not apps.\n    const a = this.document_.createElement('a');\n    if (options.uri !== undefined) {\n      a.href = options.uri;\n    } else if (options.buffer !== undefined) {\n      const blob = new Blob([options.buffer]);\n      a.href = URL.createObjectURL(blob);\n    } else {\n      a.href = URL.createObjectURL(lib.notNull(options.blob));\n    }\n    a.download = options.name;\n    this.document_.body.appendChild(a);\n    a.click();\n    a.remove();\n    if (options.uri === undefined) {\n      URL.revokeObjectURL(a.href);\n    }\n  }\n};\n\n/**\n * Returns the selected text, or null if no text is selected.\n *\n * @return {string|null}\n */\nhterm.Terminal.prototype.getSelectionText = function() {\n  const selection = this.scrollPort_.selection;\n  selection.sync();\n\n  if (selection.isCollapsed) {\n    return null;\n  }\n\n  // Start offset measures from the beginning of the line.\n  let startOffset = selection.startOffset;\n  let node = selection.startNode;\n\n  // If an x-row isn't selected, |node| will be null.\n  if (!node) {\n    return null;\n  }\n\n  if (node.nodeName != 'X-ROW') {\n    // If the selection doesn't start on an x-row node, then it must be\n    // somewhere inside the x-row.  Add any characters from previous siblings\n    // into the start offset.\n\n    if (node.nodeName == '#text' && node.parentNode.nodeName == 'SPAN') {\n      // If node is the text node in a styled span, move up to the span node.\n      node = node.parentNode;\n    }\n\n    while (node.previousSibling) {\n      node = node.previousSibling;\n      startOffset += hterm.TextAttributes.nodeWidth(node);\n    }\n  }\n\n  // End offset measures from the end of the line.\n  let endOffset =\n      hterm.TextAttributes.nodeWidth(lib.notNull(selection.endNode)) -\n      selection.endOffset;\n  node = selection.endNode;\n\n  if (node.nodeName != 'X-ROW') {\n    // If the selection doesn't end on an x-row node, then it must be\n    // somewhere inside the x-row.  Add any characters from following siblings\n    // into the end offset.\n\n    if (node.nodeName == '#text' && node.parentNode.nodeName == 'SPAN') {\n      // If node is the text node in a styled span, move up to the span node.\n      node = node.parentNode;\n    }\n\n    while (node.nextSibling) {\n      node = node.nextSibling;\n      endOffset += hterm.TextAttributes.nodeWidth(node);\n    }\n  }\n\n  const rv = this.getRowsText(selection.startRow.rowIndex,\n                              selection.endRow.rowIndex + 1);\n  return lib.wc.substring(rv, startOffset, lib.wc.strWidth(rv) - endOffset);\n};\n\n/**\n * Copy the current selection to the system clipboard, then clear it after a\n * short delay.\n */\nhterm.Terminal.prototype.copySelectionToClipboard = function() {\n  const text = this.getSelectionText();\n  if (text != null) {\n    this.copyStringToClipboard(text);\n  }\n};\n\n/**\n * Show overlay with current terminal size.\n */\nhterm.Terminal.prototype.overlaySize = function() {\n  if (this.prefs_.get('enable-resize-status')) {\n    this.showOverlay(`${this.screenSize.width} × ${this.screenSize.height}`);\n  }\n};\n\n/**\n * Invoked by hterm.Terminal.Keyboard when a VT keystroke is detected.\n *\n * @param {string} string The VT string representing the keystroke, in UTF-16.\n */\nhterm.Terminal.prototype.onVTKeystroke = function(string) {\n  if (this.scrollOnKeystroke_) {\n    this.scrollPort_.scrollRowToBottom(this.getRowCount());\n  }\n\n  this.pauseCursorBlink_();\n\n  this.io.onVTKeystroke(string);\n};\n\n/**\n * Open the selected url.\n */\nhterm.Terminal.prototype.openSelectedUrl_ = function() {\n  let str = this.getSelectionText();\n\n  // If there is no selection, try and expand wherever they clicked.\n  if (str == null) {\n    this.screen_.expandSelectionForUrl(this.document_.getSelection());\n    str = this.getSelectionText();\n\n    // If clicking in empty space, return.\n    if (str == null) {\n      return;\n    }\n  }\n\n  // Make sure URL is valid before opening.\n  if (str.length > 2048 || str.search(/[\\s[\\](){}<>\"'\\\\^`]/) >= 0) {\n    return;\n  }\n\n  // If the URI isn't anchored, it'll open relative to the extension.\n  // We have no way of knowing the correct schema, so assume http.\n  if (str.search('^[a-zA-Z][a-zA-Z0-9+.-]*://') < 0) {\n    // We have to whitelist a few protocols that lack authorities and thus\n    // never use the //.  Like mailto.\n    switch (str.split(':', 1)[0]) {\n      case 'mailto':\n        break;\n      default:\n        str = 'http://' + str;\n        break;\n    }\n  }\n\n  hterm.openUrl(str);\n};\n\n/**\n * Manage the automatic mouse hiding behavior while typing.\n *\n * @param {?boolean=} v Whether to enable automatic hiding.\n */\nhterm.Terminal.prototype.setAutomaticMouseHiding = function(v = null) {\n  // Since Chrome OS & macOS do this by default everywhere, we don't need to.\n  // Linux & Windows seem to leave this to specific applications to manage.\n  if (v === null) {\n    v = (hterm.os != 'cros' && hterm.os != 'mac');\n  }\n\n  this.mouseHideWhileTyping_ = !!v;\n};\n\n/**\n * Handler for monitoring user keyboard activity.\n *\n * This isn't for processing the keystrokes directly, but for updating any\n * state that might toggle based on the user using the keyboard at all.\n *\n * @param {!KeyboardEvent} e The keyboard event that triggered us.\n */\nhterm.Terminal.prototype.onKeyboardActivity_ = function(e) {\n  // When the user starts typing, hide the mouse cursor.\n  if (this.mouseHideWhileTyping_ && !this.mouseHideDelay_) {\n    this.setCssVar('mouse-cursor-style', 'none');\n  }\n};\n\n/**\n * Add the terminalRow and terminalColumn properties to mouse events and\n * then forward on to onMouse().\n *\n * The terminalRow and terminalColumn properties contain the (row, column)\n * coordinates for the mouse event.\n *\n * @param {!MouseEvent} e The mouse event to handle.\n */\nhterm.Terminal.prototype.onMouse_ = function(e) {\n  if (e.processedByTerminalHandler_) {\n    // We register our event handlers on the document, as well as the cursor\n    // and the scroll blocker.  Mouse events that occur on the cursor or\n    // scroll blocker will also appear on the document, but we don't want to\n    // process them twice.\n    //\n    // We can't just prevent bubbling because that has other side effects, so\n    // we decorate the event object with this property instead.\n    return;\n  }\n\n  // Consume navigation events.  Button 3 is usually \"browser back\" and\n  // button 4 is \"browser forward\" which we don't want to happen.\n  if (e.button > 2) {\n    e.preventDefault();\n    // We don't return so click events can be passed to the remote below.\n  }\n\n  const reportMouseEvents = (!this.defeatMouseReports_ &&\n      this.vt.mouseReport != this.vt.MOUSE_REPORT_DISABLED);\n\n  e.processedByTerminalHandler_ = true;\n\n  // Handle auto hiding of mouse cursor while typing.\n  if (this.mouseHideWhileTyping_ && !this.mouseHideDelay_) {\n    // Make sure the mouse cursor is visible.\n    this.syncMouseStyle();\n    // This debounce isn't perfect, but should work well enough for such a\n    // simple implementation.  If the user moved the mouse, we enabled this\n    // debounce, and then moved the mouse just before the timeout, we wouldn't\n    // debounce that later movement.\n    this.mouseHideDelay_ = setTimeout(() => this.mouseHideDelay_ = null, 1000);\n  }\n\n  // One based row/column stored on the mouse event.\n  const padding = this.scrollPort_.screenPaddingSize;\n  e.terminalRow = Math.floor(\n      (e.clientY - this.scrollPort_.visibleRowTopMargin - padding) /\n      this.scrollPort_.characterSize.height) + 1;\n  e.terminalColumn = Math.floor(\n      (e.clientX - padding) / this.scrollPort_.characterSize.width) + 1;\n\n  // Clamp row and column.\n  e.terminalRow = lib.f.clamp(e.terminalRow, 1, this.screenSize.height);\n  e.terminalColumn = lib.f.clamp(e.terminalColumn, 1, this.screenSize.width);\n\n  // Ignore mousedown in the scrollbar area.\n  if (e.type == 'mousedown' && e.clientX >= this.scrollPort_.getScrollbarX()) {\n    return;\n  }\n\n  if (this.options_.cursorVisible && !reportMouseEvents &&\n      !this.cursorOffScreen_) {\n    // If the cursor is visible and we're not sending mouse events to the\n    // host app, then we want to hide the terminal cursor when the mouse\n    // cursor is over top.  This keeps the terminal cursor from interfering\n    // with local text selection.\n    if (e.terminalRow - 1 == this.screen_.cursorPosition.row &&\n        e.terminalColumn - 1 == this.screen_.cursorPosition.column) {\n      this.cursorNode_.style.display = 'none';\n    } else if (this.cursorNode_.style.display == 'none') {\n      this.cursorNode_.style.display = '';\n    }\n  }\n\n  if (e.type == 'mousedown') {\n    this.contextMenu.hide();\n\n    if (e.altKey || !reportMouseEvents) {\n      // If VT mouse reporting is disabled, or has been defeated with\n      // alt-mousedown, then the mouse will act on the local selection.\n      this.defeatMouseReports_ = true;\n      this.setSelectionEnabled(true);\n    } else {\n      // Otherwise we defer ownership of the mouse to the VT.\n      this.defeatMouseReports_ = false;\n      this.document_.getSelection().collapseToEnd();\n      this.setSelectionEnabled(false);\n      e.preventDefault();\n    }\n\n    // Primary button 'mousedown'.\n    if (e.button === 0) {\n      this.scrollPort_.selection.setAutoScrollEnabled(true);\n    }\n  }\n\n  if (!reportMouseEvents) {\n    if (e.type == 'dblclick') {\n      this.screen_.expandSelection(this.document_.getSelection());\n      if (this.copyOnSelect) {\n        this.copySelectionToClipboard();\n      }\n    }\n\n    // Handle clicks to open links automatically.\n    if (e.type == 'click' && !e.shiftKey && (e.ctrlKey || e.metaKey)) {\n      // Ignore links created using OSC-8 as those will open by themselves, and\n      // the visible text is most likely not the URI they want anyways.\n      if (e.target.className === 'uri-node') {\n        return;\n      }\n\n      // Debounce this event with the dblclick event.  If you try to doubleclick\n      // a URL to open it, Chrome will fire click then dblclick, but we won't\n      // have expanded the selection text at the first click event.\n      clearTimeout(this.timeouts_.openUrl);\n      this.timeouts_.openUrl = setTimeout(this.openSelectedUrl_.bind(this),\n                                          500);\n      return;\n    }\n\n    if (e.type == 'mousedown') {\n      if (e.ctrlKey && e.button == 2 /* right button */) {\n        e.preventDefault();\n        this.contextMenu.show(e, this);\n      } else if (e.button == this.mousePasteButton ||\n          (this.mouseRightClickPaste && e.button == 2 /* right button */)) {\n        if (this.paste() === false) {\n          console.warn('Could not paste manually due to web restrictions');\n        }\n      }\n    }\n\n    if (e.type == 'mouseup' && e.button == 0 && this.copyOnSelect &&\n        !this.document_.getSelection().isCollapsed) {\n      this.copySelectionToClipboard();\n    }\n\n    if ((e.type == 'mousemove' || e.type == 'mouseup') &&\n        this.scrollBlockerNode_.engaged) {\n      // Disengage the scroll-blocker after one of these events.\n      this.scrollBlockerNode_.engaged = false;\n      this.scrollBlockerNode_.style.top = '-99px';\n    }\n\n    // Emulate arrow key presses via scroll wheel events.\n    if (this.scrollWheelArrowKeys_ && !e.shiftKey &&\n        this.keyboard.applicationCursor && !this.isPrimaryScreen()) {\n      if (e.type == 'wheel') {\n        const delta =\n            this.scrollPort_.scrollWheelDelta(/** @type {!WheelEvent} */ (e));\n\n        // Helper to turn a wheel event delta into a series of key presses.\n        const deltaToArrows = (distance, charSize, arrowPos, arrowNeg) => {\n          if (distance == 0) {\n            return '';\n          }\n\n          // Convert the scroll distance into a number of rows/cols.\n          const cells = lib.f.smartFloorDivide(Math.abs(distance), charSize);\n          const data = '\\x1bO' + (distance < 0 ? arrowNeg : arrowPos);\n          return data.repeat(cells);\n        };\n\n        // The order between up/down and left/right doesn't really matter.\n        this.io.sendString(\n            // Up/down arrow keys.\n            deltaToArrows(delta.y, this.scrollPort_.characterSize.height,\n                          'A', 'B') +\n            // Left/right arrow keys.\n            deltaToArrows(delta.x, this.scrollPort_.characterSize.width,\n                          'C', 'D'),\n        );\n\n        e.preventDefault();\n      }\n    }\n  } else /* if (this.reportMouseEvents) */ {\n    if (!this.scrollBlockerNode_.engaged) {\n      if (e.type == 'mousedown') {\n        // Move the scroll-blocker into place if we want to keep the scrollport\n        // from scrolling.\n        this.scrollBlockerNode_.engaged = true;\n        this.scrollBlockerNode_.style.top = (e.clientY - 5) + 'px';\n        this.scrollBlockerNode_.style.left = (e.clientX - 5) + 'px';\n      } else if (e.type == 'mousemove') {\n        // Oh.  This means that drag-scroll was disabled AFTER the mouse down,\n        // in which case it's too late to engage the scroll-blocker.\n        this.document_.getSelection().collapseToEnd();\n        e.preventDefault();\n      }\n    }\n\n    this.onMouse(e);\n  }\n\n  if (e.type == 'mouseup') {\n    if (this.document_.getSelection().isCollapsed) {\n      // Restore this on mouseup in case it was temporarily defeated with a\n      // alt-mousedown.  Only do this when the selection is empty so that\n      // we don't immediately kill the users selection.\n      this.defeatMouseReports_ = false;\n    }\n\n    // Primary button 'mouseup'.\n    if (e.button === 0) {\n      this.scrollPort_.selection.setAutoScrollEnabled(false);\n    }\n  }\n};\n\n/**\n * Clients should override this if they care to know about mouse events.\n *\n * The event parameter will be a normal DOM mouse click event with additional\n * 'terminalRow' and 'terminalColumn' properties.\n *\n * @param {!MouseEvent} e The mouse event to handle.\n */\nhterm.Terminal.prototype.onMouse = function(e) { };\n\n/**\n * React when focus changes.\n *\n * @param {boolean} focused True if focused, false otherwise.\n */\nhterm.Terminal.prototype.onFocusChange_ = function(focused) {\n  this.cursorNode_.setAttribute('focus', focused);\n  this.restyleCursor_();\n\n  if (this.reportFocus) {\n    this.io.sendString(focused === true ? '\\x1b[I' : '\\x1b[O');\n  }\n\n  if (focused === true) {\n    this.closeBellNotifications_();\n  }\n};\n\n/**\n * React when the ScrollPort is scrolled.\n */\nhterm.Terminal.prototype.onScroll_ = function() {\n  this.scheduleSyncCursorPosition_();\n};\n\n/**\n * React when text is pasted into the scrollPort.\n *\n * @param {{text: string}} e The text of the paste event to handle.\n */\nhterm.Terminal.prototype.onPaste_ = function(e) {\n  this.onPasteData_(e.text);\n};\n\n/**\n * Handle pasted data.\n *\n * @param {string} data The pasted data.\n */\nhterm.Terminal.prototype.onPasteData_ = function(data) {\n  data = data.replace(/\\n/mg, '\\r');\n  if (this.options_.bracketedPaste) {\n    // We strip out most escape sequences as they can cause issues (like\n    // inserting an \\x1b[201~ midstream).  We pass through whitespace\n    // though: 0x08:\\b 0x09:\\t 0x0a:\\n 0x0d:\\r.\n    // This matches xterm behavior.\n    // eslint-disable-next-line no-control-regex\n    const filter = (data) => data.replace(/[\\x00-\\x07\\x0b-\\x0c\\x0e-\\x1f]/g, '');\n    data = '\\x1b[200~' + filter(data) + '\\x1b[201~';\n  }\n\n  this.io.sendString(data);\n};\n\n/**\n * React when the user tries to copy from the scrollPort.\n *\n * @param {!Event} e The DOM copy event.\n */\nhterm.Terminal.prototype.onCopy_ = function(e) {\n  if (!this.useDefaultWindowCopy) {\n    e.preventDefault();\n    setTimeout(this.copySelectionToClipboard.bind(this), 0);\n  }\n};\n\n/**\n * React when the ScrollPort is resized.\n *\n * Note: This function should not directly contain code that alters the internal\n * state of the terminal.  That kind of code belongs in realizeWidth or\n * realizeHeight, so that it can be executed synchronously in the case of a\n * programmatic width change.\n */\nhterm.Terminal.prototype.onResize_ = function() {\n  const columnCount = Math.floor(this.scrollPort_.getScreenWidth() /\n                                 this.scrollPort_.characterSize.width) || 0;\n  const rowCount = lib.f.smartFloorDivide(\n      this.scrollPort_.getScreenHeight(),\n      this.scrollPort_.characterSize.height) || 0;\n\n  if (columnCount <= 0 || rowCount <= 0) {\n    // We avoid these situations since they happen sometimes when the terminal\n    // gets removed from the document or during the initial load, and we can't\n    // deal with that.\n    // This can also happen if called before the scrollPort calculates the\n    // character size, meaning we dived by 0 above and default to 0 values.\n    return;\n  }\n\n  const isNewSize = (columnCount != this.screenSize.width ||\n                     rowCount != this.screenSize.height);\n  const wasScrolledEnd = this.scrollPort_.isScrolledEnd;\n\n  // We do this even if the size didn't change, just to be sure everything is\n  // in sync.\n  this.realizeSize_(columnCount, rowCount);\n  this.updateCssCharsize_();\n\n  if (isNewSize) {\n    this.overlaySize();\n  }\n\n  this.restyleCursor_();\n  this.scheduleSyncCursorPosition_();\n\n  if (wasScrolledEnd) {\n    this.scrollEnd();\n  }\n};\n\n/**\n * Service the cursor blink timeout.\n */\nhterm.Terminal.prototype.onCursorBlink_ = function() {\n  if (!this.options_.cursorBlink) {\n    delete this.timeouts_.cursorBlink;\n    return;\n  }\n\n  if (this.cursorNode_.getAttribute('focus') == 'false' ||\n      this.cursorNode_.style.opacity == '0' ||\n      this.cursorBlinkPause_) {\n    this.cursorNode_.style.opacity = '1';\n    this.timeouts_.cursorBlink = setTimeout(this.myOnCursorBlink_,\n                                            this.cursorBlinkCycle_[0]);\n  } else {\n    this.cursorNode_.style.opacity = '0';\n    this.timeouts_.cursorBlink = setTimeout(this.myOnCursorBlink_,\n                                            this.cursorBlinkCycle_[1]);\n  }\n};\n\n/**\n * Set the scrollbar-visible mode bit.\n *\n * If scrollbar-visible is on, the vertical scrollbar will be visible.\n * Otherwise it will not.\n *\n * Defaults to on.\n *\n * @param {boolean} state True to set scrollbar-visible mode, false to unset.\n */\nhterm.Terminal.prototype.setScrollbarVisible = function(state) {\n  this.scrollPort_.setScrollbarVisible(state);\n};\n\n/**\n * Set the scroll wheel move multiplier.  This will affect how fast the page\n * scrolls on wheel events.\n *\n * Defaults to 1.\n *\n * @param {number} multiplier The multiplier to set.\n */\nhterm.Terminal.prototype.setScrollWheelMoveMultipler = function(multiplier) {\n  this.scrollPort_.setScrollWheelMoveMultipler(multiplier);\n};\n\n/**\n * Close all web notifications created by terminal bells.\n */\nhterm.Terminal.prototype.closeBellNotifications_ = function() {\n  this.bellNotificationList_.forEach(function(n) {\n      n.close();\n    });\n  this.bellNotificationList_.length = 0;\n};\n\n/**\n * Syncs the cursor position when the scrollport gains focus.\n */\nhterm.Terminal.prototype.onScrollportFocus_ = function() {\n  // If the cursor is offscreen we set selection to the last row on the screen.\n  const topRowIndex = this.scrollPort_.getTopRowIndex();\n  const bottomRowIndex = this.scrollPort_.getBottomRowIndex(topRowIndex);\n  const selection = this.document_.getSelection();\n  if (!this.syncCursorPosition_() && selection) {\n    selection.collapse(this.getRowNode(bottomRowIndex));\n  }\n};\n\n/**\n * Clients can override this if they want to provide an options page.\n */\nhterm.Terminal.prototype.onOpenOptionsPage = function() {};\n\n\n/**\n * Called when user selects to open the options page.\n */\nhterm.Terminal.prototype.onOpenOptionsPage_ = function() {\n  this.onOpenOptionsPage();\n};\n\n\n/**\n * Client should override this if they want to handle tmux control mode DCS\n * sequence (see https://github.com/tmux/tmux/wiki/Control-Mode). We split the\n * sequence data into lines and call this once per line (the '\\r\\n' ending will\n * be stripped). When the sequence ends with ST, we call this once with null.\n *\n * @param {?string} line The line or null when the sequence ends.\n */\nhterm.Terminal.prototype.onTmuxControlModeLine = function(line) {};\n// SOURCE FILE: hterm/js/hterm_terminal_io.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Input/Output interface used by commands to communicate with the terminal.\n *\n * Commands like `nassh` and `crosh` receive an instance of this class as\n * part of their argv object.  This allows them to write to and read from the\n * terminal without exposing them to an entire hterm.Terminal instance.\n *\n * The active command must override the onVTKeystroke() and sendString() methods\n * of this class in order to receive keystrokes and send output to the correct\n * destination.\n *\n * Isolating commands from the terminal provides the following benefits:\n * - Provides a mechanism to save and restore onVTKeystroke and sendString\n *   handlers when invoking subcommands (see the push() and pop() methods).\n * - The isolation makes it easier to make changes in Terminal and supporting\n *   classes without affecting commands.\n * - In The Future commands may run in web workers where they would only be able\n *   to talk to a Terminal instance through an IPC mechanism.\n *\n * @param {!hterm.Terminal} terminal\n * @constructor\n */\nhterm.Terminal.IO = function(terminal) {\n  this.terminal_ = terminal;\n\n  // The IO object to restore on IO.pop().\n  this.previousIO_ = null;\n\n  // Any data this object accumulated while not active.\n  this.buffered_ = '';\n\n  // Decoder to maintain UTF-8 decode state.\n  this.textDecoder_ = new TextDecoder();\n};\n\n/**\n * Show the terminal overlay.\n *\n * @see hterm.NotificationCenter.show\n * @param {string|!Node} message The message to display.\n * @param {?number=} timeout How long to time to wait before hiding.\n */\nhterm.Terminal.IO.prototype.showOverlay = function(\n    message, timeout = undefined) {\n  this.terminal_.showOverlay(message, timeout);\n};\n\n/**\n * Hide the current overlay immediately.\n *\n * @see hterm.NotificationCenter.hide\n */\nhterm.Terminal.IO.prototype.hideOverlay = function() {\n  this.terminal_.hideOverlay();\n};\n\n/**\n * Open an frame in the current terminal window, pointed to the specified\n * url.\n *\n * Eventually we'll probably need size/position/decoration options.\n * The user should also be able to move/resize the frame.\n *\n * @param {string} url The URL to load in the frame.\n * @param {!Object=} options Optional frame options.  Not implemented.\n * @return {!hterm.Frame}\n */\nhterm.Terminal.IO.prototype.createFrame = function(url, options = undefined) {\n  return new hterm.Frame(this.terminal_, url, options);\n};\n\n/**\n * Change the preference profile for the terminal.\n *\n * @param {string} profileName The name of the preference profile to activate.\n */\nhterm.Terminal.IO.prototype.setTerminalProfile = function(profileName) {\n  this.terminal_.setProfile(profileName);\n};\n\n/**\n * Create a new hterm.Terminal.IO instance and make it active on the Terminal\n * object associated with this instance.\n *\n * This is used to pass control of the terminal IO off to a subcommand.  The\n * IO.pop() method can be used to restore control when the subcommand completes.\n *\n * @return {!hterm.Terminal.IO} The new foreground IO instance.\n */\nhterm.Terminal.IO.prototype.push = function() {\n  const io = new hterm.Terminal.IO(this.terminal_);\n  io.keyboardCaptured_ = this.keyboardCaptured_;\n\n  io.columnCount = this.columnCount;\n  io.rowCount = this.rowCount;\n\n  io.previousIO_ = this.terminal_.io;\n  this.terminal_.io = io;\n\n  return io;\n};\n\n/**\n * Restore the Terminal's previous IO object.\n *\n * We'll flush out any queued data.\n */\nhterm.Terminal.IO.prototype.pop = function() {\n  this.terminal_.io = this.previousIO_;\n  this.previousIO_.flush();\n};\n\n/**\n * Flush accumulated data.\n *\n * If we're not the active IO, the connected process might still be writing\n * data to us, but we won't be displaying it.  Flush any buffered data now.\n */\nhterm.Terminal.IO.prototype.flush = function() {\n  if (this.buffered_) {\n    this.terminal_.interpret(this.buffered_);\n    this.buffered_ = '';\n  }\n};\n\n/**\n * Called when data needs to be sent to the current command.\n *\n * Clients should override this to receive notification of pending data.\n *\n * @param {string} string The data to send.\n */\nhterm.Terminal.IO.prototype.sendString = function(string) {\n  // Override this.\n  console.log('Unhandled sendString: ' + string);\n};\n\n/**\n * Called when a terminal keystroke is detected.\n *\n * Clients should override this to receive notification of keystrokes.\n *\n * @param {string} string The VT key sequence.\n */\nhterm.Terminal.IO.prototype.onVTKeystroke = function(string) {\n  // Override this.\n  console.log('Unobserverd VT keystroke: ' + JSON.stringify(string));\n};\n\n/**\n * Receives notification when the terminal is resized.\n *\n * @param {number} width The new terminal width.\n * @param {number} height The new terminal height.\n */\nhterm.Terminal.IO.prototype.onTerminalResize_ = function(width, height) {\n  // eslint-disable-next-line consistent-this\n  let obj = this;\n  while (obj) {\n    obj.columnCount = width;\n    obj.rowCount = height;\n    obj = obj.previousIO_;\n  }\n\n  this.onTerminalResize(width, height);\n};\n\n/**\n * Called when terminal size is changed.\n *\n * Clients should override this to receive notification of resize.\n *\n * @param {string|number} width The new terminal width.\n * @param {string|number} height The new terminal height.\n */\nhterm.Terminal.IO.prototype.onTerminalResize = function(width, height) {\n  // Override this.\n};\n\n/**\n * Write UTF-8 data to the terminal.\n *\n * @param {!ArrayBuffer|!Array<number>} buffer The UTF-8 data to print.\n */\nhterm.Terminal.IO.prototype.writeUTF8 = function(buffer) {\n  // Handle array buffers & typed arrays by normalizing into a typed array.\n  const u8 = new Uint8Array(buffer);\n  const string = this.textDecoder_.decode(u8, {stream: true});\n  this.print(string);\n};\n\n/**\n * Write UTF-8 data to the terminal followed by CRLF.\n *\n * @param {!ArrayBuffer|!Array<number>} buffer The UTF-8 data to print.\n */\nhterm.Terminal.IO.prototype.writelnUTF8 = function(buffer) {\n  this.writeUTF8(buffer);\n  // We need to use writeUTF8 to make sure we flush the decoder state.\n  this.writeUTF8([0x0d, 0x0a]);\n};\n\n/**\n * Write a UTF-16 JavaScript string to the terminal.\n *\n * @param {string} string The string to print.\n */\nhterm.Terminal.IO.prototype.print =\nhterm.Terminal.IO.prototype.writeUTF16 = function(string) {\n  // If another process has the foreground IO, buffer new data sent to this IO\n  // (since it's in the background).  When we're made the foreground IO again,\n  // we'll flush everything.\n  if (this.terminal_.io != this) {\n    this.buffered_ += string;\n    return;\n  }\n\n  this.terminal_.interpret(string);\n};\n\n/**\n * Print a UTF-16 JavaScript string to the terminal followed by a newline.\n *\n * @param {string} string The string to print.\n */\nhterm.Terminal.IO.prototype.println =\nhterm.Terminal.IO.prototype.writelnUTF16 = function(string) {\n  this.print(string + '\\r\\n');\n};\n// SOURCE FILE: hterm/js/hterm_text_attributes.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Constructor for TextAttribute objects.\n *\n * These objects manage a set of text attributes such as foreground/\n * background color, bold, faint, italic, blink, underline, and strikethrough.\n *\n * TextAttribute instances can be used to construct a DOM container implementing\n * the current attributes, or to test an existing DOM container for\n * compatibility with the current attributes.\n *\n * @constructor\n * @param {!Document=} document The parent document to use when creating\n *     new DOM containers.\n */\nhterm.TextAttributes = function(document) {\n  this.document_ = document;\n  // These variables contain the source of the color as either:\n  // SRC_DEFAULT  (use context default)\n  // rgb(...)     (true color form)\n  // number       (representing the index from color palette to use)\n  /** @type {symbol|string|number} */\n  this.foregroundSource = this.SRC_DEFAULT;\n  /** @type {symbol|string|number} */\n  this.backgroundSource = this.SRC_DEFAULT;\n  /** @type {symbol|string|number} */\n  this.underlineSource = this.SRC_DEFAULT;\n\n  // These properties cache the value in the color table, but foregroundSource\n  // and backgroundSource contain the canonical values.\n  /** @type {symbol|string} */\n  this.foreground = this.DEFAULT_COLOR;\n  /** @type {symbol|string} */\n  this.background = this.DEFAULT_COLOR;\n  /** @type {symbol|string} */\n  this.underlineColor = this.DEFAULT_COLOR;\n\n  /** @const */\n  this.defaultForeground = 'rgb(var(--hterm-foreground-color))';\n  /** @const */\n  this.defaultBackground = 'rgb(var(--hterm-background-color))';\n\n  // Any attributes added here that do not default to falsey (e.g. undefined or\n  // null) require a bit more care.  createContainer has to always attach the\n  // attribute so matchesContainer can work correctly.\n  this.bold = false;\n  this.faint = false;\n  this.italic = false;\n  this.blink = false;\n  this.underline = false;\n  this.strikethrough = false;\n  this.inverse = false;\n  this.invisible = false;\n  this.wcNode = false;\n  this.asciiNode = true;\n  /** @type {?string} */\n  this.tileData = null;\n  /** @type {?string} */\n  this.uri = null;\n  /** @type {?string} */\n  this.uriId = null;\n\n  /**\n   * Colors set different to defaults in lib.colors.stockPalette.\n   *\n   * @type {!Array<string>}\n   */\n  this.colorPaletteOverrides = [];\n};\n\n/**\n * If false, we ignore the bold attribute.\n *\n * This is used for fonts that have a bold version that is a different size\n * than the normal weight version.\n */\nhterm.TextAttributes.prototype.enableBold = true;\n\n/**\n * If true, use bright colors (if available) for bold text.\n *\n * This setting is independent of the enableBold setting.\n */\nhterm.TextAttributes.prototype.enableBoldAsBright = true;\n\n/**\n * A sentinel constant meaning \"whatever the default color is in this context\".\n */\nhterm.TextAttributes.prototype.DEFAULT_COLOR = Symbol('DEFAULT_COLOR');\n\n/**\n * A constant string used to specify that source color is context default.\n */\nhterm.TextAttributes.prototype.SRC_DEFAULT = Symbol('SRC_DEFAULT');\n\n/**\n * The document object which should own the DOM nodes created by this instance.\n *\n * @param {!Document} document The parent document.\n */\nhterm.TextAttributes.prototype.setDocument = function(document) {\n  this.document_ = document;\n};\n\n/**\n * Create a deep copy of this object.\n *\n * @return {!hterm.TextAttributes} A deep copy of this object.\n */\nhterm.TextAttributes.prototype.clone = function() {\n  const rv = new hterm.TextAttributes();\n\n  for (const key in this) {\n    rv[key] = this[key];\n  }\n\n  rv.colorPaletteOverrides = this.colorPaletteOverrides.concat();\n  return rv;\n};\n\n/**\n * Reset the current set of attributes.\n *\n * This does not affect the palette.  Use terminal.resetColorPalette() for\n * that.  It also doesn't affect the tile data, it's not meant to.\n */\nhterm.TextAttributes.prototype.reset = function() {\n  this.foregroundSource = this.SRC_DEFAULT;\n  this.backgroundSource = this.SRC_DEFAULT;\n  this.underlineSource = this.SRC_DEFAULT;\n  this.foreground = this.DEFAULT_COLOR;\n  this.background = this.DEFAULT_COLOR;\n  this.underlineColor = this.DEFAULT_COLOR;\n  this.bold = false;\n  this.faint = false;\n  this.italic = false;\n  this.blink = false;\n  this.underline = false;\n  this.strikethrough = false;\n  this.inverse = false;\n  this.invisible = false;\n  this.wcNode = false;\n  this.asciiNode = true;\n  this.uri = null;\n  this.uriId = null;\n};\n\n/**\n * Test if the current attributes describe unstyled text.\n *\n * @return {boolean} True if the current attributes describe unstyled text.\n */\nhterm.TextAttributes.prototype.isDefault = function() {\n  return (this.foregroundSource == this.SRC_DEFAULT &&\n          this.backgroundSource == this.SRC_DEFAULT &&\n          !this.bold &&\n          !this.faint &&\n          !this.italic &&\n          !this.blink &&\n          !this.underline &&\n          !this.strikethrough &&\n          !this.inverse &&\n          !this.invisible &&\n          !this.wcNode &&\n          this.asciiNode &&\n          this.tileData == null &&\n          this.uri == null);\n};\n\n/**\n * Create a DOM container (a span or a text node) with a style to match the\n * current set of attributes.\n *\n * This method will create a plain text node if the text is unstyled, or\n * an HTML span if the text is styled.  Due to lack of monospace wide character\n * fonts on certain systems (e.g. Chrome OS), we need to put each wide character\n * in a span of CSS class '.wc-node' which has double column width.\n * Each vt_tiledata tile is also represented by a span with a single\n * character, with CSS classes '.tile' and '.tile_<glyph number>'.\n *\n * @param {string=} textContent Optional text content for the new container.\n * @return {!Node} An HTML span or text nodes styled to match the current\n *     attributes.\n */\nhterm.TextAttributes.prototype.createContainer = function(textContent = '') {\n  if (this.isDefault()) {\n    // Only attach attributes where we need an explicit default for the\n    // matchContainer logic below.\n    const node = this.document_.createTextNode(textContent);\n    node.asciiNode = true;\n    return node;\n  }\n\n  const span = this.document_.createElement('span');\n  const style = span.style;\n  const classes = [];\n\n  if (this.foreground != this.DEFAULT_COLOR) {\n    style.color = this.foreground.toString();\n  }\n\n  if (this.background != this.DEFAULT_COLOR) {\n    style.backgroundColor = this.background.toString();\n    // Make sure the span fills the line when changing the background color.\n    // Otherwise, if the line happens to be taller than this glyph, we won't\n    // fill the color completely leading to visual gaps.\n    style.display = 'inline-block';\n  }\n\n  if (this.enableBold && this.bold) {\n    style.fontWeight = 'bold';\n  }\n\n  if (this.faint) {\n    span.faint = true;\n  }\n\n  if (this.italic) {\n    style.fontStyle = 'italic';\n  }\n\n  if (this.blink) {\n    classes.push('blink-node');\n    span.blinkNode = true;\n  }\n\n  let textDecorationLine = '';\n  span.underline = this.underline;\n  if (this.underline) {\n    textDecorationLine += ' underline';\n    style.textDecorationStyle = this.underline;\n  }\n  if (this.underlineColor != this.DEFAULT_COLOR) {\n    style.textDecorationColor = this.underlineColor;\n  }\n  if (this.strikethrough) {\n    textDecorationLine += ' line-through';\n    span.strikethrough = true;\n  }\n  if (textDecorationLine) {\n    style.textDecorationLine = textDecorationLine;\n  }\n\n  if (this.wcNode) {\n    classes.push('wc-node');\n    span.wcNode = true;\n  }\n  span.asciiNode = this.asciiNode;\n\n  if (this.tileData != null) {\n    classes.push('tile');\n    classes.push('tile_' + this.tileData);\n    span.tileNode = true;\n  }\n\n  if (textContent) {\n    span.textContent = textContent;\n  }\n\n  if (this.uri) {\n    classes.push('uri-node');\n    span.uriId = this.uriId;\n    span.title = this.uri;\n    span.addEventListener('click', hterm.openUrl.bind(this, this.uri));\n  }\n\n  if (classes.length) {\n    span.className = classes.join(' ');\n  }\n\n  return span;\n};\n\n/**\n * Tests if the provided object (string, span or text node) has the same\n * style as this TextAttributes instance.\n *\n * This indicates that text with these attributes could be inserted directly\n * into the target DOM node.\n *\n * For the purposes of this method, a string is considered a text node.\n *\n * @param {string|!Node} obj The object to test.\n * @return {boolean} True if the provided container has the same style as\n *     this attributes instance.\n */\nhterm.TextAttributes.prototype.matchesContainer = function(obj) {\n  if (typeof obj == 'string' || obj.nodeType == Node.TEXT_NODE) {\n    return this.isDefault();\n  }\n\n  const style = obj.style;\n\n  // We don't want to put multiple characters in a wcNode or a tile.\n  // See the comments in createContainer.\n  // For attributes that default to false, we do not require that obj have them\n  // declared, so always normalize them using !! (to turn undefined into false)\n  // in the compares below.\n  return (!(this.wcNode || obj.wcNode) &&\n          this.asciiNode == obj.asciiNode &&\n          !(this.tileData != null || obj.tileNode) &&\n          this.uriId == obj.uriId &&\n          (this.foreground == this.DEFAULT_COLOR &&\n           style.color == '') &&\n          (this.background == this.DEFAULT_COLOR &&\n           style.backgroundColor == '') &&\n          (this.underlineColor == this.DEFAULT_COLOR &&\n           style.textDecorationColor == '') &&\n          (this.enableBold && this.bold) == !!style.fontWeight &&\n          this.blink == !!obj.blinkNode &&\n          this.italic == !!style.fontStyle &&\n          this.underline == obj.underline &&\n          !!this.strikethrough == !!obj.strikethrough);\n};\n\n/**\n * Updates foreground and background properties based on current indices and\n * other state.\n */\nhterm.TextAttributes.prototype.syncColors = function() {\n  function getBrightIndex(i) {\n    if (i < 8) {\n      // If the color is from the lower half of the ANSI 16, add 8.\n      return i + 8;\n    }\n\n    // If it's not from the 16 color palette, ignore bold requests.  This\n    // matches the behavior of gnome-terminal.\n    return i;\n  }\n\n  // Expand the default color as makes sense.\n  const getDefaultColor = (color, defaultColor) => {\n    return color == this.DEFAULT_COLOR ? defaultColor : color;\n  };\n\n  // TODO(joelhockey): Remove redundant `typeof foo == 'number'` when\n  // externs/es6.js is updated.\n  // https://github.com/google/closure-compiler/pull/3472.\n\n  if (this.enableBoldAsBright && this.bold) {\n    if (typeof this.foregroundSource == 'number' &&\n        Number.isInteger(this.foregroundSource)) {\n      this.foregroundSource = getBrightIndex(this.foregroundSource);\n    }\n  }\n\n  /**\n   * @param {symbol|string|number} source\n   * @return {symbol|string}\n   */\n  const colorFromSource = (source) => {\n    if (source == this.SRC_DEFAULT) {\n      return this.DEFAULT_COLOR;\n    } else if (typeof source == 'number' && Number.isInteger(source)) {\n      return `rgb(var(--hterm-color-${source}))`;\n    } else {\n      return source.toString();\n    }\n  };\n\n  this.foreground = colorFromSource(this.foregroundSource);\n\n  if (this.faint) {\n    if (this.foreground == this.DEFAULT_COLOR) {\n      this.foreground = 'rgba(var(--hterm-foreground-color), 0.67)';\n    } else if (typeof this.foregroundSource == 'number' &&\n        Number.isInteger(this.foregroundSource)) {\n      this.foreground =\n          `rgba(var(--hterm-color-${this.foregroundSource}), 0.67)`;\n    } else {\n      this.foreground = lib.colors.setAlpha(this.foreground.toString(), 0.67);\n    }\n  }\n\n  this.background = colorFromSource(this.backgroundSource);\n\n  // Once we've processed the bold-as-bright and faint attributes, swap.\n  // This matches xterm/gnome-terminal.\n  if (this.inverse) {\n    const swp = getDefaultColor(this.foreground, this.defaultForeground);\n    this.foreground = getDefaultColor(this.background, this.defaultBackground);\n    this.background = swp;\n  }\n\n  // Process invisible settings last to keep it simple.\n  if (this.invisible) {\n    this.foreground = this.background;\n  }\n\n  this.underlineColor = colorFromSource(this.underlineSource);\n};\n\n/**\n * Static method used to test if the provided objects (strings, spans or\n * text nodes) have the same style.\n *\n * For the purposes of this method, a string is considered a text node.\n *\n * @param {string|!Node} obj1 An object to test.\n * @param {string|!Node} obj2 Another object to test.\n * @return {boolean} True if the containers have the same style.\n */\nhterm.TextAttributes.containersMatch = function(obj1, obj2) {\n  if (typeof obj1 == 'string') {\n    return hterm.TextAttributes.containerIsDefault(obj2);\n  }\n\n  if (obj1.nodeType != obj2.nodeType) {\n    return false;\n  }\n\n  if (obj1.nodeType == Node.TEXT_NODE) {\n    return true;\n  }\n\n  const style1 = obj1.style;\n  const style2 = obj2.style;\n\n  return (style1.color == style2.color &&\n          style1.backgroundColor == style2.backgroundColor &&\n          style1.backgroundColor == style2.backgroundColor &&\n          style1.fontWeight == style2.fontWeight &&\n          style1.fontStyle == style2.fontStyle &&\n          style1.textDecoration == style2.textDecoration &&\n          style1.textDecorationColor == style2.textDecorationColor &&\n          style1.textDecorationStyle == style2.textDecorationStyle &&\n          style1.textDecorationLine == style2.textDecorationLine);\n};\n\n/**\n * Static method to test if a given DOM container represents unstyled text.\n *\n * For the purposes of this method, a string is considered a text node.\n *\n * @param {string|!Node} obj An object to test.\n * @return {boolean} True if the object is unstyled.\n */\nhterm.TextAttributes.containerIsDefault = function(obj) {\n  return typeof obj == 'string' || obj.nodeType == Node.TEXT_NODE;\n};\n\n/**\n * Static method to get the column width of a node's textContent.\n *\n * @param {!Node} node The HTML element to get the width of textContent\n *     from.\n * @return {number} The column width of the node's textContent.\n */\nhterm.TextAttributes.nodeWidth = function(node) {\n  if (!node.asciiNode) {\n    return lib.wc.strWidth(node.textContent);\n  } else {\n    return node.textContent.length;\n  }\n};\n\n/**\n * Static method to get the substr of a node's textContent.  The start index\n * and substr width are computed in column width.\n *\n * @param {!Node} node The HTML element to get the substr of textContent\n *     from.\n * @param {number} start The starting offset in column width.\n * @param {number=} width The width to capture in column width.\n * @return {string} The extracted substr of the node's textContent.\n */\nhterm.TextAttributes.nodeSubstr = function(node, start, width) {\n  if (!node.asciiNode) {\n    return lib.wc.substr(node.textContent, start, width);\n  } else {\n    return node.textContent.substr(start, width);\n  }\n};\n\n/**\n * Static method to get the substring based of a node's textContent.  The\n * start index of end index are computed in column width.\n *\n * @param {!Element} node The HTML element to get the substr of textContent\n *     from.\n * @param {number} start The starting offset in column width.\n * @param {number} end The ending offset in column width.\n * @return {string} The extracted substring of the node's textContent.\n */\nhterm.TextAttributes.nodeSubstring = function(node, start, end) {\n  if (!node.asciiNode) {\n    return lib.wc.substring(node.textContent, start, end);\n  } else {\n    return node.textContent.substring(start, end);\n  }\n};\n\n/**\n * Static method to split a string into contiguous runs of single-width\n * characters and runs of double-width characters.\n *\n * @param {string} str The string to split.\n * @return {!Array<{str:string, wcNode:boolean, asciiNode:boolean,\n *     wcStrWidth:number}>} An array of objects that contain substrings of str,\n *     where each substring is either a contiguous runs of single-width\n *     characters or a double-width character.  For objects that contain a\n *     double-width character, its wcNode property is set to true.  For objects\n *     that contain only ASCII content, its asciiNode property is set to true.\n */\nhterm.TextAttributes.splitWidecharString = function(str) {\n  const asciiRegex = new RegExp('^[\\u0020-\\u007f]*$');\n\n  // Optimize for printable ASCII.  This should only take ~1ms/MB, but cuts out\n  // 40ms+/MB when true.  If we're dealing with UTF8, then it's already slow.\n  if (asciiRegex.test(str)) {\n    return [{\n      str: str,\n      wcNode: false,\n      asciiNode: true,\n      wcStrWidth: str.length,\n    }];\n  }\n\n  // Iterate over each grapheme and merge them together in runs of similar\n  // strings.  We want to keep narrow and wide characters separate, and the\n  // fewer overall segments we have, the faster we'll be as processing each\n  // segment in the terminal print code is a bit slow.\n  const segmenter = new Intl.Segmenter(undefined, {type: 'grapheme'});\n  const it = segmenter.segment(str);\n\n  const rv = [];\n  for (const segment of it) {\n    const grapheme = segment.segment;\n    const isAscii = asciiRegex.test(grapheme);\n    const strWidth = isAscii ? 1 : lib.wc.strWidth(grapheme);\n    const isWideChar =\n        isAscii ? false : (lib.wc.charWidth(grapheme.codePointAt(0)) == 2);\n\n    // Only merge non-wide characters together.  Every wide character needs to\n    // be separate so it can get a unique container.\n    const prev = rv[rv.length - 1];\n    if (prev && !isWideChar && !prev.wcNode) {\n      prev.str += grapheme;\n      prev.wcStrWidth += strWidth;\n      prev.asciiNode = prev.asciiNode && isAscii;\n    } else {\n      rv.push({\n        str: grapheme,\n        wcNode: isWideChar,\n        asciiNode: isAscii,\n        wcStrWidth: strWidth,\n      });\n    }\n  }\n\n  return rv;\n};\n// SOURCE FILE: hterm/js/hterm_vt.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Constructor for the VT escape sequence interpreter.\n *\n * The interpreter operates on a terminal object capable of performing cursor\n * move operations, painting characters, etc.\n *\n * This interpreter is intended to be compatible with xterm, though it\n * ignores some of the more esoteric escape sequences.\n *\n * Control sequences are documented in hterm/doc/ControlSequences.md.\n *\n * @param {!hterm.Terminal} terminal Terminal to use with the interpreter.\n * @constructor\n */\nhterm.VT = function(terminal) {\n  /**\n   * The display terminal object associated with this virtual terminal.\n   */\n  this.terminal = terminal;\n\n  terminal.onMouse = this.onTerminalMouse_.bind(this);\n  this.mouseReport = this.MOUSE_REPORT_DISABLED;\n  this.mouseCoordinates = this.MOUSE_COORDINATES_X10;\n\n  // We only want to report mouse moves between cells, not between pixels.\n  this.lastMouseDragResponse_ = null;\n\n  // Parse state left over from the last parse.  You should use the parseState\n  // instance passed into your parse routine, rather than reading\n  // this.parseState_ directly.\n  this.parseState_ = new hterm.VT.ParseState(this.parseUnknown_);\n\n  // Any \"leading modifiers\" for the escape sequence, such as '?', ' ', or the\n  // other modifiers handled in this.parseCSI_.\n  this.leadingModifier_ = '';\n\n  // Any \"trailing modifiers\".  Same character set as a leading modifier,\n  // except these are found after the numeric arguments.\n  this.trailingModifier_ = '';\n\n  // Whether or not to respect the escape codes for setting terminal width.\n  this.allowColumnWidthChanges_ = false;\n\n  // The amount of time we're willing to wait for the end of an OSC sequence.\n  this.oscTimeLimit_ = 20000;\n\n  /**\n   * Whether to accept the 8-bit control characters.\n   *\n   * An 8-bit control character is one with the eighth bit set.  These\n   * didn't work on 7-bit terminals so they all have two byte equivalents.\n   * Most hosts still only use the two-byte versions.\n   *\n   * We ignore 8-bit control codes by default.  This is in order to avoid\n   * issues with \"accidental\" usage of codes that need to be terminated.\n   * The \"accident\" usually involves cat'ing binary data.\n   */\n  this.enable8BitControl = false;\n\n  /**\n   * Whether to allow the OSC 52 sequence to write to the system clipboard.\n   */\n  this.enableClipboardWrite = true;\n\n  /**\n   * Respect the host's attempt to change the cursor blink status using\n   * the DEC Private mode 12.\n   */\n  this.enableDec12 = false;\n\n  /**\n   * Respect the host's attempt to clear the scrollback buffer using CSI-J-3.\n   */\n  this.enableCsiJ3 = true;\n\n  /**\n   * If true, emit warnings when we encounter a control character or escape\n   * sequence that we don't recognize or explicitly ignore.\n   *\n   * We disable this by default as the console logging can be expensive when\n   * dumping binary files (e.g. `cat /dev/zero`) to the point where you can't\n   * recover w/out restarting.\n   */\n  this.warnUnimplemented = false;\n\n  /**\n   * The set of available character maps (used by G0...G3 below).\n   */\n  this.characterMaps = new hterm.VT.CharacterMaps();\n\n  /**\n   * The default G0...G3 character maps.\n   * We default to the US/ASCII map everywhere as that aligns with other\n   * terminals, and it makes it harder to accidentally switch to the graphics\n   * character map (Ctrl+N).  Any program that wants to use the graphics map\n   * will usually select it anyways since there's no guarantee what state any\n   * of the maps are in at any particular time.\n   */\n  this.G0 = this.G1 = this.G2 = this.G3 =\n      this.characterMaps.getMap('B');\n\n  /**\n   * The 7-bit visible character set.\n   *\n   * This is a mapping from inbound data to display glyph.  The GL set\n   * contains the 94 bytes from 0x21 to 0x7e.\n   *\n   * The default GL set is 'B', US ASCII.\n   */\n  this.GL = 'G0';\n\n  /**\n   * The 8-bit visible character set.\n   *\n   * This is a mapping from inbound data to display glyph.  The GR set\n   * contains the 94 bytes from 0xa1 to 0xfe.\n   */\n  this.GR = 'G0';\n\n  /**\n   * The current encoding of the terminal.\n   *\n   * We only support ECMA-35 and UTF-8, so go with a boolean here.\n   * The encoding can be locked too.\n   */\n  this.codingSystemUtf8_ = false;\n  this.codingSystemLocked_ = false;\n\n  // Construct a regular expression to match the known one-byte control chars.\n  // This is used in parseUnknown_ to quickly scan a string for the next\n  // control character.\n  this.cc1Pattern_ = null;\n  this.updateEncodingState_();\n};\n\n/**\n * No mouse events.\n */\nhterm.VT.prototype.MOUSE_REPORT_DISABLED = 0;\n\n/**\n * DECSET mode 9.\n *\n * Report mouse down events only.\n */\nhterm.VT.prototype.MOUSE_REPORT_PRESS = 1;\n\n/**\n * DECSET mode 1000.\n *\n * Report mouse down/up events only.\n */\nhterm.VT.prototype.MOUSE_REPORT_CLICK = 2;\n\n/**\n * DECSET mode 1002.\n *\n * Report mouse down/up and movement while a button is down.\n */\nhterm.VT.prototype.MOUSE_REPORT_DRAG = 3;\n\n/**\n * DEC mode for X10 coorindates (the default).\n */\nhterm.VT.prototype.MOUSE_COORDINATES_X10 = 0;\n\n/**\n * DEC mode 1005 for UTF-8 coorindates.\n */\nhterm.VT.prototype.MOUSE_COORDINATES_UTF8 = 1;\n\n/**\n * DEC mode 1006 for SGR coorindates.\n */\nhterm.VT.prototype.MOUSE_COORDINATES_SGR = 2;\n\n/**\n * ParseState constructor.\n *\n * This object tracks the current state of the parse.  It has fields for the\n * current buffer, position in the buffer, and the parse function.\n *\n * @param {function(!hterm.VT.ParseState)=} defaultFunction The default parser\n *     function.\n * @param {?string=} buf Optional string to use as the current buffer.\n * @constructor\n */\nhterm.VT.ParseState = function(defaultFunction, buf = null) {\n  this.defaultFunction = defaultFunction;\n  this.buf = buf;\n  this.pos = 0;\n  this.func = defaultFunction;\n  this.args = [];\n  // Whether any of the arguments in the args array have subarguments.\n  // e.g. All CSI sequences are integer arguments separated by semi-colons,\n  // so subarguments are further colon separated.\n  this.subargs = null;\n};\n\n/**\n * Reset the parser function, buffer, and position.\n *\n * @param {string=} buf Optional string to use as the current buffer.\n */\nhterm.VT.ParseState.prototype.reset = function(buf = '') {\n  this.resetParseFunction();\n  this.resetBuf(buf);\n  this.resetArguments();\n};\n\n/**\n * Reset the parser function only.\n */\nhterm.VT.ParseState.prototype.resetParseFunction = function() {\n  this.func = this.defaultFunction;\n};\n\n/**\n * Reset the buffer and position only.\n *\n * @param {?string=} buf Optional new value for buf, defaults to null.\n */\nhterm.VT.ParseState.prototype.resetBuf = function(buf = null) {\n  this.buf = buf;\n  this.pos = 0;\n};\n\n/**\n * Reset the arguments list only.\n *\n * Typically we reset arguments before parsing a sequence that uses them rather\n * than always trying to make sure they're in a good state.  This can lead to\n * confusion during debugging where args from a previous sequence appear to be\n * \"sticking around\" in other sequences (which in reality don't use args).\n *\n * @param {string=} arg_zero Optional initial value for args[0].\n */\nhterm.VT.ParseState.prototype.resetArguments = function(arg_zero = undefined) {\n  this.args.length = 0;\n  if (arg_zero !== undefined) {\n    this.args[0] = arg_zero;\n  }\n};\n\n/**\n * Parse an argument as an integer.\n *\n * This assumes the inputs are already in the proper format.  e.g. This won't\n * handle non-numeric arguments.\n *\n * An \"0\" argument is treated the same as \"\" which means the default value will\n * be applied.  This is what most terminal sequences expect.\n *\n * @param {string} argstr The argument to parse directly.\n * @param {number=} defaultValue Default value if argstr is empty.\n * @return {number} The parsed value.\n */\nhterm.VT.ParseState.prototype.parseInt = function(argstr, defaultValue) {\n  if (defaultValue === undefined) {\n    defaultValue = 0;\n  }\n\n  if (argstr) {\n    const ret = parseInt(argstr, 10);\n    // An argument of zero is treated as the default value.\n    return ret == 0 ? defaultValue : ret;\n  }\n  return defaultValue;\n};\n\n/**\n * Get an argument as an integer.\n *\n * @param {number} argnum The argument number to retrieve.\n * @param {number=} defaultValue Default value if the argument is empty.\n * @return {number} The parsed value.\n */\nhterm.VT.ParseState.prototype.iarg = function(argnum, defaultValue) {\n  return this.parseInt(this.args[argnum], defaultValue);\n};\n\n/**\n * Check whether an argument has subarguments.\n *\n * @param {number} argnum The argument number to check.\n * @return {boolean} Whether the argument has subarguments.\n */\nhterm.VT.ParseState.prototype.argHasSubargs = function(argnum) {\n  return !!(this.subargs && this.subargs[argnum]);\n};\n\n/**\n * Mark an argument as having subarguments.\n *\n * @param {number} argnum The argument number that has subarguments.\n */\nhterm.VT.ParseState.prototype.argSetSubargs = function(argnum) {\n  if (this.subargs === null) {\n    this.subargs = {};\n  }\n  this.subargs[argnum] = true;\n};\n\n/**\n * Advance the parse position.\n *\n * @param {number} count The number of bytes to advance.\n */\nhterm.VT.ParseState.prototype.advance = function(count) {\n  this.pos += count;\n};\n\n/**\n * Return the remaining portion of the buffer without affecting the parse\n * position.\n *\n * @return {string} The remaining portion of the buffer.\n */\nhterm.VT.ParseState.prototype.peekRemainingBuf = function() {\n  return this.buf.substr(this.pos);\n};\n\n/**\n * Return the next single character in the buffer without affecting the parse\n * position.\n *\n * @return {string} The next character in the buffer.\n */\nhterm.VT.ParseState.prototype.peekChar = function() {\n  return this.buf.substr(this.pos, 1);\n};\n\n/**\n * Return the next single character in the buffer and advance the parse\n * position one byte.\n *\n * @return {string} The next character in the buffer.\n */\nhterm.VT.ParseState.prototype.consumeChar = function() {\n  return this.buf.substr(this.pos++, 1);\n};\n\n/**\n * Return true if the buffer is empty, or the position is past the end.\n *\n * @return {boolean} Whether the buffer is empty, or the position is past the\n *     end.\n */\nhterm.VT.ParseState.prototype.isComplete = function() {\n  return this.buf == null || this.buf.length <= this.pos;\n};\n\n/**\n * Reset the parse state.\n */\nhterm.VT.prototype.resetParseState = function() {\n  this.parseState_.reset();\n};\n\n/**\n * Reset the VT back to baseline state.\n */\nhterm.VT.prototype.reset = function() {\n  this.G0 = this.G1 = this.G2 = this.G3 =\n      this.characterMaps.getMap('B');\n\n  this.GL = 'G0';\n  this.GR = 'G0';\n\n  this.mouseReport = this.MOUSE_REPORT_DISABLED;\n  this.mouseCoordinates = this.MOUSE_COORDINATES_X10;\n  this.lastMouseDragResponse_ = null;\n};\n\n/**\n * Handle terminal mouse events.\n *\n * See the \"Mouse Tracking\" section of [xterm].\n *\n * @param {!MouseEvent} e\n */\nhterm.VT.prototype.onTerminalMouse_ = function(e) {\n  // Short circuit a few events to avoid unnecessary processing.\n  if (this.mouseReport == this.MOUSE_REPORT_DISABLED) {\n    return;\n  } else if (this.mouseReport != this.MOUSE_REPORT_DRAG &&\n             e.type == 'mousemove') {\n    return;\n  }\n\n  // Temporary storage for our response.\n  let response;\n\n  // Modifier key state.\n  let mod = 0;\n  if (this.mouseReport != this.MOUSE_REPORT_PRESS) {\n    if (e.shiftKey) {\n      mod |= 4;\n    }\n    if (e.metaKey || (this.terminal.keyboard.altIsMeta && e.altKey)) {\n      mod |= 8;\n    }\n    if (e.ctrlKey) {\n      mod |= 16;\n    }\n  }\n\n  // X & Y coordinate reporting.\n  let x;\n  let y;\n  // Normally X10 has a limit of 255, but since we only want to emit UTF-8 valid\n  // streams, we limit ourselves to 127 to avoid setting the 8th bit.  If we do\n  // re-enable this, we should re-enable the hterm_vt_tests.js too.\n  let limit = 127;\n  switch (this.mouseCoordinates) {\n    case this.MOUSE_COORDINATES_UTF8:\n      // UTF-8 mode is the same as X10 but with higher limits.\n      limit = 2047;\n    case this.MOUSE_COORDINATES_X10:\n      // X10 reports coordinates by encoding into strings.\n      x = String.fromCharCode(lib.f.clamp(e.terminalColumn + 32, 32, limit));\n      y = String.fromCharCode(lib.f.clamp(e.terminalRow + 32, 32, limit));\n      break;\n    case this.MOUSE_COORDINATES_SGR:\n      // SGR reports coordinates by transmitting the numbers directly.\n      x = e.terminalColumn;\n      y = e.terminalRow;\n      break;\n  }\n\n  let b;\n  switch (e.type) {\n    case 'wheel':\n      // Mouse wheel is treated as button 1 or 2 plus an additional 64.\n      b = (((e.deltaY * -1) > 0) ? 0 : 1) + 64;\n      b |= mod;\n      if (this.mouseCoordinates == this.MOUSE_COORDINATES_SGR) {\n        response = `\\x1b[<${b};${x};${y}M`;\n      } else {\n        // X10 based modes (including UTF8) add 32 for legacy encoding reasons.\n        response = '\\x1b[M' + String.fromCharCode(b + 32) + x + y;\n      }\n\n      // Keep the terminal from scrolling.\n      e.preventDefault();\n      break;\n\n    case 'mousedown':\n      // Buttons are encoded as button number.\n      b = Math.min(e.button, 2);\n      // X10 based modes (including UTF8) add 32 for legacy encoding reasons.\n      if (this.mouseCoordinates != this.MOUSE_COORDINATES_SGR) {\n        b += 32;\n      }\n\n      // And mix in the modifier keys.\n      b |= mod;\n\n      if (this.mouseCoordinates == this.MOUSE_COORDINATES_SGR) {\n        response = `\\x1b[<${b};${x};${y}M`;\n      } else {\n        response = '\\x1b[M' + String.fromCharCode(b) + x + y;\n      }\n      break;\n\n    case 'mouseup':\n      if (this.mouseReport != this.MOUSE_REPORT_PRESS) {\n        if (this.mouseCoordinates == this.MOUSE_COORDINATES_SGR) {\n          // SGR mode can report the released button.\n          response = `\\x1b[<${e.button};${x};${y}m`;\n        } else {\n          // X10 mode has no indication of which button was released.\n          response = '\\x1b[M\\x23' + x + y;\n        }\n      }\n      break;\n\n    case 'mousemove':\n      if (this.mouseReport == this.MOUSE_REPORT_DRAG && e.buttons) {\n        // Standard button bits.  The XTerm protocol only reports the first\n        // button press (e.g. if left & right are pressed, right is ignored),\n        // and it only supports the first three buttons.  If none of them are\n        // pressed, then XTerm flags it as a release.  We'll do the same.\n        // X10 based modes (including UTF8) add 32 for legacy encoding reasons.\n        b = this.mouseCoordinates == this.MOUSE_COORDINATES_SGR ? 0 : 32;\n\n        // Priority here matches XTerm: left, middle, right.\n        if (e.buttons & 0x1) {\n          // Report left button.\n          b += 0;\n        } else if (e.buttons & 0x4) {\n          // Report middle button.\n          b += 1;\n        } else if (e.buttons & 0x2) {\n          // Report right button.\n          b += 2;\n        } else {\n          // Release higher buttons.\n          b += 3;\n        }\n\n        // Add 32 to indicate mouse motion.\n        b += 32;\n\n        // And mix in the modifier keys.\n        b |= mod;\n\n        if (this.mouseCoordinates == this.MOUSE_COORDINATES_SGR) {\n          response = `\\x1b[<${b};${x};${y}M`;\n        } else {\n          response = '\\x1b[M' + String.fromCharCode(b) + x + y;\n        }\n\n        // If we were going to report the same cell because we moved pixels\n        // within, suppress the report.  This is what xterm does and cuts\n        // down on duplicate messages.\n        if (this.lastMouseDragResponse_ == response) {\n          response = '';\n        } else {\n          this.lastMouseDragResponse_ = response;\n        }\n      }\n\n      break;\n\n    case 'click':\n    case 'dblclick':\n      break;\n\n    default:\n      console.error('Unknown mouse event: ' + e.type, e);\n      break;\n  }\n\n  if (response) {\n    this.terminal.io.sendString(response);\n  }\n};\n\n/**\n * Interpret a string of characters, displaying the results on the associated\n * terminal object.\n *\n * @param {string} buf The buffer to interpret.\n */\nhterm.VT.prototype.interpret = function(buf) {\n  this.parseState_.resetBuf(buf);\n\n  while (!this.parseState_.isComplete()) {\n    const func = this.parseState_.func;\n    const pos = this.parseState_.pos;\n    const buf = this.parseState_.buf;\n\n    this.parseState_.func.call(this, this.parseState_);\n\n    if (this.parseState_.func == func && this.parseState_.pos == pos &&\n        this.parseState_.buf == buf) {\n      throw new Error('Parser did not alter the state!');\n    }\n  }\n};\n\n/**\n * Set the encoding of the terminal.\n *\n * @param {string} encoding The name of the encoding to set.\n */\nhterm.VT.prototype.setEncoding = function(encoding) {\n  switch (encoding) {\n    default:\n      console.warn('Invalid value for \"terminal-encoding\": ' + encoding);\n      // Fall through.\n    case 'iso-2022':\n      this.codingSystemUtf8_ = false;\n      this.codingSystemLocked_ = false;\n      break;\n    case 'utf-8-locked':\n      this.codingSystemUtf8_ = true;\n      this.codingSystemLocked_ = true;\n      break;\n    case 'utf-8':\n      this.codingSystemUtf8_ = true;\n      this.codingSystemLocked_ = false;\n      break;\n  }\n\n  this.updateEncodingState_();\n};\n\n/**\n * Refresh internal state when the encoding changes.\n */\nhterm.VT.prototype.updateEncodingState_ = function() {\n  // If we're in UTF8 mode, don't suport 8-bit escape sequences as we'll never\n  // see those -- everything should be UTF8!\n  const cc1 = Object.keys(hterm.VT.CC1)\n      .filter((e) => !this.codingSystemUtf8_ || e.charCodeAt() < 0x80)\n      .map((e) => '\\\\x' + lib.f.zpad(e.charCodeAt().toString(16), 2))\n      .join('');\n  this.cc1Pattern_ = new RegExp(`[${cc1}]`);\n};\n\n/**\n * The default parse function.\n *\n * This will scan the string for the first 1-byte control character (C0/C1\n * characters from [CTRL]).  Any plain text coming before the code will be\n * printed to the terminal, then the control character will be dispatched.\n *\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.prototype.parseUnknown_ = function(parseState) {\n  const print = (str) => {\n    if (!this.codingSystemUtf8_ && this[this.GL].GL) {\n      str = this[this.GL].GL(str);\n    }\n\n    this.terminal.print(str);\n  };\n\n  // Search for the next contiguous block of plain text.\n  const buf = parseState.peekRemainingBuf();\n  const nextControl = buf.search(this.cc1Pattern_);\n\n  if (nextControl == 0) {\n    // We've stumbled right into a control character.\n    this.dispatch('CC1', buf.substr(0, 1), parseState);\n    parseState.advance(1);\n    return;\n  }\n\n  if (nextControl == -1) {\n    // There are no control characters in this string.\n    print(buf);\n    parseState.reset();\n    return;\n  }\n\n  print(buf.substr(0, nextControl));\n  this.dispatch('CC1', buf.substr(nextControl, 1), parseState);\n  parseState.advance(nextControl + 1);\n};\n\n/**\n * Parse a Control Sequence Introducer code and dispatch it.\n *\n * See [CSI] for some useful information about these codes.\n *\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.prototype.parseCSI_ = function(parseState) {\n  const ch = parseState.peekChar();\n  const args = parseState.args;\n\n  const finishParsing = () => {\n    // Resetting the arguments isn't strictly necessary, but it makes debugging\n    // less confusing (otherwise args will stick around until the next sequence\n    // that needs arguments).\n    parseState.resetArguments();\n    // We need to clear subargs since we explicitly set it.\n    parseState.subargs = null;\n    parseState.resetParseFunction();\n  };\n\n  if (ch >= '@' && ch <= '~') {\n    // This is the final character.\n    this.dispatch('CSI', this.leadingModifier_ + this.trailingModifier_ + ch,\n                  parseState);\n    finishParsing();\n\n  } else if (ch == ';') {\n    // Parameter delimiter.\n    if (this.trailingModifier_) {\n      // Parameter delimiter after the trailing modifier.  That's a paddlin'.\n      finishParsing();\n\n    } else {\n      if (!args.length) {\n        // They omitted the first param, we need to supply it.\n        args.push('');\n      }\n\n      args.push('');\n    }\n\n  } else if (ch >= '0' && ch <= '9' || ch == ':') {\n    // Next byte in the current parameter.\n\n    if (this.trailingModifier_) {\n      // Numeric parameter after the trailing modifier.  That's a paddlin'.\n      finishParsing();\n    } else {\n      if (!args.length) {\n        args[0] = ch;\n      } else {\n        args[args.length - 1] += ch;\n      }\n\n      // Possible sub-parameters.\n      if (ch == ':') {\n        parseState.argSetSubargs(args.length - 1);\n      }\n    }\n\n  } else if (ch >= ' ' && ch <= '?') {\n    // Modifier character.\n    if (!args.length) {\n      this.leadingModifier_ += ch;\n    } else {\n      this.trailingModifier_ += ch;\n    }\n\n  } else if (this.cc1Pattern_.test(ch)) {\n    // Control character.\n    this.dispatch('CC1', ch, parseState);\n\n  } else {\n    // Unexpected character in sequence, bail out.\n    finishParsing();\n  }\n\n  parseState.advance(1);\n};\n\n/**\n * Parse a Device Control String and dispatch it.\n *\n * See [DCS] for some useful information about these codes.\n *\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.prototype.parseDCS_ = function(parseState) {\n  const ch = parseState.peekChar();\n  const args = parseState.args;\n\n  const finishParsing = () => {\n    // Resetting the arguments isn't strictly necessary, but it makes debugging\n    // less confusing (otherwise args will stick around until the next sequence\n    // that needs arguments).\n    parseState.resetArguments();\n    parseState.resetParseFunction();\n  };\n\n  if (ch >= '@' && ch <= '~') {\n    // This is the final character.\n    parseState.advance(1);\n    this.dispatch('DCS', this.leadingModifier_ + this.trailingModifier_ + ch,\n                  parseState);\n\n    // Don't reset the parser function if it's being handled.\n    // The dispatched method must handle ST termination itself.\n    if (parseState.func === this.parseDCS_) {\n      parseState.func = this.parseUntilStringTerminator_;\n    }\n    return;\n\n  } else if (ch === ';') {\n    // Parameter delimiter.\n    if (this.trailingModifier_) {\n      // Parameter delimiter after the trailing modifier.  Abort parsing.\n      finishParsing();\n\n    } else {\n      if (!args.length) {\n        // They omitted the first param, we need to supply it.\n        args.push('');\n      }\n\n      args.push('');\n    }\n\n  } else if (ch >= '0' && ch <= '9') {\n    // Next byte in the current parameter.\n\n    if (this.trailingModifier_) {\n      // Numeric parameter after the trailing modifier.  Abort parsing.\n      finishParsing();\n    } else {\n      if (!args.length) {\n        args[0] = ch;\n      } else {\n        args[args.length - 1] += ch;\n      }\n    }\n\n  } else if (ch >= ' ' && ch <= '?') {\n    // Modifier character.\n    if (!args.length) {\n      this.leadingModifier_ += ch;\n    } else {\n      this.trailingModifier_ += ch;\n    }\n\n  } else if (this.cc1Pattern_.test(ch)) {\n    // Control character.\n    this.dispatch('CC1', ch, parseState);\n\n  } else {\n    // Unexpected character in sequence, bail out.\n    finishParsing();\n  }\n\n  parseState.advance(1);\n};\n\n\n/**\n * Parse tmux control mode data, which is terminated with ST.\n *\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.prototype.parseTmuxControlModeData_ = function(parseState) {\n  const args = parseState.args;\n  if (!args.length) {\n    // This stores the unfinished line.\n    args[0] = '';\n  }\n  // Consume as many lines as possible.\n  while (true) {\n    const args0InitialLength = args[0].length;\n    const buf = args[0] + parseState.peekRemainingBuf();\n    args[0] = '';\n\n    // Find either ST or line break.\n    // eslint-disable-next-line no-control-regex\n    const index = buf.search(/\\x1b\\\\|\\r\\n/);\n    if (index === -1) {\n      parseState.args[0] = buf;\n      parseState.resetBuf();\n      return;\n    }\n\n    const data = buf.slice(0, index);\n    parseState.advance(index + 2 - args0InitialLength);\n\n    // Check if buf ends with ST.\n    if (buf[index] === '\\x1b') {\n      if (data) {\n        console.error(`unexpected data before ST: ${data}`);\n      }\n      this.terminal.onTmuxControlModeLine(null);\n      parseState.resetArguments();\n      parseState.resetParseFunction();\n      return;\n    }\n\n    // buf ends with line break.\n    this.terminal.onTmuxControlModeLine(data);\n  }\n};\n\n/**\n * Skip over the string until the next String Terminator (ST, 'ESC \\') or\n * Bell (BEL, '\\x07').\n *\n * The string is accumulated in parseState.args[0].  Make sure to reset the\n * arguments (with parseState.resetArguments) before starting the parse.\n *\n * You can detect that parsing in complete by checking that the parse\n * function has changed back to the default parse function.\n *\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n * @return {boolean} If true, parsing is ongoing or complete.  If false, we've\n *     exceeded the max string sequence.\n */\nhterm.VT.prototype.parseUntilStringTerminator_ = function(parseState) {\n  let buf = parseState.peekRemainingBuf();\n  const args = parseState.args;\n  // Since we might modify parse state buffer locally, if we want to advance\n  // the parse state buffer later on, we need to know how many chars we added.\n  let bufInserted = 0;\n\n  if (!args.length) {\n    args[0] = '';\n    args[1] = new Date().getTime();\n  } else {\n    // If our saved buffer ends with an escape, it's because we were hoping\n    // it's an ST split across two buffers.  Move it from our saved buffer\n    // to the start of our current buffer for processing anew.\n    if (args[0].slice(-1) == '\\x1b') {\n      args[0] = args[0].slice(0, -1);\n      buf = '\\x1b' + buf;\n      bufInserted = 1;\n    }\n  }\n\n  // eslint-disable-next-line no-control-regex\n  const nextTerminator = buf.search(/[\\x1b\\x07]/);\n  const terminator = buf[nextTerminator];\n  let foundTerminator;\n\n  // If the next escape we see is not a start of a ST, fall through.  This will\n  // either be invalid (embedded escape), or we'll queue it up (wait for \\\\).\n  if (terminator == '\\x1b' && buf[nextTerminator + 1] != '\\\\') {\n    foundTerminator = false;\n  } else {\n    foundTerminator = (nextTerminator != -1);\n  }\n\n  if (!foundTerminator) {\n    // No terminator here, have to wait for the next string.\n\n    args[0] += buf;\n\n    let abortReason;\n\n    // Special case: If our buffering happens to split the ST (\\e\\\\), we have to\n    // buffer the content temporarily.  So don't reject a trailing escape here,\n    // instead we let it timeout or be rejected in the next pass.\n    if (terminator == '\\x1b' && nextTerminator != buf.length - 1) {\n      abortReason = 'embedded escape: ' + nextTerminator;\n    }\n\n    // We stuffed a Date into args[1] above.\n    const elapsedTime = new Date().getTime() - args[1];\n    if (elapsedTime > this.oscTimeLimit_) {\n      abortReason = `timeout expired: ${elapsedTime}s`;\n    }\n\n    if (abortReason) {\n      if (this.warnUnimplemented) {\n        console.log('parseUntilStringTerminator_: aborting: ' + abortReason,\n                    args[0]);\n      }\n      parseState.reset(args[0]);\n      return false;\n    }\n\n    parseState.advance(buf.length - bufInserted);\n    return true;\n  }\n\n  args[0] += buf.substr(0, nextTerminator);\n\n  parseState.resetParseFunction();\n  parseState.advance(nextTerminator +\n                     (terminator == '\\x1b' ? 2 : 1) - bufInserted);\n\n  return true;\n};\n\n/**\n * Dispatch to the function that handles a given CC1, ESC, or CSI or VT52 code.\n *\n * @param {string} type\n * @param {string} code\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.prototype.dispatch = function(type, code, parseState) {\n  const handler = hterm.VT[type][code];\n  if (!handler) {\n    if (this.warnUnimplemented) {\n      console.warn(`Unknown ${type} code: ${JSON.stringify(code)}`);\n    }\n    return;\n  }\n\n  if (handler == hterm.VT.ignore) {\n    if (this.warnUnimplemented) {\n      console.warn(`Ignored ${type} code: ${JSON.stringify(code)}`);\n    }\n    return;\n  }\n\n  if (parseState.subargs && !handler.supportsSubargs) {\n    if (this.warnUnimplemented) {\n      console.warn(`Ignored ${type} code w/subargs: ${JSON.stringify(code)}`);\n    }\n    return;\n  }\n\n  if (type == 'CC1' && code > '\\x7f' && !this.enable8BitControl) {\n    // It's kind of a hack to put this here, but...\n    //\n    // If we're dispatching a 'CC1' code, and it's got the eighth bit set,\n    // but we're not supposed to handle 8-bit codes?  Just ignore it.\n    //\n    // This prevents an errant (DCS, '\\x90'), (OSC, '\\x9d'), (PM, '\\x9e') or\n    // (APC, '\\x9f') from locking up the terminal waiting for its expected\n    // (ST, '\\x9c') or (BEL, '\\x07').\n    console.warn('Ignoring 8-bit control code: 0x' +\n                 code.charCodeAt(0).toString(16));\n    return;\n  }\n\n  handler.apply(this, [parseState, code]);\n};\n\n/**\n * Set one of the ANSI defined terminal mode bits.\n *\n * Invoked in response to SM/RM.\n *\n * Unexpected and unimplemented values are silently ignored.\n *\n * @param {string} code\n * @param {boolean} state\n */\nhterm.VT.prototype.setANSIMode = function(code, state) {\n  if (code == 4) {  // Insert Mode (IRM)\n    this.terminal.setInsertMode(state);\n  } else if (code == 20) {  // Automatic Newline (LNM)\n    this.terminal.setAutoCarriageReturn(state);\n  } else if (this.warnUnimplemented) {\n    console.warn('Unimplemented ANSI Mode: ' + code);\n  }\n};\n\n/**\n * Set or reset one of the DEC Private modes.\n *\n * Invoked in response to DECSET/DECRST.\n *\n * @param {string} code\n * @param {boolean} state\n */\nhterm.VT.prototype.setDECMode = function(code, state) {\n  switch (parseInt(code, 10)) {\n    case 1:  // DECCKM\n      this.terminal.keyboard.applicationCursor = state;\n      break;\n\n    case 3:  // DECCOLM\n      if (this.allowColumnWidthChanges_) {\n        this.terminal.setWidth(state ? 132 : 80);\n\n        this.terminal.clearHome();\n        this.terminal.setVTScrollRegion(null, null);\n      }\n      break;\n\n    case 5:  // DECSCNM\n      this.terminal.setReverseVideo(state);\n      break;\n\n    case 6:  // DECOM\n      this.terminal.setOriginMode(state);\n      break;\n\n    case 7:  // DECAWM\n      this.terminal.setWraparound(state);\n      break;\n\n    case 9:  // Report on mouse down events only (X10).\n      this.mouseReport = (\n          state ? this.MOUSE_REPORT_PRESS : this.MOUSE_REPORT_DISABLED);\n      this.terminal.syncMouseStyle();\n      break;\n\n    case 12:  // Start blinking cursor\n      if (this.enableDec12) {\n        this.terminal.setCursorBlink(state);\n      }\n      break;\n\n    case 25:  // DECTCEM\n      this.terminal.setCursorVisible(state);\n      break;\n\n    case 30:  // Show scrollbar\n      this.terminal.setScrollbarVisible(state);\n      break;\n\n    case 40:  // Allow 80 - 132 (DECCOLM) Mode\n      this.terminal.allowColumnWidthChanges_ = state;\n      break;\n\n    case 45:  // Reverse-wraparound Mode\n      this.terminal.setReverseWraparound(state);\n      break;\n\n    case 67:  // Backarrow key sends backspace (DECBKM)\n      this.terminal.keyboard.backspaceSendsBackspace = state;\n      break;\n\n    case 1000:  // Report on mouse clicks only (X11).\n      this.mouseReport = (\n          state ? this.MOUSE_REPORT_CLICK : this.MOUSE_REPORT_DISABLED);\n      this.terminal.syncMouseStyle();\n      break;\n\n    case 1002:  // Report on mouse clicks and drags\n      this.mouseReport = (\n          state ? this.MOUSE_REPORT_DRAG : this.MOUSE_REPORT_DISABLED);\n      this.terminal.syncMouseStyle();\n      break;\n\n    case 1004:  // Report on window focus change.\n      this.terminal.reportFocus = state;\n      break;\n\n    case 1005:  // Extended coordinates in UTF-8 mode.\n      this.mouseCoordinates = (\n          state ? this.MOUSE_COORDINATES_UTF8 : this.MOUSE_COORDINATES_X10);\n      break;\n\n    case 1006:  // Extended coordinates in SGR mode.\n      this.mouseCoordinates = (\n          state ? this.MOUSE_COORDINATES_SGR : this.MOUSE_COORDINATES_X10);\n      break;\n\n    case 1007:  // Enable Alternate Scroll Mode.\n      this.terminal.scrollWheelArrowKeys_ = state;\n      break;\n\n    case 1010:  // Scroll to bottom on tty output\n      this.terminal.scrollOnOutput = state;\n      break;\n\n    case 1011:  // Scroll to bottom on key press\n      this.terminal.scrollOnKeystroke = state;\n      break;\n\n    case 1036:  // Send ESC when Meta modifies a key\n      this.terminal.keyboard.metaSendsEscape = state;\n      break;\n\n    case 1039:  // Send ESC when Alt modifies a key\n      if (state) {\n        if (!this.terminal.keyboard.previousAltSendsWhat_) {\n          this.terminal.keyboard.previousAltSendsWhat_ =\n              this.terminal.keyboard.altSendsWhat;\n          this.terminal.keyboard.altSendsWhat = 'escape';\n        }\n      } else if (this.terminal.keyboard.previousAltSendsWhat_) {\n        this.terminal.keyboard.altSendsWhat =\n            this.terminal.keyboard.previousAltSendsWhat_;\n        this.terminal.keyboard.previousAltSendsWhat_ = null;\n      }\n      break;\n\n    case 47:  // Use Alternate Screen Buffer\n    case 1047:\n      this.terminal.setAlternateMode(state);\n      break;\n\n    case 1048:  // Save cursor as in DECSC.\n      if (state) {\n        this.terminal.saveCursorAndState();\n      } else {\n        this.terminal.restoreCursorAndState();\n      }\n      break;\n\n    case 1049:  // 1047 + 1048 + clear.\n      if (state) {\n        this.terminal.saveCursorAndState();\n        this.terminal.setAlternateMode(state);\n        this.terminal.clear();\n      } else {\n        this.terminal.setAlternateMode(state);\n        this.terminal.restoreCursorAndState();\n      }\n\n      break;\n\n    case 2004:  // Bracketed paste mode.\n      this.terminal.setBracketedPaste(state);\n      break;\n\n    default:\n      if (this.warnUnimplemented) {\n        console.warn('Unimplemented DEC Private Mode: ' + code);\n      }\n      break;\n  }\n};\n\n/**\n * Function shared by control characters and escape sequences that are\n * ignored.\n */\nhterm.VT.ignore = function() {};\n\n/**\n * Collection of control characters expressed in a single byte.\n *\n * This includes the characters from the C0 and C1 sets (see [CTRL]) that we\n * care about.  Two byte versions of the C1 codes are defined in the\n * hterm.VT.ESC collection.\n *\n * The 'CC1' mnemonic here refers to the fact that these are one-byte Control\n * Codes.  It's only used in this source file and not defined in any of the\n * referenced documents.\n */\nhterm.VT.CC1 = {};\n\n/**\n * Collection of two-byte and three-byte sequences starting with ESC.\n */\nhterm.VT.ESC = {};\n\n/**\n * Collection of CSI (Control Sequence Introducer) sequences.\n *\n * These sequences begin with 'ESC [', and may take zero or more arguments.\n */\nhterm.VT.CSI = {};\n\n/**\n * Collection of DCS (Device Control String) sequences.\n *\n * These sequences begin with 'ESC P', may take zero or more arguments, and are\n * normally terminated by ST.  Registered handlers have to consume the ST if\n * they change the active parser func.\n */\nhterm.VT.DCS = {};\n\n/**\n * Collection of OSC (Operating System Control) sequences.\n *\n * These sequences begin with 'ESC ]', followed by a function number and a\n * string terminated by either ST or BEL.\n */\nhterm.VT.OSC = {};\n\n/**\n * Collection of VT52 sequences.\n *\n * When in VT52 mode, other sequences are disabled.\n */\nhterm.VT.VT52 = {};\n\n/**\n * Null (NUL).\n *\n * Silently ignored.\n */\nhterm.VT.CC1['\\x00'] = hterm.VT.ignore;\n\n/**\n * Enquiry (ENQ).\n *\n * Transmit answerback message.\n *\n * The default answerback message in xterm is an empty string, so we just\n * ignore this.\n */\nhterm.VT.CC1['\\x05'] = hterm.VT.ignore;\n\n/**\n * Ring Bell (BEL).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x07'] = function() {\n  this.terminal.ringBell();\n};\n\n/**\n * Backspace (BS).\n *\n * Move the cursor to the left one character position, unless it is at the\n * left margin, in which case no action occurs.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x08'] = function() {\n  this.terminal.cursorLeft(1);\n};\n\n/**\n * Horizontal Tab (HT).\n *\n * Move the cursor to the next tab stop, or to the right margin if no further\n * tab stops are present on the line.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x09'] = function() {\n  this.terminal.forwardTabStop();\n};\n\n/**\n * Line Feed (LF).\n *\n * This code causes a line feed or a new line operation.  See Automatic\n * Newline (LNM).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x0a'] = function() {\n  this.terminal.formFeed();\n};\n\n/**\n * Vertical Tab (VT).\n *\n * Interpreted as LF.\n */\nhterm.VT.CC1['\\x0b'] = hterm.VT.CC1['\\x0a'];\n\n/**\n * Form Feed (FF).\n *\n * Interpreted as LF.\n */\nhterm.VT.CC1['\\x0c'] = hterm.VT.CC1['\\x0a'];\n\n/**\n * Carriage Return (CR).\n *\n * Move cursor to the left margin on the current line.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x0d'] = function() {\n  this.terminal.setCursorColumn(0);\n};\n\n/**\n * Shift Out (SO), aka Lock Shift 0 (LS1).\n *\n * @this {!hterm.VT}\n * Invoke G1 character set in GL.\n */\nhterm.VT.CC1['\\x0e'] = function() {\n  this.GL = 'G1';\n};\n\n/**\n * Shift In (SI), aka Lock Shift 0 (LS0).\n *\n * Invoke G0 character set in GL.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x0f'] = function() {\n  this.GL = 'G0';\n};\n\n/**\n * Transmit On (XON).\n *\n * Not currently implemented.\n *\n * TODO(rginda): Implement?\n */\nhterm.VT.CC1['\\x11'] = hterm.VT.ignore;\n\n/**\n * Transmit Off (XOFF).\n *\n * Not currently implemented.\n *\n * TODO(rginda): Implement?\n */\nhterm.VT.CC1['\\x13'] = hterm.VT.ignore;\n\n/**\n * Cancel (CAN).\n *\n * If sent during a control sequence, the sequence is immediately terminated\n * and not executed.\n *\n * It also causes the error character to be displayed.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x18'] = function(parseState) {\n  // If we've shifted in the G1 character set, shift it back out to\n  // the default character set.\n  if (this.GL == 'G1') {\n    this.GL = 'G0';\n  }\n  parseState.resetParseFunction();\n  this.terminal.print('?');\n};\n\n/**\n * Substitute (SUB).\n *\n * Interpreted as CAN.\n */\nhterm.VT.CC1['\\x1a'] = hterm.VT.CC1['\\x18'];\n\n/**\n * Escape (ESC).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x1b'] = function(parseState) {\n  function parseESC(parseState) {\n    const ch = parseState.consumeChar();\n\n    if (ch == '\\x1b') {\n      return;\n    }\n\n    this.dispatch('ESC', ch, parseState);\n\n    if (parseState.func == parseESC) {\n      parseState.resetParseFunction();\n    }\n  }\n\n  parseState.func = parseESC;\n};\n\n/**\n * Delete (DEL).\n */\nhterm.VT.CC1['\\x7f'] = hterm.VT.ignore;\n\n// 8 bit control characters and their two byte equivalents, below...\n\n/**\n * Index (IND).\n *\n * Like newline, only keep the X position\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x84'] =\nhterm.VT.ESC['D'] = function() {\n  this.terminal.lineFeed();\n};\n\n/**\n * Next Line (NEL).\n *\n * Like newline, but doesn't add lines.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x85'] =\nhterm.VT.ESC['E'] = function() {\n  this.terminal.setCursorColumn(0);\n  this.terminal.cursorDown(1);\n};\n\n/**\n * Horizontal Tabulation Set (HTS).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x88'] =\nhterm.VT.ESC['H'] = function() {\n  this.terminal.setTabStop(this.terminal.getCursorColumn());\n};\n\n/**\n * Reverse Index (RI).\n *\n * Move up one line.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x8d'] =\nhterm.VT.ESC['M'] = function() {\n  this.terminal.reverseLineFeed();\n};\n\n/**\n * Single Shift 2 (SS2).\n *\n * Select of G2 Character Set for the next character only.\n *\n * Not currently implemented.\n */\nhterm.VT.CC1['\\x8e'] =\nhterm.VT.ESC['N'] = hterm.VT.ignore;\n\n/**\n * Single Shift 3 (SS3).\n *\n * Select of G3 Character Set for the next character only.\n *\n * Not currently implemented.\n */\nhterm.VT.CC1['\\x8f'] =\nhterm.VT.ESC['O'] = hterm.VT.ignore;\n\n/**\n * Device Control String (DCS).\n *\n * Indicate a DCS sequence.  See Device-Control functions in [XTERM].\n *\n * TODO(rginda): Consider implementing DECRQSS, the rest don't seem applicable.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x90'] =\nhterm.VT.ESC['P'] = function(parseState) {\n  parseState.resetArguments();\n  this.leadingModifier_ = '';\n  this.trailingModifier_ = '';\n  parseState.func = this.parseDCS_;\n};\n\n/**\n * Start of Guarded Area (SPA).\n *\n * Will not implement.\n */\nhterm.VT.CC1['\\x96'] =\nhterm.VT.ESC['V'] = hterm.VT.ignore;\n\n/**\n * End of Guarded Area (EPA).\n *\n * Will not implement.\n */\nhterm.VT.CC1['\\x97'] =\nhterm.VT.ESC['W'] = hterm.VT.ignore;\n\n/**\n * Start of String (SOS).\n *\n * Will not implement.\n */\nhterm.VT.CC1['\\x98'] =\nhterm.VT.ESC['X'] = hterm.VT.ignore;\n\n/**\n * Single Character Introducer (SCI, also DECID).\n *\n * Return Terminal ID.  Obsolete form of 'ESC [ c' (DA).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x9a'] =\nhterm.VT.ESC['Z'] = function() {\n  this.terminal.io.sendString('\\x1b[?1;2c');\n};\n\n/**\n * Control Sequence Introducer (CSI).\n *\n * The lead into most escape sequences.  See [CSI].\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x9b'] =\nhterm.VT.ESC['['] = function(parseState) {\n  parseState.resetArguments();\n  this.leadingModifier_ = '';\n  this.trailingModifier_ = '';\n  parseState.func = this.parseCSI_;\n};\n\n/**\n * String Terminator (ST).\n *\n * Used to terminate DCS/OSC/PM/APC commands which may take string arguments.\n *\n * We don't directly handle it here, as it's only used to terminate other\n * sequences.  See the 'parseUntilStringTerminator_' method.\n */\nhterm.VT.CC1['\\x9c'] =\nhterm.VT.ESC['\\\\'] = hterm.VT.ignore;\n\n/**\n * Operating System Command (OSC).\n *\n * Commands relating to the operating system.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x9d'] =\nhterm.VT.ESC[']'] = function(parseState) {\n  parseState.resetArguments();\n\n  /**\n   * @param {!hterm.VT.ParseState} parseState The current parse state.\n   */\n  function parseOSC(parseState) {\n    if (!this.parseUntilStringTerminator_(parseState)) {\n      // The string sequence was too long.\n      return;\n    }\n\n    if (parseState.func == parseOSC) {\n      // We're not done parsing the string yet.\n      return;\n    }\n\n    // We're done.\n    const ary = parseState.args[0].match(/^(\\d+);?(.*)$/);\n    if (ary) {\n      parseState.args[0] = ary[2];\n      this.dispatch('OSC', ary[1], parseState);\n    } else {\n      console.warn('Invalid OSC: ' + JSON.stringify(parseState.args[0]));\n    }\n\n    // Resetting the arguments isn't strictly necessary, but it makes debugging\n    // less confusing (otherwise args will stick around until the next sequence\n    // that needs arguments).\n    parseState.resetArguments();\n  }\n\n  parseState.func = parseOSC;\n};\n\n/**\n * Privacy Message (PM).\n *\n * Will not implement.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x9e'] =\nhterm.VT.ESC['^'] = function(parseState) {\n  parseState.resetArguments();\n  parseState.func = this.parseUntilStringTerminator_;\n};\n\n/**\n * Application Program Control (APC).\n *\n * Will not implement.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x9f'] =\nhterm.VT.ESC['_'] = function(parseState) {\n  parseState.resetArguments();\n  parseState.func = this.parseUntilStringTerminator_;\n};\n\n/**\n * ESC \\x20 - Unclear to me where these originated, possibly in xterm.\n *\n * Not currently implemented:\n *   ESC \\x20 F - Select 7 bit escape codes in responses (S7C1T).\n *   ESC \\x20 G - Select 8 bit escape codes in responses (S8C1T).\n *                NB: We currently assume S7C1T always.\n *\n * Will not implement:\n *   ESC \\x20 L - Set ANSI conformance level 1.\n *   ESC \\x20 M - Set ANSI conformance level 2.\n *   ESC \\x20 N - Set ANSI conformance level 3.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.ESC['\\x20'] = function(parseState) {\n  parseState.func = function(parseState) {\n    const ch = parseState.consumeChar();\n    if (this.warnUnimplemented) {\n      console.warn('Unimplemented sequence: ESC 0x20 ' + ch);\n    }\n    parseState.resetParseFunction();\n  };\n};\n\n/**\n * DEC 'ESC #' sequences.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.ESC['#'] = function(parseState) {\n  parseState.func = function(parseState) {\n    const ch = parseState.consumeChar();\n    if (ch == '8') {\n      // DEC Screen Alignment Test (DECALN).\n      this.terminal.setCursorPosition(0, 0);\n      this.terminal.fill('E');\n    }\n\n    parseState.resetParseFunction();\n  };\n};\n\n/**\n * Designate Other Coding System (DOCS).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.ESC['%'] = function(parseState) {\n  parseState.func = function(parseState) {\n    let ch = parseState.consumeChar();\n\n    // If we've locked the encoding, then just eat the bytes and return.\n    if (this.codingSystemLocked_) {\n      if (ch == '/') {\n        parseState.consumeChar();\n      }\n      parseState.resetParseFunction();\n      return;\n    }\n\n    // Process the encoding requests.\n    switch (ch) {\n      case '@':\n        // Switch to ECMA 35.\n        this.setEncoding('iso-2022');\n        break;\n\n      case 'G':\n        // Switch to UTF-8.\n        this.setEncoding('utf-8');\n        break;\n\n      case '/':\n        // One way transition to something else.\n        ch = parseState.consumeChar();\n        switch (ch) {\n          case 'G':  // UTF-8 Level 1.\n          case 'H':  // UTF-8 Level 2.\n          case 'I':  // UTF-8 Level 3.\n            // We treat all UTF-8 levels the same.\n            this.setEncoding('utf-8-locked');\n            break;\n\n          default:\n            if (this.warnUnimplemented) {\n              console.warn('Unknown ESC % / argument: ' + JSON.stringify(ch));\n            }\n            break;\n        }\n        break;\n\n      default:\n        if (this.warnUnimplemented) {\n          console.warn('Unknown ESC % argument: ' + JSON.stringify(ch));\n        }\n        break;\n    }\n\n    parseState.resetParseFunction();\n  };\n};\n\n/**\n * Character Set Selection (SCS).\n *\n *   ESC ( Ps - Set G0 character set (VT100).\n *   ESC ) Ps - Set G1 character set (VT220).\n *   ESC * Ps - Set G2 character set (VT220).\n *   ESC + Ps - Set G3 character set (VT220).\n *   ESC - Ps - Set G1 character set (VT300).\n *   ESC . Ps - Set G2 character set (VT300).\n *   ESC / Ps - Set G3 character set (VT300).\n *\n * All other sequences are echoed to the terminal.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n * @param {string} code\n */\nhterm.VT.ESC['('] =\nhterm.VT.ESC[')'] =\nhterm.VT.ESC['*'] =\nhterm.VT.ESC['+'] =\nhterm.VT.ESC['-'] =\nhterm.VT.ESC['.'] =\nhterm.VT.ESC['/'] = function(parseState, code) {\n  parseState.func = function(parseState) {\n    if (parseState.peekChar() === '\\x1b') {\n      // Invalid SCS sequence, treat this ESC as a new sequence starting.\n      parseState.resetParseFunction();\n      return;\n    }\n    const ch = parseState.consumeChar();\n    const map = this.characterMaps.getMap(ch);\n    if (map !== undefined) {\n      if (code == '(') {\n        this.G0 = map;\n      } else if (code == ')' || code == '-') {\n        this.G1 = map;\n      } else if (code == '*' || code == '.') {\n        this.G2 = map;\n      } else if (code == '+' || code == '/') {\n        this.G3 = map;\n      }\n    } else if (this.warnUnimplemented) {\n      console.log('Invalid character set for \"' + code + '\": ' + ch);\n    }\n\n    parseState.resetParseFunction();\n  };\n};\n\n/**\n * Back Index (DECBI).\n *\n * VT420 and up.  Not currently implemented.\n */\nhterm.VT.ESC['6'] = hterm.VT.ignore;\n\n/**\n * Save Cursor (DECSC).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['7'] = function() {\n  this.terminal.saveCursorAndState();\n};\n\n/**\n * Restore Cursor (DECRC).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['8'] = function() {\n  this.terminal.restoreCursorAndState();\n};\n\n/**\n * Forward Index (DECFI).\n *\n * VT210 and up.  Not currently implemented.\n */\nhterm.VT.ESC['9'] = hterm.VT.ignore;\n\n/**\n * Application keypad (DECKPAM).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['='] = function() {\n  this.terminal.keyboard.applicationKeypad = true;\n};\n\n/**\n * Normal keypad (DECKPNM).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['>'] = function() {\n  this.terminal.keyboard.applicationKeypad = false;\n};\n\n/**\n * Cursor to lower left corner of screen.\n *\n * Will not implement.\n *\n * This is only recognized by xterm when the hpLowerleftBugCompat resource is\n * set.\n */\nhterm.VT.ESC['F'] = hterm.VT.ignore;\n\n/**\n * Full Reset (RIS).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['c'] = function() {\n  this.terminal.reset();\n};\n\n/**\n * Set window name. This is used by tmux (maybe also screen) and it is different\n * from window title. See the \"NAMES AND TITLES\" section in `man tmux`.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.ESC['k'] = function(parseState) {\n  function parse(parseState) {\n    if (!this.parseUntilStringTerminator_(parseState)) {\n      // The string sequence was too long.\n      return;\n    }\n\n    if (parseState.func === parse) {\n      // We're not done parsing the string yet.\n      return;\n    }\n\n    this.terminal.setWindowName(parseState.args[0]);\n    parseState.resetArguments();\n  }\n\n  parseState.resetArguments();\n  parseState.func = parse;\n};\n\n/**\n * Memory lock/unlock.\n *\n * Will not implement.\n */\nhterm.VT.ESC['l'] =\nhterm.VT.ESC['m'] = hterm.VT.ignore;\n\n/**\n * Lock Shift 2 (LS2)\n *\n * Invoke the G2 Character Set as GL.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['n'] = function() {\n  this.GL = 'G2';\n};\n\n/**\n * Lock Shift 3 (LS3)\n *\n * Invoke the G3 Character Set as GL.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['o'] = function() {\n  this.GL = 'G3';\n};\n\n/**\n * Lock Shift 2, Right (LS3R)\n *\n * Invoke the G3 Character Set as GR.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['|'] = function() {\n  this.GR = 'G3';\n};\n\n/**\n * Lock Shift 2, Right (LS2R)\n *\n * Invoke the G2 Character Set as GR.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['}'] = function() {\n  this.GR = 'G2';\n};\n\n/**\n * Lock Shift 1, Right (LS1R)\n *\n * Invoke the G1 Character Set as GR.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['~'] = function() {\n  this.GR = 'G1';\n};\n\n/**\n * Tmux control mode if the args === ['1000'].\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.DCS['p'] = function(parseState) {\n  if (parseState.args.length === 1 && parseState.args[0] === '1000') {\n    parseState.resetArguments();\n    parseState.func = this.parseTmuxControlModeData_;\n  }\n};\n\n/**\n * Change icon name and window title.\n *\n * We only change the window title.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['0'] = function(parseState) {\n  this.terminal.setWindowTitle(parseState.args[0]);\n};\n\n/**\n * Change window title.\n */\nhterm.VT.OSC['2'] = hterm.VT.OSC['0'];\n\n/**\n * Set/read color palette.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['4'] = function(parseState) {\n  // Args come in as a single 'index1;rgb1 ... ;indexN;rgbN' string.\n  // We split on the semicolon and iterate through the pairs.\n  const args = parseState.args[0].split(';');\n\n  const pairCount = Math.floor(args.length / 2);\n  const responseArray = [];\n\n  for (let pairNumber = 0; pairNumber < pairCount; ++pairNumber) {\n    const colorIndex = parseInt(args[pairNumber * 2], 10);\n    let colorValue = args[pairNumber * 2 + 1];\n\n    if (colorIndex >= lib.colors.stockPalette.length) {\n      continue;\n    }\n\n    if (colorValue == '?') {\n      // '?' means we should report back the current color value.\n      colorValue = lib.colors.rgbToX11(\n          this.terminal.getColorPalette(colorIndex));\n      if (colorValue) {\n        responseArray.push(colorIndex + ';' + colorValue);\n      }\n\n      continue;\n    }\n\n    colorValue = lib.colors.x11ToCSS(colorValue);\n    if (colorValue) {\n      this.terminal.setColorPalette(colorIndex, colorValue);\n    }\n  }\n\n  if (responseArray.length) {\n    this.terminal.io.sendString('\\x1b]4;' + responseArray.join(';') + '\\x07');\n  }\n};\n\n/**\n * Hyperlinks.\n *\n * The first argument is optional and colon separated:\n *   id=<id>\n * The second argument is the link itself.\n *\n * Calling with a non-blank URI starts it.  A blank URI stops it.\n *\n * https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['8'] = function(parseState) {\n  const args = parseState.args[0].split(';');\n  let id = null;\n  let uri = null;\n\n  if (args.length != 2 || args[1].length == 0) {\n    // Reset link.\n  } else {\n    // Pull out any colon separated parameters in the first argument.\n    const params = args[0].split(':');\n    id = '';\n    params.forEach((param) => {\n      const idx = param.indexOf('=');\n      if (idx == -1) {\n        return;\n      }\n\n      const key = param.slice(0, idx);\n      const value = param.slice(idx + 1);\n      switch (key) {\n        case 'id':\n          id = value;\n          break;\n        default:\n          // Ignore unknown keys.\n          break;\n      }\n    });\n\n    // The URI is in the second argument.\n    uri = args[1];\n  }\n\n  const attrs = this.terminal.getTextAttributes();\n  attrs.uri = uri;\n  attrs.uriId = id;\n};\n\n/**\n * iTerm2 growl notifications.\n *\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['9'] = function(parseState) {\n  // This just dumps the entire string as the message.\n  hterm.notify({'body': parseState.args[0]});\n};\n\n/**\n * Change VT100 text foreground color.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['10'] = function(parseState) {\n  // Args come in as a single string, but extra args will chain to the following\n  // OSC sequences.\n  const args = parseState.args[0].split(';');\n  if (!args) {\n    return;\n  }\n\n  const colorX11 = lib.colors.x11ToCSS(args.shift());\n  if (colorX11) {\n    this.terminal.setForegroundColor(colorX11);\n  }\n\n  if (args.length > 0) {\n    parseState.args[0] = args.join(';');\n    hterm.VT.OSC['11'].apply(this, [parseState]);\n  }\n};\n\n/**\n * Change VT100 text background color.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['11'] = function(parseState) {\n  // Args come in as a single string, but extra args will chain to the following\n  // OSC sequences.\n  const args = parseState.args[0].split(';');\n  if (!args) {\n    return;\n  }\n\n  const colorX11 = lib.colors.x11ToCSS(args.shift());\n  if (colorX11) {\n    this.terminal.setBackgroundColor(colorX11);\n  }\n\n  if (args.length > 0) {\n    parseState.args[0] = args.join(';');\n    hterm.VT.OSC['12'].apply(this, [parseState]);\n  }\n};\n\n/**\n * Change text cursor color.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['12'] = function(parseState) {\n  // Args come in as a single string, but extra args will chain to the following\n  // OSC sequences.\n  const args = parseState.args[0].split(';');\n  if (!args) {\n    return;\n  }\n\n  const colorX11 = lib.colors.x11ToCSS(args.shift());\n  if (colorX11) {\n    this.terminal.setCursorColor(colorX11);\n  }\n\n  /* Note: If we support OSC 13+, we'd chain it here.\n  if (args.length > 0) {\n    parseState.args[0] = args.join(';');\n    hterm.VT.OSC['13'].apply(this, [parseState]);\n  }\n  */\n};\n\n/**\n * Set the cursor shape.\n *\n * Parameter is expected to be in the form \"CursorShape=number\", where number is\n * one of:\n *\n *   0 - Block\n *   1 - I-Beam\n *   2 - Underline\n *\n * This is a bit of a de-facto standard supported by iTerm 2 and Konsole.  See\n * also: DECSCUSR.\n *\n * Invalid numbers will restore the cursor to the block shape.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['50'] = function(parseState) {\n  const args = parseState.args[0].match(/CursorShape=(.)/i);\n  if (!args) {\n    console.warn('Could not parse OSC 50 args: ' + parseState.args[0]);\n    return;\n  }\n\n  switch (args[1]) {\n    case '1':  // CursorShape=1: I-Beam.\n      this.terminal.setCursorShape(hterm.Terminal.cursorShape.BEAM);\n      break;\n\n    case '2':  // CursorShape=2: Underline.\n      this.terminal.setCursorShape(hterm.Terminal.cursorShape.UNDERLINE);\n      break;\n\n    default:  // CursorShape=0: Block.\n      this.terminal.setCursorShape(hterm.Terminal.cursorShape.BLOCK);\n  }\n};\n\n/**\n * Set/read system clipboard.\n *\n * Read is not implemented due to security considerations.  A remote app\n * that is able to both write and read to the clipboard could essentially\n * take over your session.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['52'] = function(parseState) {\n  if (!this.enableClipboardWrite) {\n    return;\n  }\n\n  // Args come in as a single 'clipboard;b64-data' string.  The clipboard\n  // parameter is used to select which of the X clipboards to address.  Since\n  // we're not integrating with X, we treat them all the same.\n  const args = parseState.args[0].match(/^[cps01234567]*;(.*)/);\n  if (!args) {\n    return;\n  }\n\n  let data;\n  try {\n    data = window.atob(args[1]);\n  } catch (e) {\n    // If the user sent us invalid base64 content, silently ignore it.\n    return;\n  }\n  const decoder = new TextDecoder();\n  const bytes = lib.codec.stringToCodeUnitArray(data);\n  data = decoder.decode(bytes);\n  if (data) {\n    this.terminal.copyStringToClipboard(data);\n  }\n};\n\n/**\n * Reset color palette.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['104'] = function(parseState) {\n  // If there are no args, we reset the entire palette.\n  if (!parseState.args[0]) {\n    this.terminal.resetColorPalette();\n    return;\n  }\n\n  // Args come in as a single 'index1;index2;...;indexN' string.\n  // Split on the semicolon and iterate through the colors.\n  const args = parseState.args[0].split(';');\n  args.forEach((c) => this.terminal.resetColor(c));\n};\n\n/**\n * Reset foreground color.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['110'] = function(parseState) {\n  this.terminal.setForegroundColor();\n};\n\n/**\n * Reset background color.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['111'] = function(parseState) {\n  this.terminal.setBackgroundColor();\n};\n\n/**\n * Reset text cursor color.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['112'] = function(parseState) {\n  this.terminal.setCursorColor();\n};\n\n/**\n * iTerm2 extended sequences.\n *\n * We only support image display atm.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['1337'] = function(parseState) {\n  // Args come in as a set of key value pairs followed by data.\n  // File=name=<base64>;size=123;inline=1:<base64 data>\n  const args = parseState.args[0].match(/^File=([^:]*):([\\s\\S]*)$/m);\n  if (!args) {\n    if (this.warnUnimplemented) {\n      console.log(`iTerm2 1337: unsupported sequence: ${args[1]}`);\n    }\n    return;\n  }\n\n  const options = {\n    name: '',\n    size: 0,\n    preserveAspectRatio: true,\n    inline: false,\n    width: 'auto',\n    height: 'auto',\n    align: 'left',\n    type: '',\n    buffer: lib.codec.stringToCodeUnitArray(atob(args[2])).buffer,\n  };\n  // Walk the \"key=value;\" sets.\n  args[1].split(';').forEach((ele) => {\n    const kv = ele.match(/^([^=]+)=(.*)$/m);\n    if (!kv) {\n      return;\n    }\n\n    // Sanitize values nicely.\n    switch (kv[1]) {\n      case 'name':\n        try {\n          options.name = window.atob(kv[2]);\n        } catch (e) {\n          // Ignore invalid base64 from user.\n        }\n        break;\n      case 'size':\n        try {\n          options.size = parseInt(kv[2], 10);\n        } catch (e) {\n          // Ignore invalid numbers from user.\n        }\n        break;\n      case 'width':\n        options.width = kv[2];\n        break;\n      case 'height':\n        options.height = kv[2];\n        break;\n      case 'preserveAspectRatio':\n        options.preserveAspectRatio = !(kv[2] == '0');\n        break;\n      case 'inline':\n        options.inline = !(kv[2] == '0');\n        break;\n      // hterm-specific keys.\n      case 'align':\n        options.align = kv[2];\n        break;\n      case 'type':\n        options.type = kv[2];\n        break;\n      default:\n        // Ignore unknown keys.  Don't want remote stuffing our JS env.\n        break;\n    }\n  });\n\n  // This is a bit of a hack.  If the buffer has data following the image, we\n  // need to delay processing of it until after we've finished with the image.\n  // Otherwise while we wait for the the image to load asynchronously, the new\n  // text data will intermingle with the image.\n  if (options.inline) {\n    const io = this.terminal.io;\n    const queued = parseState.peekRemainingBuf();\n    parseState.advance(queued.length);\n    this.terminal.displayImage(options);\n    io.print(queued);\n  } else {\n    this.terminal.displayImage(options);\n  }\n};\n\n/**\n * URxvt perl modules.\n *\n * This is the escape system used by rxvt-unicode and its perl modules.\n * Obviously we don't support perl or custom modules, so we list a few common\n * ones that we find useful.\n *\n * Technically there is no format here, but most modules obey:\n * <module name>;<module args, usually ; delimited>\n *\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['777'] = function(parseState) {\n  let ary;\n  const urxvtMod = parseState.args[0].split(';', 1)[0];\n\n  switch (urxvtMod) {\n    case 'notify': {\n      // Format:\n      // notify;title;message\n      let title;\n      let message;\n      ary = parseState.args[0].match(/^[^;]+;([^;]*)(;([\\s\\S]*))?$/);\n      if (ary) {\n        title = ary[1];\n        message = ary[3];\n      }\n      hterm.notify({'title': title, 'body': message});\n      break;\n    }\n\n    default:\n      console.warn('Unknown urxvt module: ' + parseState.args[0]);\n      break;\n  }\n};\n\n/**\n * Insert (blank) characters (ICH).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['@'] = function(parseState) {\n  this.terminal.insertSpace(parseState.iarg(0, 1));\n};\n\n/**\n * Cursor Up (CUU).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['A'] = function(parseState) {\n  this.terminal.cursorUp(parseState.iarg(0, 1));\n};\n\n/**\n * Cursor Down (CUD).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['B'] = function(parseState) {\n  this.terminal.cursorDown(parseState.iarg(0, 1));\n};\n\n/**\n * Cursor Forward (CUF).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['C'] = function(parseState) {\n  this.terminal.cursorRight(parseState.iarg(0, 1));\n};\n\n/**\n * Cursor Backward (CUB).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['D'] = function(parseState) {\n  this.terminal.cursorLeft(parseState.iarg(0, 1));\n};\n\n/**\n * Cursor Next Line (CNL).\n *\n * This is like Cursor Down, except the cursor moves to the beginning of the\n * line as well.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['E'] = function(parseState) {\n  this.terminal.cursorDown(parseState.iarg(0, 1));\n  this.terminal.setCursorColumn(0);\n};\n\n/**\n * Cursor Preceding Line (CPL).\n *\n * This is like Cursor Up, except the cursor moves to the beginning of the\n * line as well.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['F'] = function(parseState) {\n  this.terminal.cursorUp(parseState.iarg(0, 1));\n  this.terminal.setCursorColumn(0);\n};\n\n/**\n * Cursor Horizontal Absolute (CHA).\n *\n * Xterm calls this Cursor Character Absolute.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['G'] = function(parseState) {\n  this.terminal.setCursorColumn(parseState.iarg(0, 1) - 1);\n};\n\n/**\n * Cursor Position (CUP).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['H'] = function(parseState) {\n  this.terminal.setCursorPosition(parseState.iarg(0, 1) - 1,\n                                  parseState.iarg(1, 1) - 1);\n};\n\n/**\n * Cursor Forward Tabulation (CHT).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['I'] = function(parseState) {\n  let count = parseState.iarg(0, 1);\n  count = lib.f.clamp(count, 1, this.terminal.screenSize.width);\n  for (let i = 0; i < count; i++) {\n    this.terminal.forwardTabStop();\n  }\n};\n\n/**\n * Erase in Display (ED, DECSED).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['J'] =\nhterm.VT.CSI['?J'] = function(parseState) {\n  const arg = parseState.args[0];\n\n  if (!arg || arg == 0) {\n    this.terminal.eraseBelow();\n  } else if (arg == 1) {\n    this.terminal.eraseAbove();\n  } else if (arg == 2) {\n    this.terminal.clear();\n  } else if (arg == 3) {\n    if (this.enableCsiJ3) {\n      this.terminal.clearScrollback();\n    }\n  }\n};\n\n/**\n * Erase in line (EL, DECSEL).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['K'] =\nhterm.VT.CSI['?K'] = function(parseState) {\n  const arg = parseState.args[0];\n\n  if (!arg || arg == 0) {\n    this.terminal.eraseToRight();\n  } else if (arg == 1) {\n    this.terminal.eraseToLeft();\n  } else if (arg == 2) {\n    this.terminal.eraseLine();\n  }\n};\n\n/**\n * Insert Lines (IL).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['L'] = function(parseState) {\n  this.terminal.insertLines(parseState.iarg(0, 1));\n};\n\n/**\n * Delete Lines (DL).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['M'] = function(parseState) {\n  this.terminal.deleteLines(parseState.iarg(0, 1));\n};\n\n/**\n * Delete Characters (DCH).\n *\n * This command shifts the line contents left, starting at the cursor position.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['P'] = function(parseState) {\n  this.terminal.deleteChars(parseState.iarg(0, 1));\n};\n\n/**\n * Scroll Up (SU).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['S'] = function(parseState) {\n  this.terminal.vtScrollUp(parseState.iarg(0, 1));\n};\n\n/**\n * Scroll Down (SD).\n * Also 'Initiate highlight mouse tracking'.  Will not implement this part.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['T'] = function(parseState) {\n  if (parseState.args.length <= 1) {\n    this.terminal.vtScrollDown(parseState.iarg(0, 1));\n  }\n};\n\n/**\n * Reset one or more features of the title modes to the default value.\n *\n *   ESC [ > Ps T\n *\n * Normally, \"reset\" disables the feature. It is possible to disable the\n * ability to reset features by compiling a different default for the title\n * modes into xterm.\n *\n * Ps values:\n *   0 - Do not set window/icon labels using hexadecimal.\n *   1 - Do not query window/icon labels using hexadecimal.\n *   2 - Do not set window/icon labels using UTF-8.\n *   3 - Do not query window/icon labels using UTF-8.\n *\n * Will not implement.\n */\nhterm.VT.CSI['>T'] = hterm.VT.ignore;\n\n/**\n * Erase Characters (ECH).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['X'] = function(parseState) {\n  this.terminal.eraseToRight(parseState.iarg(0, 1));\n};\n\n/**\n * Cursor Backward Tabulation (CBT).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['Z'] = function(parseState) {\n  let count = parseState.iarg(0, 1);\n  count = lib.f.clamp(count, 1, this.terminal.screenSize.width);\n  for (let i = 0; i < count; i++) {\n    this.terminal.backwardTabStop();\n  }\n};\n\n/**\n * Character Position Absolute (HPA).\n *\n * Same as Cursor Horizontal Absolute (CHA).\n */\nhterm.VT.CSI['`'] = hterm.VT.CSI['G'];\n\n/**\n * Character Position Relative (HPR).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['a'] = function(parseState) {\n  this.terminal.setCursorColumn(this.terminal.getCursorColumn() +\n                                parseState.iarg(0, 1));\n};\n\n/**\n * Repeat the preceding graphic character.\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['b'] = hterm.VT.ignore;\n\n/**\n * Send Device Attributes (Primary DA).\n *\n * TODO(rginda): This is hardcoded to send back 'VT100 with Advanced Video\n * Option', but it may be more correct to send a VT220 response once\n * we fill out the 'Not currently implemented' parts.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['c'] = function(parseState) {\n  if (!parseState.args[0] || parseState.args[0] == 0) {\n    this.terminal.io.sendString('\\x1b[?1;2c');\n  }\n};\n\n/**\n * Send Device Attributes (Secondary DA).\n *\n * TODO(rginda): This is hardcoded to send back 'VT100' but it may be more\n * correct to send a VT220 response once we fill out more 'Not currently\n * implemented' parts.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['>c'] = function(parseState) {\n  this.terminal.io.sendString('\\x1b[>0;256;0c');\n};\n\n/**\n * Line Position Absolute (VPA).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['d'] = function(parseState) {\n  this.terminal.setAbsoluteCursorRow(parseState.iarg(0, 1) - 1);\n};\n\n/**\n * Horizontal and Vertical Position (HVP).\n *\n * Same as Cursor Position (CUP).\n */\nhterm.VT.CSI['f'] = hterm.VT.CSI['H'];\n\n/**\n * Tab Clear (TBC).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['g'] = function(parseState) {\n  if (!parseState.args[0] || parseState.args[0] == 0) {\n    // Clear tab stop at cursor.\n    this.terminal.clearTabStopAtCursor();\n  } else if (parseState.args[0] == 3) {\n    // Clear all tab stops.\n    this.terminal.clearAllTabStops();\n  }\n};\n\n/**\n * Set Mode (SM).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['h'] = function(parseState) {\n  for (let i = 0; i < parseState.args.length; i++) {\n    this.setANSIMode(parseState.args[i], true);\n  }\n};\n\n/**\n * DEC Private Mode Set (DECSET).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['?h'] = function(parseState) {\n  for (let i = 0; i < parseState.args.length; i++) {\n    this.setDECMode(parseState.args[i], true);\n  }\n};\n\n/**\n * Media Copy (MC).\n * Media Copy (MC, DEC Specific).\n *\n * These commands control the printer.  Will not implement.\n */\nhterm.VT.CSI['i'] =\nhterm.VT.CSI['?i'] = hterm.VT.ignore;\n\n/**\n * Reset Mode (RM).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['l'] = function(parseState) {\n  for (let i = 0; i < parseState.args.length; i++) {\n    this.setANSIMode(parseState.args[i], false);\n  }\n};\n\n/**\n * DEC Private Mode Reset (DECRST).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['?l'] = function(parseState) {\n  for (let i = 0; i < parseState.args.length; i++) {\n    this.setDECMode(parseState.args[i], false);\n  }\n};\n\n/**\n * Parse extended SGR 38/48 sequences.\n *\n * This deals with the various ISO 8613-6 forms, and with legacy xterm forms\n * that are common in the wider application world.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current input state.\n * @param {number} i The argument in parseState to start processing.\n * @param {!hterm.TextAttributes} attrs The current text attributes.\n * @return {!Object} The skipCount member defines how many arguments to skip\n *     (i.e. how many were processed), and the color member is the color that\n *     was successfully processed, or undefined if not.\n */\nhterm.VT.prototype.parseSgrExtendedColors = function(parseState, i, attrs) {\n  let ary;\n  let usedSubargs;\n\n  if (parseState.argHasSubargs(i)) {\n    // The ISO 8613-6 compliant form.\n    // e.g. 38:[color choice]:[arg1]:[arg2]:...\n    ary = parseState.args[i].split(':');\n    ary.shift();  // Remove \"38\".\n    usedSubargs = true;\n  } else if (parseState.argHasSubargs(i + 1)) {\n    // The xterm form which isn't ISO 8613-6 compliant.  Not many emulators\n    // support this, and others actively do not want to.  We'll ignore it so\n    // at least the rest of the stream works correctly.  e.g. 38;2:R:G:B\n    // We return 0 here so we only skip the \"38\" ... we can't be confident the\n    // next arg is actually supposed to be part of it vs a typo where the next\n    // arg is legit.\n    return {skipCount: 0};\n  } else {\n    // The xterm form which isn't ISO 8613-6 compliant, but many emulators\n    // support, and many applications rely on.\n    // e.g. 38;2;R;G;B\n    ary = parseState.args.slice(i + 1);\n    usedSubargs = false;\n  }\n\n  // Figure out which form to parse.\n  switch (parseInt(ary[0], 10)) {\n    default:  // Unknown.\n    case 0:  // Implementation defined.  We ignore it.\n      return {skipCount: 0};\n\n    case 1: {  // Transparent color.\n      // Require ISO 8613-6 form.\n      if (!usedSubargs) {\n        return {skipCount: 0};\n      }\n\n      return {\n        color: 'rgba(0, 0, 0, 0)',\n        skipCount: 0,\n      };\n    }\n\n    case 2: {  // RGB color.\n      // Skip over the color space identifier, if it exists.\n      let start;\n      if (usedSubargs) {\n        // The ISO 8613-6 compliant form:\n        //   38:2:<color space id>:R:G:B[:...]\n        // The xterm form isn't ISO 8613-6 compliant.\n        //   38:2:R:G:B\n        // Since the ISO 8613-6 form requires at least 5 arguments,\n        // we can still support the xterm form unambiguously.\n        if (ary.length == 4) {\n          start = 1;\n        } else {\n          start = 2;\n        }\n      } else {\n        // The legacy xterm form: 38;2;R;G;B\n        start = 1;\n      }\n\n      // We need at least 3 args for RGB.  If we don't have them, assume this\n      // sequence is corrupted, so don't eat anything more.\n      // We ignore more than 3 args on purpose since ISO 8613-6 defines some,\n      // and we don't care about them.\n      if (ary.length < start + 3) {\n        return {skipCount: 0};\n      }\n\n      const r = parseState.parseInt(ary[start + 0]);\n      const g = parseState.parseInt(ary[start + 1]);\n      const b = parseState.parseInt(ary[start + 2]);\n      return {\n        color: `rgb(${r}, ${g}, ${b})`,\n        skipCount: usedSubargs ? 0 : 4,\n      };\n    }\n\n    case 3: {  // CMY color.\n      // No need to support xterm/legacy forms as xterm doesn't support CMY.\n      if (!usedSubargs) {\n        return {skipCount: 0};\n      }\n\n      // We need at least 4 args for CMY.  If we don't have them, assume\n      // this sequence is corrupted.  We ignore the color space identifier,\n      // tolerance, etc...\n      if (ary.length < 4) {\n        return {skipCount: 0};\n      }\n\n      // TODO: See CMYK below.\n      // const c = parseState.parseInt(ary[1]);\n      // const m = parseState.parseInt(ary[2]);\n      // const y = parseState.parseInt(ary[3]);\n      return {skipCount: 0};\n    }\n\n    case 4: {  // CMYK color.\n      // No need to support xterm/legacy forms as xterm doesn't support CMYK.\n      if (!usedSubargs) {\n        return {skipCount: 0};\n      }\n\n      // We need at least 5 args for CMYK.  If we don't have them, assume\n      // this sequence is corrupted.  We ignore the color space identifier,\n      // tolerance, etc...\n      if (ary.length < 5) {\n        return {skipCount: 0};\n      }\n\n      // TODO: Implement this.\n      // Might wait until CSS4 is adopted for device-cmyk():\n      // https://www.w3.org/TR/css-color-4/#cmyk-colors\n      // Or normalize it to RGB ourselves:\n      // https://www.w3.org/TR/css-color-4/#cmyk-rgb\n      // const c = parseState.parseInt(ary[1]);\n      // const m = parseState.parseInt(ary[2]);\n      // const y = parseState.parseInt(ary[3]);\n      // const k = parseState.parseInt(ary[4]);\n      return {skipCount: 0};\n    }\n\n    case 5: {  // Color palette index.\n      // If we're short on args, assume this sequence is corrupted, so don't\n      // eat anything more.\n      if (ary.length < 2) {\n        return {skipCount: 0};\n      }\n\n      // Support 38:5:P (ISO 8613-6) and 38;5;P (xterm/legacy).\n      // We also ignore extra args with 38:5:P:[...], but more for laziness.\n      const ret = {\n        skipCount: usedSubargs ? 0 : 2,\n      };\n      const color = parseState.parseInt(ary[1]);\n      if (color < lib.colors.stockPalette.length) {\n        ret.color = color;\n      }\n      return ret;\n    }\n  }\n};\n\n/**\n * Character Attributes (SGR).\n *\n * Iterate through the list of arguments, applying the attribute changes based\n * on the argument value...\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.CSI['m'] = function(parseState) {\n  const attrs = this.terminal.getTextAttributes();\n\n  if (!parseState.args.length) {\n    attrs.reset();\n    return;\n  }\n\n  for (let i = 0; i < parseState.args.length; i++) {\n    // If this argument has subargs (i.e. it has args followed by colons),\n    // the iarg logic will implicitly truncate that off for us.\n    const arg = parseState.iarg(i, 0);\n\n    if (arg < 30) {\n      if (arg == 0) {  // Normal (default).\n        attrs.reset();\n      } else if (arg == 1) {  // Bold.\n        attrs.bold = true;\n      } else if (arg == 2) {  // Faint.\n        attrs.faint = true;\n      } else if (arg == 3) {  // Italic.\n        attrs.italic = true;\n      } else if (arg == 4) {  // Underline.\n        if (parseState.argHasSubargs(i)) {\n          const uarg = parseState.args[i].split(':')[1];\n          if (uarg == 0) {\n            attrs.underline = false;\n          } else if (uarg == 1) {\n            attrs.underline = 'solid';\n          } else if (uarg == 2) {\n            attrs.underline = 'double';\n          } else if (uarg == 3) {\n            attrs.underline = 'wavy';\n          } else if (uarg == 4) {\n            attrs.underline = 'dotted';\n          } else if (uarg == 5) {\n            attrs.underline = 'dashed';\n          }\n        } else {\n          attrs.underline = 'solid';\n        }\n      } else if (arg == 5) {  // Blink.\n        attrs.blink = true;\n      } else if (arg == 7) {  // Inverse.\n        attrs.inverse = true;\n      } else if (arg == 8) {  // Invisible.\n        attrs.invisible = true;\n      } else if (arg == 9) {  // Crossed out.\n        attrs.strikethrough = true;\n      } else if (arg == 21) {  // Double underlined.\n        attrs.underline = 'double';\n      } else if (arg == 22) {  // Not bold & not faint.\n        attrs.bold = false;\n        attrs.faint = false;\n      } else if (arg == 23) {  // Not italic.\n        attrs.italic = false;\n      } else if (arg == 24) {  // Not underlined.\n        attrs.underline = false;\n      } else if (arg == 25) {  // Not blink.\n        attrs.blink = false;\n      } else if (arg == 27) {  // Steady.\n        attrs.inverse = false;\n      } else if (arg == 28) {  // Visible.\n        attrs.invisible = false;\n      } else if (arg == 29) {  // Not crossed out.\n        attrs.strikethrough = false;\n      }\n\n    } else if (arg < 50) {\n      // Select fore/background color from bottom half of 16 color palette\n      // or from the 256 color palette or alternative specify color in fully\n      // qualified rgb(r, g, b) form.\n      if (arg < 38) {\n        attrs.foregroundSource = arg - 30;\n\n      } else if (arg == 38) {\n        const result = this.parseSgrExtendedColors(parseState, i, attrs);\n        if (result.color !== undefined) {\n          attrs.foregroundSource = result.color;\n        }\n        i += result.skipCount;\n\n      } else if (arg == 39) {\n        attrs.foregroundSource = attrs.SRC_DEFAULT;\n\n      } else if (arg < 48) {\n        attrs.backgroundSource = arg - 40;\n\n      } else if (arg == 48) {\n        const result = this.parseSgrExtendedColors(parseState, i, attrs);\n        if (result.color !== undefined) {\n          attrs.backgroundSource = result.color;\n        }\n        i += result.skipCount;\n\n      } else {\n        attrs.backgroundSource = attrs.SRC_DEFAULT;\n      }\n\n    } else if (arg == 58) {  // Underline coloring.\n      const result = this.parseSgrExtendedColors(parseState, i, attrs);\n      if (result.color !== undefined) {\n        attrs.underlineSource = result.color;\n      }\n      i += result.skipCount;\n\n    } else if (arg == 59) {  // Disable underline coloring.\n      attrs.underlineSource = attrs.SRC_DEFAULT;\n\n    } else if (arg >= 90 && arg <= 97) {\n      attrs.foregroundSource = arg - 90 + 8;\n\n    } else if (arg >= 100 && arg <= 107) {\n      attrs.backgroundSource = arg - 100 + 8;\n    }\n  }\n\n  attrs.syncColors();\n};\n\n// SGR calls can handle subargs.\nhterm.VT.CSI['m'].supportsSubargs = true;\n\n/**\n * Set xterm-specific keyboard modes.\n *\n * Will not implement.\n */\nhterm.VT.CSI['>m'] = hterm.VT.ignore;\n\n/**\n * Device Status Report (DSR, DEC Specific).\n *\n * 5 - Status Report. Result (OK) is CSI 0 n\n * 6 - Report Cursor Position (CPR) [row;column]. Result is CSI r ; c R\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.CSI['n'] = function(parseState) {\n  if (parseState.args[0] == 5) {\n    this.terminal.io.sendString('\\x1b0n');\n  } else if (parseState.args[0] == 6) {\n    const row = this.terminal.getCursorRow() + 1;\n    const col = this.terminal.getCursorColumn() + 1;\n    this.terminal.io.sendString('\\x1b[' + row + ';' + col + 'R');\n  }\n};\n\n/**\n * Disable modifiers which may be enabled via CSI['>m'].\n *\n * Will not implement.\n */\nhterm.VT.CSI['>n'] = hterm.VT.ignore;\n\n/**\n * Device Status Report (DSR, DEC Specific).\n *\n * 6  - Report Cursor Position (CPR) [row;column] as CSI ? r ; c R\n * 15 - Report Printer status as CSI ? 1 0 n (ready) or\n *      CSI ? 1 1 n (not ready).\n * 25 - Report UDK status as CSI ? 2 0 n (unlocked) or CSI ? 2 1 n (locked).\n * 26 - Report Keyboard status as CSI ? 2 7 ; 1 ; 0 ; 0 n (North American).\n *      The last two parameters apply to VT400 & up, and denote keyboard ready\n *      and LK01 respectively.\n * 53 - Report Locator status as CSI ? 5 3 n Locator available, if compiled-in,\n *      or CSI ? 5 0 n No Locator, if not.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.CSI['?n'] = function(parseState) {\n  if (parseState.args[0] == 6) {\n    const row = this.terminal.getCursorRow() + 1;\n    const col = this.terminal.getCursorColumn() + 1;\n    this.terminal.io.sendString('\\x1b[' + row + ';' + col + 'R');\n  } else if (parseState.args[0] == 15) {\n    this.terminal.io.sendString('\\x1b[?11n');\n  } else if (parseState.args[0] == 25) {\n    this.terminal.io.sendString('\\x1b[?21n');\n  } else if (parseState.args[0] == 26) {\n    this.terminal.io.sendString('\\x1b[?12;1;0;0n');\n  } else if (parseState.args[0] == 53) {\n    this.terminal.io.sendString('\\x1b[?50n');\n  }\n};\n\n/**\n * This is used by xterm to decide whether to hide the pointer cursor as the\n * user types.\n *\n * Valid values for the parameter:\n *   0 - Never hide the pointer.\n *   1 - Hide if the mouse tracking mode is not enabled.\n *   2 - Always hide the pointer.\n *\n * If no parameter is given, xterm uses the default, which is 1.\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['>p'] = hterm.VT.ignore;\n\n/**\n * Soft terminal reset (DECSTR).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CSI['!p'] = function() {\n  this.terminal.softReset();\n};\n\n/**\n * Request ANSI Mode (DECRQM).\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['$p'] = hterm.VT.ignore;\nhterm.VT.CSI['?$p'] = hterm.VT.ignore;\n\n/**\n * Set conformance level (DECSCL).\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['\"p'] = hterm.VT.ignore;\n\n/**\n * Load LEDs (DECLL).\n *\n * Not currently implemented.  Could be implemented as virtual LEDs overlaying\n * the terminal if anyone cares.\n */\nhterm.VT.CSI['q'] = hterm.VT.ignore;\n\n/**\n * Set cursor style (DECSCUSR, VT520).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.CSI[' q'] = function(parseState) {\n  const arg = parseState.args[0];\n\n  if (arg == 0 || arg == 1) {\n    this.terminal.setCursorShape(hterm.Terminal.cursorShape.BLOCK);\n    this.terminal.setCursorBlink(true);\n  } else if (arg == 2) {\n    this.terminal.setCursorShape(hterm.Terminal.cursorShape.BLOCK);\n    this.terminal.setCursorBlink(false);\n  } else if (arg == 3) {\n    this.terminal.setCursorShape(hterm.Terminal.cursorShape.UNDERLINE);\n    this.terminal.setCursorBlink(true);\n  } else if (arg == 4) {\n    this.terminal.setCursorShape(hterm.Terminal.cursorShape.UNDERLINE);\n    this.terminal.setCursorBlink(false);\n  } else if (arg == 5) {\n    this.terminal.setCursorShape(hterm.Terminal.cursorShape.BEAM);\n    this.terminal.setCursorBlink(true);\n  } else if (arg == 6) {\n    this.terminal.setCursorShape(hterm.Terminal.cursorShape.BEAM);\n    this.terminal.setCursorBlink(false);\n  } else {\n    console.warn('Unknown cursor style: ' + arg);\n  }\n};\n\n/**\n * Select character protection attribute (DECSCA).\n *\n * Will not implement.\n */\nhterm.VT.CSI['\"q'] = hterm.VT.ignore;\n\n/**\n * Set Scrolling Region (DECSTBM).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.CSI['r'] = function(parseState) {\n  const args = parseState.args;\n  const top = args[0] ? parseInt(args[0], 10) : 0;\n  const bottom =\n      args[1] ? parseInt(args[1], 10) : this.terminal.screenSize.height;\n  // Silently ignore bad args.\n  if (top < 0 || bottom > this.terminal.screenSize.height || bottom <= top) {\n    return;\n  }\n  // Convert from 1-based to 0-based with special case for zero.\n  this.terminal.setVTScrollRegion(top === 0 ? null : top - 1, bottom - 1);\n  this.terminal.setCursorPosition(0, 0);\n};\n\n/**\n * Restore DEC Private Mode Values.\n *\n * Will not implement.\n */\nhterm.VT.CSI['?r'] = hterm.VT.ignore;\n\n/**\n * Change Attributes in Rectangular Area (DECCARA)\n *\n * Will not implement.\n */\nhterm.VT.CSI['$r'] = hterm.VT.ignore;\n\n/**\n * Save cursor (ANSI.SYS)\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CSI['s'] = function() {\n  this.terminal.saveCursorAndState();\n};\n\n/**\n * Save DEC Private Mode Values.\n *\n * Will not implement.\n */\nhterm.VT.CSI['?s'] = hterm.VT.ignore;\n\n/**\n * Window manipulation (from dtterm, as well as extensions).\n *\n * Will not implement.\n */\nhterm.VT.CSI['t'] = hterm.VT.ignore;\n\n/**\n * Reverse Attributes in Rectangular Area (DECRARA).\n *\n * Will not implement.\n */\nhterm.VT.CSI['$t'] = hterm.VT.ignore;\n\n/**\n * Set one or more features of the title modes.\n *\n * Will not implement.\n */\nhterm.VT.CSI['>t'] = hterm.VT.ignore;\n\n/**\n * Set warning-bell volume (DECSWBV, VT520).\n *\n * Will not implement.\n */\nhterm.VT.CSI[' t'] = hterm.VT.ignore;\n\n/**\n * Restore cursor (ANSI.SYS).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CSI['u'] = function() {\n  this.terminal.restoreCursorAndState();\n};\n\n/**\n * Set margin-bell volume (DECSMBV, VT520).\n *\n * Will not implement.\n */\nhterm.VT.CSI[' u'] = hterm.VT.ignore;\n\n/**\n * Copy Rectangular Area (DECCRA, VT400 and up).\n *\n * Will not implement.\n */\nhterm.VT.CSI['$v'] = hterm.VT.ignore;\n\n/**\n * Enable Filter Rectangle (DECEFR).\n *\n * Will not implement.\n */\nhterm.VT.CSI['\\'w'] = hterm.VT.ignore;\n\n/**\n * Request Terminal Parameters (DECREQTPARM).\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['x'] = hterm.VT.ignore;\n\n/**\n * Select Attribute Change Extent (DECSACE).\n *\n * Will not implement.\n */\nhterm.VT.CSI['*x'] = hterm.VT.ignore;\n\n/**\n * Fill Rectangular Area (DECFRA), VT420 and up.\n *\n * Will not implement.\n */\nhterm.VT.CSI['$x'] = hterm.VT.ignore;\n\n/**\n * vt_tiledata (as used by NAOhack and UnNetHack)\n * (see https://nethackwiki.com/wiki/Vt_tiledata for more info)\n *\n * Implemented as far as we care (start a glyph and end a glyph).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.CSI['z'] = function(parseState) {\n  if (parseState.args.length < 1) {\n    return;\n  }\n  const arg = parseState.args[0];\n  if (arg == 0) {\n    // Start a glyph (one parameter, the glyph number).\n    if (parseState.args.length < 2) {\n      return;\n    }\n    this.terminal.getTextAttributes().tileData = parseState.args[1];\n  } else if (arg == 1) {\n    // End a glyph.\n    this.terminal.getTextAttributes().tileData = null;\n  }\n};\n\n/**\n * Enable Locator Reporting (DECELR).\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['\\'z'] = hterm.VT.ignore;\n\n/**\n * Erase Rectangular Area (DECERA), VT400 and up.\n *\n * Will not implement.\n */\nhterm.VT.CSI['$z'] = hterm.VT.ignore;\n\n/**\n * Select Locator Events (DECSLE).\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['\\'{'] = hterm.VT.ignore;\n\n/**\n * Request Locator Position (DECRQLP).\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['\\'|'] = hterm.VT.ignore;\n\n/**\n * Insert Columns (DECIC), VT420 and up.\n *\n * Will not implement.\n */\nhterm.VT.CSI['\\'}'] = hterm.VT.ignore;\n\n/**\n * Delete P s Columns (DECDC), VT420 and up.\n *\n * Will not implement.\n */\nhterm.VT.CSI['\\'~'] = hterm.VT.ignore;\n// SOURCE FILE: hterm/js/hterm_vt_character_map.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Character map object.\n *\n * Mapping from received to display character, used depending on the active\n * VT character set.\n *\n * GR maps are not currently supported.\n *\n * @param {string} description A human readable description of this map.\n * @param {?Object} glmap The GL mapping from input to output characters.\n * @constructor\n */\nhterm.VT.CharacterMap = function(description, glmap) {\n  /**\n   * Short description for this character set, useful for debugging.\n   */\n  this.description = description;\n\n  /**\n   * The function to call to when this map is installed in GL.\n   */\n  this.GL = null;\n\n  // Always keep an unmodified reference to the map.\n  // This allows us to sanely reset back to the original state.\n  this.glmapBase_ = glmap;\n\n  // Now sync the internal state as needed.\n  this.sync_();\n};\n\n/**\n * Internal helper for resyncing internal state.\n *\n * Used when the mappings change.\n *\n * @param {!Object=} glmap Additional mappings to overlay on top of the\n *     base mapping.\n */\nhterm.VT.CharacterMap.prototype.sync_ = function(glmap = undefined) {\n  // If there are no maps, then reset the state back.\n  if (!this.glmapBase_ && !glmap) {\n    this.GL = null;\n    delete this.glmap_;\n    delete this.glre_;\n    return;\n  }\n\n  // Set the the GL mapping.  If we're given a custom mapping, then create a\n  // new object to hold the merged map.  This way we can cleanly reset back.\n  if (glmap) {\n    this.glmap_ = Object.assign({}, this.glmapBase_, glmap);\n  } else {\n    this.glmap_ = this.glmapBase_;\n  }\n\n  const glchars = Object.keys(lib.notNull(this.glmap_)).map(\n      (key) => '\\\\x' + lib.f.zpad(key.charCodeAt(0).toString(16), 2));\n  this.glre_ = new RegExp('[' + glchars.join('') + ']', 'g');\n\n  this.GL = (str) => str.replace(this.glre_, (ch) => this.glmap_[ch]);\n};\n\n/**\n * Reset map back to original mappings (discarding runtime updates).\n *\n * Specifically, any calls to setOverrides will be discarded.\n */\nhterm.VT.CharacterMap.prototype.reset = function() {\n  // If we haven't been given a custom mapping, then there's nothing to reset.\n  if (this.glmap_ !== this.glmapBase_) {\n    this.sync_();\n  }\n};\n\n/**\n * Merge custom changes to this map.\n *\n * The input map need not duplicate the existing mappings as it is merged with\n * the existing base map (what was created with).  Subsequent calls to this\n * will throw away previous override settings.\n *\n * @param {!Object} glmap The custom map to override existing mappings.\n */\nhterm.VT.CharacterMap.prototype.setOverrides = function(glmap) {\n  this.sync_(glmap);\n};\n\n/**\n * Return a copy of this mapping.\n *\n * @return {!hterm.VT.CharacterMap} A new hterm.VT.CharacterMap instance.\n */\nhterm.VT.CharacterMap.prototype.clone = function() {\n  const map = new hterm.VT.CharacterMap(this.description, this.glmapBase_);\n  if (this.glmap_ !== this.glmapBase_) {\n    map.setOverrides(this.glmap_);\n  }\n  return map;\n};\n\n/**\n * Table of character maps.\n *\n * @constructor\n */\nhterm.VT.CharacterMaps = function() {\n  this.maps_ = hterm.VT.CharacterMaps.DefaultMaps;\n\n  // Always keep an unmodified reference to the map.\n  // This allows us to sanely reset back to the original state.\n  this.mapsBase_ = this.maps_;\n};\n\n/**\n * Look up a previously registered map.\n *\n * @param {string} name The name of the map to lookup.\n * @return {!hterm.VT.CharacterMap|undefined} The map, if it's been registered\n *     or undefined.\n */\nhterm.VT.CharacterMaps.prototype.getMap = function(name) {\n  if (this.maps_.hasOwnProperty(name)) {\n    return this.maps_[name];\n  } else {\n    return undefined;\n  }\n};\n\n/**\n * Register a new map.\n *\n * Any previously registered maps by this name will be discarded.\n *\n * @param {string} name The name of the map.\n * @param {!hterm.VT.CharacterMap} map The map to register.\n */\nhterm.VT.CharacterMaps.prototype.addMap = function(name, map) {\n  if (this.maps_ === this.mapsBase_) {\n    this.maps_ = Object.assign({}, this.mapsBase_);\n  }\n  this.maps_[name] = map;\n};\n\n/**\n * Reset the table and all its maps back to original state.\n */\nhterm.VT.CharacterMaps.prototype.reset = function() {\n  if (this.maps_ !== hterm.VT.CharacterMaps.DefaultMaps) {\n    this.maps_ = hterm.VT.CharacterMaps.DefaultMaps;\n  }\n};\n\n/**\n * Merge custom changes to this table.\n *\n * @param {!Object} maps A set of hterm.VT.CharacterMap objects.\n */\nhterm.VT.CharacterMaps.prototype.setOverrides = function(maps) {\n  if (this.maps_ === this.mapsBase_) {\n    this.maps_ = Object.assign({}, this.mapsBase_);\n  }\n\n  for (const name in maps) {\n    const map = this.getMap(name);\n    if (map !== undefined) {\n      this.maps_[name] = map.clone();\n      this.maps_[name].setOverrides(maps[name]);\n    } else {\n      this.addMap(name, new hterm.VT.CharacterMap('user ' + name, maps[name]));\n    }\n  }\n};\n\n/**\n * The default set of supported character maps.\n */\nhterm.VT.CharacterMaps.DefaultMaps = {};\n\n/**\n * VT100 Graphic character map.\n * http://vt100.net/docs/vt220-rm/table2-4.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['0'] = new hterm.VT.CharacterMap(\n    'graphic', {\n      '\\x60':'\\u25c6',  // ` -> diamond\n      '\\x61':'\\u2592',  // a -> grey-box\n      '\\x62':'\\u2409',  // b -> h/t\n      '\\x63':'\\u240c',  // c -> f/f\n      '\\x64':'\\u240d',  // d -> c/r\n      '\\x65':'\\u240a',  // e -> l/f\n      '\\x66':'\\u00b0',  // f -> degree\n      '\\x67':'\\u00b1',  // g -> +/-\n      '\\x68':'\\u2424',  // h -> n/l\n      '\\x69':'\\u240b',  // i -> v/t\n      '\\x6a':'\\u2518',  // j -> bottom-right\n      '\\x6b':'\\u2510',  // k -> top-right\n      '\\x6c':'\\u250c',  // l -> top-left\n      '\\x6d':'\\u2514',  // m -> bottom-left\n      '\\x6e':'\\u253c',  // n -> line-cross\n      '\\x6f':'\\u23ba',  // o -> scan1\n      '\\x70':'\\u23bb',  // p -> scan3\n      '\\x71':'\\u2500',  // q -> scan5\n      '\\x72':'\\u23bc',  // r -> scan7\n      '\\x73':'\\u23bd',  // s -> scan9\n      '\\x74':'\\u251c',  // t -> left-tee\n      '\\x75':'\\u2524',  // u -> right-tee\n      '\\x76':'\\u2534',  // v -> bottom-tee\n      '\\x77':'\\u252c',  // w -> top-tee\n      '\\x78':'\\u2502',  // x -> vertical-line\n      '\\x79':'\\u2264',  // y -> less-equal\n      '\\x7a':'\\u2265',  // z -> greater-equal\n      '\\x7b':'\\u03c0',  // { -> pi\n      '\\x7c':'\\u2260',  // | -> not-equal\n      '\\x7d':'\\u00a3',  // } -> british-pound\n      '\\x7e':'\\u00b7',  // ~ -> dot\n    });\n\n/**\n * British character map.\n * http://vt100.net/docs/vt220-rm/table2-5.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['A'] = new hterm.VT.CharacterMap(\n    'british', {\n      '\\x23': '\\u00a3',  // # -> british-pound\n    });\n\n/**\n * US ASCII map, no changes.\n */\nhterm.VT.CharacterMaps.DefaultMaps['B'] = new hterm.VT.CharacterMap(\n    'us', null);\n\n/**\n * Dutch character map.\n * http://vt100.net/docs/vt220-rm/table2-6.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['4'] = new hterm.VT.CharacterMap(\n    'dutch', {\n      '\\x23': '\\u00a3',  // # -> british-pound\n\n      '\\x40': '\\u00be',  // @ -> 3/4\n\n      '\\x5b': '\\u0132',  // [ -> 'ij' ligature (xterm goes with \\u00ff?)\n      '\\x5c': '\\u00bd',  // \\ -> 1/2\n      '\\x5d': '\\u007c',  // ] -> vertical bar\n\n      '\\x7b': '\\u00a8',  // { -> two dots\n      '\\x7c': '\\u0066',  // | -> f\n      '\\x7d': '\\u00bc',  // } -> 1/4\n      '\\x7e': '\\u00b4',  // ~ -> acute\n    });\n\n/**\n * Finnish character map.\n * http://vt100.net/docs/vt220-rm/table2-7.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['C'] =\nhterm.VT.CharacterMaps.DefaultMaps['5'] = new hterm.VT.CharacterMap(\n    'finnish', {\n      '\\x5b': '\\u00c4',  // [ -> 'A' umlaut\n      '\\x5c': '\\u00d6',  // \\ -> 'O' umlaut\n      '\\x5d': '\\u00c5',  // ] -> 'A' ring\n      '\\x5e': '\\u00dc',  // ~ -> 'u' umlaut\n\n      '\\x60': '\\u00e9',  // ` -> 'e' acute\n\n      '\\x7b': '\\u00e4',  // { -> 'a' umlaut\n      '\\x7c': '\\u00f6',  // | -> 'o' umlaut\n      '\\x7d': '\\u00e5',  // } -> 'a' ring\n      '\\x7e': '\\u00fc',  // ~ -> 'u' umlaut\n    });\n\n/**\n * French character map.\n * http://vt100.net/docs/vt220-rm/table2-8.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['R'] = new hterm.VT.CharacterMap(\n    'french', {\n      '\\x23': '\\u00a3',  // # -> british-pound\n\n      '\\x40': '\\u00e0',  // @ -> 'a' grave\n\n      '\\x5b': '\\u00b0',  // [ -> ring\n      '\\x5c': '\\u00e7',  // \\ -> 'c' cedilla\n      '\\x5d': '\\u00a7',  // ] -> section symbol (double s)\n\n      '\\x7b': '\\u00e9',  // { -> 'e' acute\n      '\\x7c': '\\u00f9',  // | -> 'u' grave\n      '\\x7d': '\\u00e8',  // } -> 'e' grave\n      '\\x7e': '\\u00a8',  // ~ -> umlaut\n    });\n\n/**\n * French Canadian character map.\n * http://vt100.net/docs/vt220-rm/table2-9.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['Q'] = new hterm.VT.CharacterMap(\n    'french canadian', {\n      '\\x40': '\\u00e0',  // @ -> 'a' grave\n\n      '\\x5b': '\\u00e2',  // [ -> 'a' circumflex\n      '\\x5c': '\\u00e7',  // \\ -> 'c' cedilla\n      '\\x5d': '\\u00ea',  // ] -> 'e' circumflex\n      '\\x5e': '\\u00ee',  // ^ -> 'i' circumflex\n\n      '\\x60': '\\u00f4',  // ` -> 'o' circumflex\n\n      '\\x7b': '\\u00e9',  // { -> 'e' acute\n      '\\x7c': '\\u00f9',  // | -> 'u' grave\n      '\\x7d': '\\u00e8',  // } -> 'e' grave\n      '\\x7e': '\\u00fb',  // ~ -> 'u' circumflex\n    });\n\n/**\n * German character map.\n * http://vt100.net/docs/vt220-rm/table2-10.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['K'] = new hterm.VT.CharacterMap(\n    'german', {\n      '\\x40': '\\u00a7',  // @ -> section symbol (double s)\n\n      '\\x5b': '\\u00c4',  // [ -> 'A' umlaut\n      '\\x5c': '\\u00d6',  // \\ -> 'O' umlaut\n      '\\x5d': '\\u00dc',  // ] -> 'U' umlaut\n\n      '\\x7b': '\\u00e4',  // { -> 'a' umlaut\n      '\\x7c': '\\u00f6',  // | -> 'o' umlaut\n      '\\x7d': '\\u00fc',  // } -> 'u' umlaut\n      '\\x7e': '\\u00df',  // ~ -> eszett\n    });\n\n/**\n * Italian character map.\n * http://vt100.net/docs/vt220-rm/table2-11.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['Y'] = new hterm.VT.CharacterMap(\n    'italian', {\n      '\\x23': '\\u00a3',  // # -> british-pound\n\n      '\\x40': '\\u00a7',  // @ -> section symbol (double s)\n\n      '\\x5b': '\\u00b0',  // [ -> ring\n      '\\x5c': '\\u00e7',  // \\ -> 'c' cedilla\n      '\\x5d': '\\u00e9',  // ] -> 'e' acute\n\n      '\\x60': '\\u00f9',  // ` -> 'u' grave\n\n      '\\x7b': '\\u00e0',  // { -> 'a' grave\n      '\\x7c': '\\u00f2',  // | -> 'o' grave\n      '\\x7d': '\\u00e8',  // } -> 'e' grave\n      '\\x7e': '\\u00ec',  // ~ -> 'i' grave\n    });\n\n/**\n * Norwegian/Danish character map.\n * http://vt100.net/docs/vt220-rm/table2-12.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['E'] =\nhterm.VT.CharacterMaps.DefaultMaps['6'] = new hterm.VT.CharacterMap(\n    'norwegian/danish', {\n      '\\x40': '\\u00c4',  // @ -> 'A' umlaut\n\n      '\\x5b': '\\u00c6',  // [ -> 'AE' ligature\n      '\\x5c': '\\u00d8',  // \\ -> 'O' stroke\n      '\\x5d': '\\u00c5',  // ] -> 'A' ring\n      '\\x5e': '\\u00dc',  // ^ -> 'U' umlaut\n\n      '\\x60': '\\u00e4',  // ` -> 'a' umlaut\n\n      '\\x7b': '\\u00e6',  // { -> 'ae' ligature\n      '\\x7c': '\\u00f8',  // | -> 'o' stroke\n      '\\x7d': '\\u00e5',  // } -> 'a' ring\n      '\\x7e': '\\u00fc',  // ~ -> 'u' umlaut\n    });\n\n/**\n * Spanish character map.\n * http://vt100.net/docs/vt220-rm/table2-13.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['Z'] = new hterm.VT.CharacterMap(\n    'spanish', {\n      '\\x23': '\\u00a3',  // # -> british-pound\n\n      '\\x40': '\\u00a7',  // @ -> section symbol (double s)\n\n      '\\x5b': '\\u00a1',  // [ -> '!' inverted\n      '\\x5c': '\\u00d1',  // \\ -> 'N' tilde\n      '\\x5d': '\\u00bf',  // ] -> '?' inverted\n\n      '\\x7b': '\\u00b0',  // { -> ring\n      '\\x7c': '\\u00f1',  // | -> 'n' tilde\n      '\\x7d': '\\u00e7',  // } -> 'c' cedilla\n    });\n\n/**\n * Swedish character map.\n * http://vt100.net/docs/vt220-rm/table2-14.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['7'] =\nhterm.VT.CharacterMaps.DefaultMaps['H'] = new hterm.VT.CharacterMap(\n    'swedish', {\n      '\\x40': '\\u00c9',  // @ -> 'E' acute\n\n      '\\x5b': '\\u00c4',  // [ -> 'A' umlaut\n      '\\x5c': '\\u00d6',  // \\ -> 'O' umlaut\n      '\\x5d': '\\u00c5',  // ] -> 'A' ring\n      '\\x5e': '\\u00dc',  // ^ -> 'U' umlaut\n\n      '\\x60': '\\u00e9',  // ` -> 'e' acute\n\n      '\\x7b': '\\u00e4',  // { -> 'a' umlaut\n      '\\x7c': '\\u00f6',  // | -> 'o' umlaut\n      '\\x7d': '\\u00e5',  // } -> 'a' ring\n      '\\x7e': '\\u00fc',  // ~ -> 'u' umlaut\n    });\n\n/**\n * Swiss character map.\n * http://vt100.net/docs/vt220-rm/table2-15.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['='] = new hterm.VT.CharacterMap(\n    'swiss', {\n      '\\x23': '\\u00f9',  // # -> 'u' grave\n\n      '\\x40': '\\u00e0',  // @ -> 'a' grave\n\n      '\\x5b': '\\u00e9',  // [ -> 'e' acute\n      '\\x5c': '\\u00e7',  // \\ -> 'c' cedilla\n      '\\x5d': '\\u00ea',  // ] -> 'e' circumflex\n      '\\x5e': '\\u00ee',  // ^ -> 'i' circumflex\n      '\\x5f': '\\u00e8',  // _ -> 'e' grave\n\n      '\\x60': '\\u00f4',  // ` -> 'o' circumflex\n\n      '\\x7b': '\\u00e4',  // { -> 'a' umlaut\n      '\\x7c': '\\u00f6',  // | -> 'o' umlaut\n      '\\x7d': '\\u00fc',  // } -> 'u' umlaut\n      '\\x7e': '\\u00fb',  // ~ -> 'u' circumflex\n    });\nlib.resource.add('hterm/audio/bell', 'audio/ogg;base64',\n'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' +\n'zinmkFLKMeUcUko5p5xTzjkIHYTKMQadgxAppRxTzinHHITMQeWcg9BBKAAAIMABACDAQig0ZEUA' +\n'ECcA4HAkz5M0SxQlSxNFzxRl1xNN15U0zTQ1UVRVyxNV1VRV2xZNVbYlTRNNTfRUVRNFVRVV05ZN' +\n'VbVtzzRl2VRV3RZV1bZl2xZ+V5Z13zNNWRZV1dZNVbV115Z9X9ZtXZg0zTQ1UVRVTRRV1VRV2zZV' +\n'17Y1UXRVUVVlWVRVWXZlWfdVV9Z9SxRV1VNN2RVVVbZV2fVtVZZ94XRVXVdl2fdVWRZ+W9eF4fZ9' +\n'4RhV1dZN19V1VZZ9YdZlYbd13yhpmmlqoqiqmiiqqqmqtm2qrq1bouiqoqrKsmeqrqzKsq+rrmzr' +\n'miiqrqiqsiyqqiyrsqz7qizrtqiquq3KsrCbrqvrtu8LwyzrunCqrq6rsuz7qizruq3rxnHrujB8' +\n'pinLpqvquqm6um7runHMtm0co6rqvirLwrDKsu/rui+0dSFRVXXdlF3jV2VZ921fd55b94WybTu/' +\n'rfvKceu60vg5z28cubZtHLNuG7+t+8bzKz9hOI6lZ5q2baqqrZuqq+uybivDrOtCUVV9XZVl3zdd' +\n'WRdu3zeOW9eNoqrquirLvrDKsjHcxm8cuzAcXds2jlvXnbKtC31jyPcJz2vbxnH7OuP2daOvDAnH' +\n'jwAAgAEHAIAAE8pAoSErAoA4AQAGIecUUxAqxSB0EFLqIKRUMQYhc05KxRyUUEpqIZTUKsYgVI5J' +\n'yJyTEkpoKZTSUgehpVBKa6GU1lJrsabUYu0gpBZKaS2U0lpqqcbUWowRYxAy56RkzkkJpbQWSmkt' +\n'c05K56CkDkJKpaQUS0otVsxJyaCj0kFIqaQSU0mptVBKa6WkFktKMbYUW24x1hxKaS2kEltJKcYU' +\n'U20txpojxiBkzknJnJMSSmktlNJa5ZiUDkJKmYOSSkqtlZJSzJyT0kFIqYOOSkkptpJKTKGU1kpK' +\n'sYVSWmwx1pxSbDWU0lpJKcaSSmwtxlpbTLV1EFoLpbQWSmmttVZraq3GUEprJaUYS0qxtRZrbjHm' +\n'GkppraQSW0mpxRZbji3GmlNrNabWam4x5hpbbT3WmnNKrdbUUo0txppjbb3VmnvvIKQWSmktlNJi' +\n'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' +\n'm2L/kruPM6Q7oz4tvDQy+bZ3HzOi+gNHA4DZEgA='\n);\n\nlib.resource.add('hterm/images/copy', 'image/svg+xml;utf8',\n'<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2em\" height=\"2em\" viewBox=\"0 0 48 48\" fill=\"currentColor\">' +\n'  <path d=\"M32 2H8C5.79 2 4 3.79 4 6v28h4V6h24V2zm6 8H16c-2.21 0-4 1.79-4 4v28c0 2.21 1.79 4 4 4h22c2.21 0 4-1.79 4-4V14c0-2.21-1.79-4-4-4zm0 32H16V14h22v28z\"/>' +\n'</svg>'\n);\n\nlib.resource.add('hterm/images/close', 'image/svg+xml;utf8',\n'<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">' +\n'  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>' +\n'</svg>'\n);\n\nlib.resource.add('hterm/images/keyboard_arrow_down', 'image/svg+xml;utf8',\n'<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">' +\n'  <path d=\"M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z\"/>' +\n'</svg>'\n);\n\nlib.resource.add('hterm/images/keyboard_arrow_up', 'image/svg+xml;utf8',\n'<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">' +\n'  <path d=\"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"/>' +\n'</svg>'\n);\n\nlib.resource.add('hterm/html/find_bar', 'text/html;utf8',\n'<meta charset=\\'utf-8\\'/>' +\n'<style>' +\n':root {' +\n'  --hterm-grey-200-rgb: 232, 234, 237;  /* #e8eaed */' +\n'  --hterm-grey-200: rgb(var(--hterm-grey-200-rgb));' +\n'  --hterm-grey-400-rgb: 189, 193, 198;  /* #bdc1c6 */' +\n'  --hterm-grey-400: rgb(var(--hterm-grey-400-rgb));' +\n'  --hterm-grey-600-rgb: 128, 134, 139;  /* #80868b */' +\n'  --hterm-grey-600: rgb(var(--hterm-grey-600-rgb));' +\n'  --hterm-grey-800-rgb: 60, 64, 67;  /* #3c4043 */' +\n'  --hterm-grey-800: rgb(var(--hterm-grey-800-rgb));' +\n'}' +\n'' +\n'#hterm\\\\:find-bar {' +\n'  align-items: center;' +\n'  background: white;' +\n'  border: 1px solid var(--hterm-grey-600);' +\n'  border-radius: 2px;' +\n'  box-shadow: 0 2px 2px 1px rgba(var(--hterm-grey-600-rgb), .1);' +\n'  display: none;' +\n'  font-family: sans-serif;' +\n'  padding: 5px 15px;' +\n'  position: fixed;' +\n'  right: 16px;' +\n'  top : 0;' +\n'  z-index: 1;' +\n'}' +\n'#hterm\\\\:find-bar.enabled {' +\n'  display: flex;' +\n'}' +\n'#hterm\\\\:find-bar > input {' +\n'  border: 0;' +\n'  margin: 8px 0;' +\n'  outline: none;' +\n'  width: 200px;' +\n'}' +\n'#hterm\\\\:find-bar-vertical-separator {' +\n'  align-self: stretch;' +\n'  border-left: 1px solid var(--hterm-grey-400);' +\n'  margin-left: 10px;' +\n'}' +\n'#hterm\\\\:find-bar > .button {' +\n'  align-items: center;' +\n'  border-radius: 50%;' +\n'  cursor: var(--hterm-mouse-cursor-pointer);' +\n'  display: flex;' +\n'  height: 24px;' +\n'  justify-content: center;' +\n'  margin-left: 8px;' +\n'  transition: background-color 0.3s linear;' +\n'  width: 24px;' +\n'}' +\n'#hterm\\\\:find-bar > .button.enabled:hover {' +\n'  background-color: var(--hterm-grey-200);' +\n'}' +\n'#hterm\\\\:find-bar > .button.enabled:active {' +\n'  background-color: var(--hterm-grey-400);' +\n'  transition: background-color 0s;' +\n'}' +\n'#hterm\\\\:find-bar > .button.enabled > svg {' +\n'  fill: var(--hterm-grey-800);' +\n'}' +\n'#hterm\\\\:find-bar > .button > svg {' +\n'  height: 20px;' +\n'  fill: var(--hterm-grey-400);' +\n'  width: 20px;' +\n'}' +\n'#hterm\\\\:find-bar-count {' +\n'  color: var(--hterm-grey-600);' +\n'}' +\n'</style>' +\n'<input type=\\'text\\'>' +\n'<div id=\\'hterm:find-bar-count\\'>0/0</div>' +\n'<div id=\\'hterm:find-bar-vertical-separator\\' tabindex=\\'-1\\'></div>' +\n'<div id=\\'hterm:find-bar-up\\' class=\\'button\\' role=\\'button\\'></div>' +\n'<div id=\\'hterm:find-bar-down\\' class=\\'button\\' role=\\'button\\'></div>' +\n'<div id=\\'hterm:find-bar-close\\' class=\\'button enabled\\' role=\\'button\\'></div>'\n);\n\nlib.resource.add('hterm/html/find_screen', 'text/html;utf8',\n'<meta charset=\\'utf-8\\'/>' +\n'<style>' +\n'#hterm\\\\:find-result-screen {' +\n'  height: 100%;' +\n'  left: var(--hterm-screen-padding-size);' +\n'  pointer-events: none;' +\n'  position: absolute;' +\n'  top: var(--hterm-screen-padding-size);' +\n'  width: 100%;' +\n'}' +\n'#hterm\\\\:find-result-screen > find-row {' +\n'  display: block;' +\n'  height: var(--hterm-charsize-height);' +\n'  line-height: var(--hterm-charsize-height);' +\n'}' +\n'#hterm\\\\:find-result-screen > find-row > .find-highlighter {' +\n'  background-color: var(--hterm-find-result-color);' +\n'  height: var(--hterm-charsize-height);' +\n'  position: absolute;' +\n'}' +\n'#hterm\\\\:find-result-screen > find-row > .find-highlighter.selected {' +\n'  background-color: var(--hterm-find-result-selected-color);' +\n'}' +\n'</style>'\n);\n\nlib.resource.add('hterm/images/icon-96', 'image/png;base64',\n'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' +\n'YII='\n);\n\nlib.resource.add('hterm/concat/date', 'text/plain',\n'Wed, 15 Nov 2023 16:55:56 +0000'\n);\n\nlib.resource.add('hterm/changelog/version', 'text/plain',\n'1.92.1'\n);\n\nlib.resource.add('hterm/changelog/date', 'text/plain',\n'2022-03-04'\n);\n\nlib.resource.add('hterm/git/HEAD', 'text/plain',\n'25a9592267b488b5ddd8688677175bfd82f6f515'\n);\n\nexport {\n    lib,\n    hterm,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t44: 0,\n\t871: 0,\n\t186: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpipeline_manager\"] = self[\"webpackChunkpipeline_manager\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__.O(undefined, [814,171,491,871,740,726,191,362,35,661,49,874,606,246,751,641,786,307,109,155,286,126,670,370,601,186,197,389,257,637,505], () => (__webpack_require__(__webpack_require__.s = 24078)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","lib","name","callback","initCallbacks_","push","async","logFunction","undefined","ary","length","init","shift","ret","then","condition","window","chai","assert","value","polyfill","BlobArrayBuffer","Promise","resolve","reject","reader","FileReader","onload","result","onabort","onerror","readAsArrayBuffer","this","Blob","prototype","arrayBuffer","BlobText","readAsText","text","array","concatTyped","arrays","resultLength","constructor","pos","set","compare","a","b","i","codec","codeUnitArrayToString","String","fromCharCode","stringToCodeUnitArray","str","Uint8Array","charCodeAt","colors","re_","hex16","hex24","rgb","RegExp","replace","rgba","rgbx","hsl","hsla","hslx","x11rgb","rgbToX11","scale","v","Math","min","toString","f","zpad","match","x11HexToCSS","startsWith","substr","indexOf","size","r","g","arrayToRGBA","map","parseInt","x11ToCSS","splice","round","nameToRGB","hexToRGB","hex","test","x","join","val","index","rgbToHex","crackRGB","alpha","parseFloat","crackHSL","color","Array","from","console","error","hslxArrayToRgbaArray","hue","sat","light","hueToRgb","t1","t2","hsvxArrayToHslaArray","hsvx","clamp","saturation","hslLightness","hslSaturation","hslxArrayToHsvaArray","lightness","hsvValue","hsvSaturation","hslToRGB","rgbxArrayToHslaArray","max","spread","l","h","abs","rgbToHsl","s","normalizeCSS","def","normalizeCSSToHSL","arrayToHSLA","setAlpha","mix","base","tint","percent","ary1","ary2","basecol","diff","colorNames","toLowerCase","luminance","rr","gg","bb","pow","contrastRatio","l1","l2","stockPalette","replaceVars","vars","fn","varname","Error","rv","functions","encodeURI","encodeURIComponent","escapeHTML","m","getURL","path","chromeSupported","chrome","runtime","location","origin","number","padStart","getStack","ignoreFrames","count","stackArray","stack","split","stackObject","smartFloorDivide","numerator","denominator","ceiling","ceil","floor","randomInt","random","getOs","browser","getPlatformInfo","info","os","navigator","userAgent","ua","includes","process","getChromeMilestone","NaN","lastError","defaultMsg","message","openWindow","url","features","win","open","opener","i18n","browser_","browserSupported","getAcceptLanguages","languages","language","getMessage","msgname","substitutions","fallback","replaceReferences","msg","args","resolveLanguage","lang","region","MessageManager","useCrlf","languages_","stop","messages_","Messages","addMessages","defs","key","placeholders","toUpperCase","content","findAndLoadMessages","pattern","loadMessages","e","warn","xhr","XMLHttpRequest","JSON","parse","responseText","send","get","processI18nAttributes","node","nodes","querySelectorAll","processI18nAttribute","getAttribute","ex","tagName","id","attr","textContent","setAttribute","PreferenceManager","storage","prefix","storageObserver_","onStorageChange_","bind","isActive_","activate","trace","endsWith","isImportingJson_","prefRecords_","globalObservers_","childFactories_","childLists_","DEFAULT_VALUE","Symbol","Record","defaultValue","currentValue","observers","addObserver","observer","removeObserver","stringify","deactivate","readStorage","pendingChildren","onChildComplete","keys","Object","el","log","getItems","items","prefixLength","needSync","syncChildList","setTimeout","definePreference","onChange","record","changeDefault","definePreferences","defaults","defineChildren","listName","childFactory","onChildListChange_","addObservers","global","notifyAll","notifyChange_","createChild","hint","ids","childManager","resetAll","removeChild","getChild","childList","onChildStorage","currentIds","oldIds","managerIndex","reset","removeItem","changed","removeItems","forEach","newValue","changeDefaults","onComplete","saveToStorage","oldValue","setItem","getDefault","getBoolean","getNumber","getString","exportAsJson","childIds","json","importFromJson","pendingWrites","onWriteStorage","childPrefManager","lastIndexOf","resource","resources_","ResourceRecord","add","type","data","getData","getDataUrl","Storage","clear","getItem","setItems","obj","generateStorageChanges","oldStorage","newStorage","changes","hasOwnProperty","Chrome","storage_","observers_","onChanged","addListener","onChanged_","o","err","remove","Local","notNull","localStorage","addEventListener","onStorage_","parseJson_","jsonString","storageArea","Memory","update_","assign","TerminalPrivate","terminalPrivate","prefValue_","prefValueWriteToResolve_","prefsLoaded_","onSettingsChanged","onSettingsChanged_","initCache_","getSettings","settings","setPref_","setSettings","Intl","GRANULARITIES","RULES","grapheme","word","letter","sentence","terminator","separator","line","hard","soft","fixBreakType","granularity","ruleStatus","none","kana","ideo","unknown","$SegmentIterator$","string","breaks","_cur","_type","_breaks","iterator","next","done","breakType","segment","following","preceding","position","Segmenter","locale","localeMatcher","_locale","isArray","_granularity","vbi","v8BreakIterator","adoptText","last","current","slice","rules","found","rule","re","wc","nulWidth","controlWidth","regardCjkAmbiguous","cjkAmbiguousWidth","combining","ambiguous","unambiguous","binaryTableSearch_","ucs","table","mid","isSpace","isCjkAmbiguous","charWidth","charWidthRegardAmbiguous","charWidthDisregardAmbiguous","strWidth","codePoint","codePointAt","width","start","subwidth","startIndex","endIndex","substring","end","hterm","registerInit","initMessageManager","messageManager","initOs","catch","onWindow","windowType","defaultStorage","sync","tabs","getCurrent","tab","windows","windowId","onTab","copySelectionToClipboard","document","execCommand","copySource","createElement","style","cssText","body","appendChild","selection","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","selectAllChildren","firefoxException","extend","collapse","permissions","query","status","checkState","state","onchange","clipboard","writeText","notify","params","curr","options","icon","title","desktopNotificationTitle","n","Notification","onclick","focus","close","openUrl","openTab","Size","height","resize","clone","setTo","that","equals","RowCol","row","column","overflow","move","AccessibilityReader","div","document_","ownerDocument","liveRegion","accessibilityEnabled","liveElement_","assertiveLiveElement_","queue_","nextReadTimer_","cursorIsChanging_","cursorChangeQueue_","lastCursorRowString_","lastCursorRow_","lastCursorColumn_","hasUserGesture","DELAY","setAccessibilityEnabled","enabled","decorate","doc","handler","beforeCursorChange","cursorRowString","cursorRow","cursorColumn","afterCursorChange","announceAction_","announce","padding","addToLiveRegion_","assertiveAnnounce","trim","innerText","newLine","clearTimeout","len","cursorDeleted","lengthOfCurrentRow","numCharsDeleted","lengthOfEndOfString","deleted","ContextMenu","element_","menu_","Item","SEPARATOR","setDocument","regenerate_","hide","firstChild","action","menuitem","innerHTML","className","preventDefault","show","terminal","fontSize","getFontSize","fontFamily","getFontFamily","top","clientY","left","clientX","docSize","getBoundingClientRect","display","eleSize","minY","minX","FindBar","terminal_","scrollPort_","getScrollPort","findBar_","input_","hasFocus","upArrowButton_","downArrowButton_","closeButton_","counterLabel_","results_","pendingFind_","pendingRedraw_","pendingNotifyChanges_","changedRows_","Set","searchText_","batchRow_","batchNum_","batchCallbacksForTest_","batchSize","isVisible","visibleRows_","onScroll_","scheduleRedraw_","selectedRowNum_","selectedRowIndex_","selectedOrdinal_","resultCount_","selectedResult_","matchingRowsIndex_","selectedResultKnown_","RowResult","Result","querySelector","onInput_","onKeyDown_","onKeyPressed_","onInputText_","onPrevious_","onNext_","resultScreen_","subscribe","classList","removeAttribute","dispatchEvent","Event","unsubscribe","stopSearch","runBatchCallbackForTest_","syncResults_","redraw_","updateCounterLabel_","rowCount","getRowCount","runNextBatch","batchEnd","findInRow_","rowNum","update","prev","rowText","getRowText","rowResult","highlighter","findRow","scrollToResult_","event","target","stopPropagation","metaKey","altKey","shiftKey","ctrlKey","keyCode","setFindResultColor","getPrefs","setCssVar","setFindResultSelectedColor","setBatchCallbackForTest","batchNum","topRowIndex","getTopRowIndex","bottomRowIndex","getBottomRowIndex","newRow","fetchRowNode_","highlightSelectedResult_","getDocument","arr","low","high","canUseMatchingRowsIndex_","step","selectNext_","circularStep","stepOnce","contains","scrollRowToMiddle","scheduleNotifyChanges","notifyChanges_","Frame","div_","iframe_","container_","messageChannel_","onMessage_","sendTerminalInfo_","postMessage","port1","onmessage","onMessage","onLoad","onLoad_","MessageChannel","contentWindow","argv","messagePort","port2","acceptLanguages","foregroundColor","getForegroundColor","backgroundColor","getBackgroundColor","cursorColor","getCursorColor","baseURL","onCloseClicked_","parentNode","onClose","container","iframe","Keyboard","keyboardElement_","handlers_","onFocusOut_","onKeyPress_","onKeyUp_","onTextInput_","keyMap","KeyMap","bindings","Bindings","altGrMode","shiftInsertPaste","homeKeysScroll","pageKeysScroll","ctrlPlusMinusZeroZoom","ctrlCCopy","ctrlVPaste","applicationKeypad","applicationCursor","backspaceSendsBackspace","metaSendsEscape","passMetaV","altSendsWhat","altIsMeta","altBackspaceIsMetaBackspace","altKeyPressed","mediaKeysAreFKeys","previousAltSendsWhat_","KeyActions","CANCEL","DEFAULT","PASS","STRIP","KeyAction","installKeyboard","element","removeEventListener","uninstallKeyboard","onVTKeystroke","which","ch","charCode","keyDef","keyDefs","addKeyDef","resolvedActionType","getKeyDefAction","call","control","alt","meta","isPrintable","keyCap","keyboard","keyDown","ctrl","binding","getBinding","maskShiftKey","contextMenu","normal","imod","mod","code","KeyDown","KeyBindingFunction","KeyBindingAction","KeyBinding","bindings_","OsDefaults","addBinding_","keyPattern","list","matchKeyPattern","sort","KeyPattern","sortCompare","addBinding","p","Parser","sequence","parseKeySequence","isComplete","parseKeyAction","addBindings","addOsDefaults","matchKeyDown","KeyDef","KeyDefFunction","KeyDefFunctionProvider","KeyDefAction","k","ac","bs","sh","ctl","c","med","keycapSC","keycapEP","keycapMU","SS3","CSI","onKeyInsert_","onKeyHome_","scrollHome","onKeyEnd_","scrollEnd","onKeyPageUp_","scrollPageUp","onKeyDel_","onKeyPageDown_","scrollPageDown","onKeyArrowUp_","scrollLineUp","onKeyArrowDown_","scrollLineDown","onClear_","wipeContents","onF11_","onCtrlNum_","passCtrlNumber","onAltNum_","passAltNumber","onMetaNum_","passMetaNumber","onCtrlTab_","passCtrlTab","onCtrlW_","passCtrlW","onCtrlT_","passCtrlT","onCtrlShiftA_","selectAll","onCtrlShiftF_","findBar","onCtrlC_","isCollapsed","clearSelectionAfterCopy","collapseToEnd","onCtrlN_","passCtrlN","href","innerWidth","innerHeight","onCtrlV_","paste","onMetaN_","outerWidth","outerHeight","onMetaC_","onMetaV_","onZoom_","cap","setFontSize","spec","wildcardCount","modifiers","match_","exactMatch","modValue","NotificationCenter","parent","parent_","reader_","newContainer_","timeout_","fadeout_","ele","timeout","Text","opacity","Options","copy","wraparound","reverseWraparound","originMode","autoCarriageReturn","cursorVisible","cursorBlink","insertMode","reverseVideo","bracketedPaste","source","identifiers","modifierKeys","skipSpace","token","parseToken","ucValue","keyCodes","advance","actions","peekString","peekIdentifier","peekInteger","parseIdentifier","parseString","parseInteger","parsePattern","quote","lastIndex","exec","parseEscape","expect","SHIFT","CTRL","CONTROL","ALT","META","ESCAPE","ESC","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","ZERO","MINUS","EQUAL","BACKSPACE","BKSP","BS","TAB","Q","W","E","R","T","Y","U","I","O","P","BRACKET_LEFT","BRACKET_RIGHT","CAPS_LOCK","CAPSLOCK","CAPS","A","S","D","F","G","H","J","K","L","ENTER","ENT","RETURN","RET","Z","X","C","V","B","N","M","SPACE","SP","PRINT_SCREEN","PRTSC","SCROLL_LOCK","SCRLK","BREAK","BRK","INSERT","INS","HOME","PAGE_UP","PGUP","DELETE","DEL","END","PAGE_DOWN","PGDOWN","PGDN","UP","DOWN","RIGHT","LEFT","NUMLOCK","KP0","KP1","KP2","KP3","KP4","KP5","KP6","KP7","KP8","KP9","KP_PLUS","KP_ADD","KP_MINUS","KP_SUBTRACT","KP_STAR","KP_MULTIPLY","KP_DIVIDE","KP_DECIMAL","KP_PERIOD","NAVIGATE_BACK","NAVIGATE_FORWARD","RELOAD","FULL_SCREEN","WINDOW_OVERVIEW","BRIGHTNESS_UP","BRIGHTNESS_DOWN","scrollToTop","scrollToBottom","clearScreen","clearHome","clearScrollback","clearTerminal","fullReset","softReset","profileId","Terminal","DEFAULT_PROFILE_ID","prefix_","entries","defaultPreferences","entry","listProfiles","profiles","Categories","Appearance","CopyPaste","Sounds","Scrolling","Encoding","Extensions","Miscellaneous","categoryDefinitions","definePref_","category","help","create","PubSub","addBehavior","pubsub","subject","publish","lastCallback","concat","notifyList","Screen","columnCount","rowsArray","columnCount_","textAttributes","TextAttributes","cursorPosition","cursorState_","CursorState","cursorRowNode_","cursorNode_","cursorOffset_","wordBreakMatchLeft","wordBreakMatchRight","wordBreakMatchMiddle","getSize","getHeight","getWidth","setColumnCount","setCursorPosition","shiftRow","shiftRows","unshiftRow","unshiftRows","rows","unshift","apply","popRow","popRows","pushRow","pushRows","insertRow","insertRows","removeRow","removeRows","invalidateCursorPosition","clearCursorRow","isDefault","repeat","inverse","syncColors","createContainer","commitLineOverflow","rowNode","createTextNode","currentColumn","offset","nodeWidth","nextSibling","syncSelectionCaret","firefoxIgnoredException","splitNode_","afterNode","cloneNode","nodeSubstr","insertBefore","maybeClipCurrentRow","insertString","wcwidth","cursorNode","cursorNodeText","reverseOffset","ws","underline","strikethrough","background","wcNode","asciiNode","tileData","nodeType","Node","TEXT_NODE","tileNode","textDecoration","textDecorationStyle","textDecorationLine","wsNode","matchesContainer","previousSibling","newNode","overwriteString","maxLength","deleteChars","currentCursorColumn","startLength","endLength","spaceNode","nextNode","emptyNode","getLineStartRow_","hasAttribute","getLineText_","rowOrNull","getXRowAncestor_","nodeOrNull","nodeName","getPositionWithOverflow_","ancestorRow","getPositionWithinRow_","childNodes","currentNode","getNodeAndOffsetWithOverflow_","getNodeAndOffsetWithinRow_","nodeTextWidth","setRange_","range","startNodeAndOffset","endNodeAndOffset","setStart","setEnd","expandSelectionWithWordBreakMatches_","leftMatch","rightMatch","insideMatch","getRangeAt","rowElement","startContainer","startPosition","startOffset","endPosition","endContainer","endOffset","lineUpToRange","leftRegularExpression","expandedStart","search","lineFromRange","rightRegularExpression","expandedEnd","addRange","expandSelection","expandSelectionForUrl","saveCursorAndState","vt","save","restoreCursorAndState","restore","screen","screen_","cursor","GL","GR","G0","G1","G2","G3","saveCursor","restoreCursor","tattrs","colorPaletteOverrides","RowProvider","getRowNode","ScrollPort","rowProvider","rowProvider_","characterSize","ruler_","Selection","currentRowNodeCache_","previousRowNodeCache_","lastScreenWidth_","lastScreenHeight_","selectionEnabled_","lastRowCount_","scrollWheelMultiplier_","lastTouch_","screenPaddingSize","lineHeightPaddingSize","isScrolledEnd","currentScrollbarWidthPx","DEFAULT_SCROLLBAR_WIDTH","pasteOnDrop","contenteditable","timeouts_","ariaHiddenSelectionRows_","DEBUG_","scrollPort","startRow","startNode","endRow","endNode","isMultiline","autoScrollOnMouseMoveBound_","autoScrollOnMouseMove_","autoScrollEnabled_","autoScrollDirection_","autoScrollInterval_","autoScrollDelta_","findFirstChild","childAry","screenHeight","pageY","startAutoScroll_","visibleRowsHeight","stopAutoScroll_","setAutoScrollEnabled","autoScroll_","delta","scrollRowToTop","setInterval","clearInterval","anchorFirst","anchorRow","focusRow","focusFirst","focusIsStartOfTopRow","topFold_","focusIsEndOfBottomRow","bottomFold_","lastChild","rowIndex","firstNode","paintIframeContents_","onResize_","contentDocument","metaCharset","head","paddingTop","paddingBottom","userCssLink_","userCssText_","onScrollWheel_","onTouch_","onCopy_","onPaste_","onDragAndDrop_","onBodyKeyDown_","a11yButtonStyle","scrollUpButton_","scrollDownButton_","bottom","optionsButton_","allowA11yButtonsToDisplay_","accessibilityReader_","selectedElement","parentElement","rowNodes_","topSelectBag_","bottomSelectBag_","scrollArea_","pasteTarget_","contentEditable","handlePasteTargetTextInput_","setAccessibilityReader","accessibilityReader","visibleRowCount","assertiveAnnounce_","setFontFamily","smoothing","webkitFontSmoothing","syncCharacterSize","setUserCssUrl","setUserCssText","blur","setBackgroundImage","image","backgroundImage","setBackgroundSize","backgroundSize","setBackgroundPosition","backgroundPosition","setScreenPaddingSize","setLineHeightPaddingSize","setCtrlVPaste","setPasteOnDrop","getScreenSize","rightPadding","getScreenWidth","getScreenHeight","getScrollbarX","getScreenNode","resetCache","setRowProvider","scheduleRedraw","invalidate","drawVisibleRows_","scheduleInvalidate","px","measureCharacterSize","weight","ruler","context","getContext","font","heightBox","measureText","ascent","actualBoundingBoxAscent","fontBoundingBoxAscent","descent","actualBoundingBoxDescent","fontBoundingBoxDescent","widthBox","syncScrollbarWidth_","syncScrollHeight","syncRowNodesDimensions_","topRow","bottomRow","percentScrolled","currentScreenContent","screenSize","visibleRowTopMargin","visibleRowBottomMargin","marginBottom","topFoldOffset","offsetLeft","offsetTop","clientWidth","redraw","updateScrollButtonState_","setButton","button","disabled","resetSelectBags_","drawTopFold_","drawBottomFold_","ariaHideOffscreenSelectionRows_","removeUntilNode","targetNode","deadNode","selectionStartRow","selectionEndRow","bottomFold","targetDrawCount","drawCount","hiddenRows","pop","checkRow","cacheRowNode_","firstRow","lastRowIndex","lastRow","getScrollMax_","scrollTop","scrollMax","scrollRowToBottom","onScrollWheel","defaultPrevented","scrollWheelDelta","y","deltaMode","WheelEvent","DOM_DELTA_PIXEL","deltaX","deltaY","DOM_DELTA_LINE","DOM_DELTA_PAGE","onTouch","scrubTouch","t","identifier","touch","focused","changedTouches","onCopy","endBackfillIndex","getRowsText","startBackfillIndex","format","dataTransfer","types","setScrollbarVisible","overflowY","setScrollWheelMoveMultipler","multiplier","ready_","profileId_","prefs_","primaryScreen_","alternateScreen_","onScrollportFocus_","onOpenOptionsPage_","notifications_","scrollbackRows_","tabStops_","defaultTabStops","vtScrollTop_","vtScrollBottom_","cursorShape_","cursorShape","BLOCK","cursorBlinkCycle_","cursorBlinkPause_","cursorOffScreen_","myOnCursorBlink_","onCursorBlink_","backgroundColor_","foregroundColor_","colorPaletteOverrides_","Map","screenBorderSize_","scrollOnOutput_","scrollOnKeystroke_","scrollWheelArrowKeys_","defeatMouseReports_","setAutomaticMouseHiding","mouseHideDelay_","bellAudio_","bellNotificationList_","bellSquelchTimeout_","desktopNotificationBell_","savedOptions_","options_","VT","io","IO","enableMouseDragScroll","copyOnSelect","mouseRightClickPaste","mousePasteButton","useDefaultWindowCopy","realizeSize_","setDefaultTabStops","allowImagesInline","reportFocus","alwaysUseLegacyPasting","setProfile","onTerminalReady","BEAM","UNDERLINE","tabWidth","loadKeyBindings","useOsDefaults","permission","setBackgroundColor","characterMaps","setOverrides","setCursorBlink","setCursorShape","setCursorColor","setColorPalette","isNaN","enable8BitControl","syncBoldSafeState","enableBoldAsBright","setTextBlink","enableClipboardWrite","enableDec12","enableCsiJ3","syncFontFamily","setForegroundColor","syncMousePasteButton","setScreenBorderSize","borderColor","setEncoding","setBracketedPaste","getCssVar","setSelectionEnabled","cssUrl","setRgbColorCssVar","runCommandClass","commandClass","commandName","environment","command","onExit","CustomEvent","run","isPrimaryScreen","documentElement","setProperty","getColorPalette","resetColor","resetColorPalette","getPropertyValue","updateCssCharsize_","enableBold","normalSize","boldSize","isBoldSafe","syncMouseStyle","mouseReport","MOUSE_REPORT_DISABLED","getTextAttributes","setTextAttributes","setWindowTitle","setWindowName","clearCursorOverflow","both","shape","restyleCursor_","getCursorShape","borderWidth","setWidth","scheduleSyncCursorPosition_","setHeight","realizeWidth_","realizeHeight_","onTerminalResize_","deltaColumns","deltaRows","scrollbackCount","appendRows_","setVTScrollRegion","renumberRows_","syncCursorPosition_","clearAllTabStops","resetScreen","setCursorVisible","forwardTabStop","setCursorColumn","backwardTabStop","setTabStop","clearTabStopAtCursor","w","interpret","charset","characterSet","borderStyle","boxSizing","setupScrollPort_","oncontextmenu","onMouse","onMouse_","screenNode","onKeyboardActivity_","onFocusChange_","scrollBlockerNode_","setReverseVideo","fonts","screenIndex","extraRows","scheduleScrollDown_","setAbsoluteCursorPosition","insertRow_","moveRows_","fromIndex","toIndex","print","didOverflow","tokens","splitWidecharString","wcStrWidth","scrollBottom","getVTScrollTop","getVTScrollBottom","dueToOverflow","cursorAtEndOfScreen","cursorAtEndOfVTRegion","vtScrollUp","lineFeed","formFeed","reverseLineFeed","currentRow","insertLines","setAbsoluteCursorRow","eraseToLeft","eraseToRight","maxCount","DEFAULT_COLOR","eraseLine","eraseAbove","eraseBelow","fill","col","moveCount","deleteLines","moveStart","insertSpace","vtScrollDown","setRelativeCursorPosition","getCursorColumn","getCursorRow","scrollDown","cursorUp","cursorDown","minHeight","maxHeight","cursorLeft","newColumn","cursorRight","ringBell","play","bellSequelchTimeout_","closeBellNotifications_","setOriginMode","setInsertMode","setAutoCarriageReturn","setWraparound","setReverseWraparound","setAlternateMode","oldOverrides","newOverrides","pauseCursorBlink_","cursorBlinkPause","cursorRowIndex","forceSyncSelection","cursorColumnIndex","cursorLineText","borderBottomStyle","borderLeftStyle","syncCursor","showOverlay","hideOverlay","readText","onPasteData_","copyStringToClipboard","clipboardNotice_","textAlign","copyImage","displayImage","onError","uri","buffer","blob","span","label","inline","sendString","img","src","URL","createObjectURL","objectFit","preserveAspectRatio","maxWidth","parseDim","dim","maxDim","cssVar","padRows","clientHeight","align","revokeObjectURL","download","click","getSelectionText","overlaySize","openSelectedUrl_","mouseHideWhileTyping_","processedByTerminalHandler_","reportMouseEvents","terminalRow","terminalColumn","engaged","deltaToArrows","distance","charSize","arrowPos","arrowNeg","cells","filter","isNewSize","wasScrolledEnd","onOpenOptionsPage","onTmuxControlModeLine","previousIO_","buffered_","textDecoder_","TextDecoder","createFrame","setTerminalProfile","profileName","keyboardCaptured_","flush","onTerminalResize","writeUTF8","u8","decode","stream","writelnUTF8","writeUTF16","println","writelnUTF16","foregroundSource","SRC_DEFAULT","backgroundSource","underlineSource","foreground","underlineColor","defaultForeground","defaultBackground","bold","faint","italic","blink","invisible","uriId","classes","fontWeight","fontStyle","blinkNode","textDecorationColor","getDefaultColor","defaultColor","Number","isInteger","colorFromSource","swp","containersMatch","obj1","obj2","containerIsDefault","style1","style2","nodeSubstring","asciiRegex","it","isAscii","isWideChar","onTerminalMouse_","mouseCoordinates","MOUSE_COORDINATES_X10","lastMouseDragResponse_","parseState_","ParseState","parseUnknown_","leadingModifier_","trailingModifier_","allowColumnWidthChanges_","oscTimeLimit_","warnUnimplemented","CharacterMaps","getMap","codingSystemUtf8_","codingSystemLocked_","cc1Pattern_","updateEncodingState_","MOUSE_REPORT_PRESS","MOUSE_REPORT_CLICK","MOUSE_REPORT_DRAG","MOUSE_COORDINATES_UTF8","MOUSE_COORDINATES_SGR","defaultFunction","buf","func","subargs","resetParseFunction","resetBuf","resetArguments","arg_zero","argstr","iarg","argnum","argHasSubargs","argSetSubargs","peekRemainingBuf","peekChar","consumeChar","resetParseState","response","limit","buttons","encoding","cc1","CC1","parseState","nextControl","dispatch","parseCSI_","finishParsing","parseDCS_","parseUntilStringTerminator_","parseTmuxControlModeData_","args0InitialLength","bufInserted","Date","getTime","nextTerminator","foundTerminator","abortReason","elapsedTime","ignore","supportsSubargs","setANSIMode","setDECMode","scrollOnOutput","scrollOnKeystroke","DCS","OSC","VT52","parseESC","parseOSC","pairCount","responseArray","pairNumber","colorIndex","colorValue","param","idx","attrs","colorX11","atob","decoder","bytes","kv","queued","arg","parseSgrExtendedColors","usedSubargs","skipCount","uarg","CharacterMap","description","glmap","glmapBase_","sync_","glmap_","glre_","glchars","maps_","DefaultMaps","mapsBase_","addMap","maps","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","getter","__esModule","d","definition","defineProperty","enumerable","globalThis","Function","prop","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}