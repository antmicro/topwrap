{"version":3,"file":"js/index-37de9766.e32e48ae.js","mappings":"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","sources":["webpack://pipeline-manager/./src/custom/temporaryConnection.js","webpack://pipeline-manager/./src/custom/RectangleSelection.vue","webpack://pipeline-manager/./src/custom/RectangleSelection.vue?35f7","webpack://pipeline-manager/./src/custom/useGroupDragMove.ts","webpack://pipeline-manager/./src/custom/nodepalette/NodePalette.vue","webpack://pipeline-manager/./src/custom/nodepalette/PaletteCategory.vue","webpack://pipeline-manager/./src/custom/nodepalette/nodeTree.ts","webpack://pipeline-manager/./src/custom/nodepalette/PaletteCategory.vue?9e7c","webpack://pipeline-manager/./src/custom/nodepalette/PaletteEntry.vue","webpack://pipeline-manager/./src/custom/nodepalette/PaletteEntry.vue?1d4f","webpack://pipeline-manager/./src/custom/nodepalette/NodePalette.vue?2aed","webpack://pipeline-manager/./src/custom/connection/TemporaryConnection.vue","webpack://pipeline-manager/./src/custom/connection/TemporaryConnection.vue?175b","webpack://pipeline-manager/./src/custom/connection/ConnectionView.vue","webpack://pipeline-manager/./src/custom/connection/ConnectionView.vue?a952","webpack://pipeline-manager/./src/custom/ sync ^%21%21raw\\-loader%21.*$","webpack://pipeline-manager/./src/custom/directives.js","webpack://pipeline-manager/./src/custom/useDragMove.ts","webpack://pipeline-manager/./src/custom/connection/domResolver.js","webpack://pipeline-manager/./src/custom/connection/PipelineManagerConnection.vue","webpack://pipeline-manager/./src/custom/connection/PipelineManagerConnection.vue?3555","webpack://pipeline-manager/./src/custom/ sync","webpack://pipeline-manager/./src/custom/rectangleSelection.js","webpack://pipeline-manager/./src/custom/panZoom.js"],"sourcesContent":["/*\n * Copyright (c) 2022-2023 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n *\n */\n\n/**\n * Module used to handle user interaction with connections and interfaces.\n * It is heavily baklava implementation based.\n */\n\nimport { provide, ref } from 'vue';\nimport { useGraph } from '@baklavajs/renderer-vue';\n\n/**\n * This enum class is based on baklavajs enum `TemporaryConnectionState`\n * and is compatible with it as it is unimportable in baklavajs sources\n */\nexport const TemporaryConnectionState = {\n    NONE: 0,\n    ALLOWED: 1,\n    FORBIDDEN: 2,\n};\n\nexport function useTemporaryConnection() {\n    const { graph } = useGraph();\n\n    const temporaryConnection = ref(null);\n    const hoveringOver = ref(null);\n    const hoveredOut = ref(false);\n    let hoveringOverElement = null;\n\n    const onMouseMove = (ev) => {\n        if (temporaryConnection.value) {\n            const element = document.elementFromPoint(ev.clientX, ev.clientY);\n            // Touch does not support hover, check if event pointing on interface\n            if (ev.pointerType === 'touch') {\n                // Hover out, trigger pointerout\n                if (hoveringOverElement && hoveringOverElement !== element) {\n                    hoveredOut.value = true;\n                    hoveringOverElement.dispatchEvent(new PointerEvent('pointerout'));\n                    hoveringOverElement = null;\n                }\n                // Hover over port, trigger pointerover\n                if (element && element.classList.contains('__port')) {\n                    element.dispatchEvent(new PointerEvent('pointerover'));\n                    hoveringOverElement = element;\n                }\n                temporaryConnection.value.mx =\n                    ev.clientX / graph.value.scaling - graph.value.panning.x;\n                temporaryConnection.value.my =\n                    ev.clientY / graph.value.scaling - graph.value.panning.y;\n            } else {\n                // eslint-disable-next-line no-bitwise\n                hoveredOut.value |= hoveringOverElement && hoveringOverElement !== element;\n                temporaryConnection.value.mx =\n                    ev.offsetX / graph.value.scaling - graph.value.panning.x;\n                temporaryConnection.value.my =\n                    ev.offsetY / graph.value.scaling - graph.value.panning.y;\n            }\n        }\n    };\n\n    const onMouseDown = (ev) => {\n        hoveringOverElement = ev.target;\n        if (hoveringOver.value) {\n            temporaryConnection.value = {\n                status: TemporaryConnectionState.NONE,\n                from: hoveringOver.value,\n                to: hoveringOver.value,\n            };\n\n            temporaryConnection.value.mx = undefined;\n            temporaryConnection.value.my = undefined;\n            hoveredOut.value = false;\n        }\n    };\n\n    const onMouseUp = () => {\n        if (temporaryConnection.value && hoveringOver.value && hoveredOut.value) {\n            graph.value.addConnection(temporaryConnection.value.from, temporaryConnection.value.to);\n        }\n        temporaryConnection.value = null;\n    };\n\n    const hoveredOver = (ni) => {\n        hoveringOver.value = ni ?? null;\n        if (ni && temporaryConnection.value && hoveredOut.value) {\n            temporaryConnection.value.to = ni;\n            const checkConnectionResult = graph.value.checkConnection(\n                temporaryConnection.value.from,\n                temporaryConnection.value.to,\n            );\n            temporaryConnection.value.status = checkConnectionResult.connectionAllowed\n                ? TemporaryConnectionState.ALLOWED\n                : TemporaryConnectionState.FORBIDDEN;\n\n            if (checkConnectionResult.connectionAllowed) {\n                const ids = checkConnectionResult.connectionsInDanger.map((c) => c.id);\n                graph.value.connections.forEach((c) => {\n                    if (ids.includes(c.id)) {\n                        c.isInDanger = true; // eslint-disable-line no-param-reassign\n                    }\n                });\n            }\n        } else if (!ni && temporaryConnection.value) {\n            temporaryConnection.value.to = undefined;\n            temporaryConnection.value.status = TemporaryConnectionState.NONE;\n            graph.value.connections.forEach((c) => {\n                c.isInDanger = false; // eslint-disable-line no-param-reassign\n            });\n        }\n    };\n\n    provide('hoveredOver', hoveredOver);\n\n    return {\n        temporaryConnection,\n        render: hoveredOut,\n        onMouseMove,\n        onMouseDown,\n        onMouseUp,\n    };\n}\n","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<template>\n    <div class=\"rectangle-selection-border\" :style=\"styles\">\n        <div class=\"rectangle-selection\">\n\n        </div>\n    </div>\n</template>\n\n<script>\nimport { computed, defineComponent, ref } from 'vue'; // eslint-disable-line object-curly-newline\n\nexport default defineComponent({\n    setup() {\n        const selecting = ref(false);\n        const selectionBegin = ref({ x: 0, y: 0 });\n        const selectionEnd = ref({ x: 0, y: 0 });\n        const boundingRect = computed(() => ({\n            xBegin: selectionBegin?.value.x < selectionEnd?.value.x ?\n                selectionBegin?.value.x : selectionEnd?.value.x,\n\n            yBegin: selectionBegin?.value.y < selectionEnd?.value.y ?\n                selectionBegin?.value.y : selectionEnd?.value.y,\n\n            xEnd: selectionBegin?.value.x >= selectionEnd?.value.x ?\n                selectionBegin?.value.x : selectionEnd?.value.x,\n\n            yEnd: selectionBegin?.value.y >= selectionEnd?.value.y ?\n                selectionBegin?.value.y : selectionEnd?.value.y,\n        }));\n\n        const styles = computed(() => ({\n            position: 'absolute',\n            visibility: `${selecting.value ? 'visible' : 'hidden'}`,\n            top: `${boundingRect.value.yBegin}px`,\n            left: `${boundingRect.value.xBegin}px`,\n            width: `${Math.abs(boundingRect.value.xEnd - boundingRect.value.xBegin) ?? 0}px`,\n            height: `${Math.abs(boundingRect.value.yEnd - boundingRect.value.yBegin) ?? 0}px`,\n        }));\n\n        const onPointerDown = (ev) => {\n            selecting.value = true;\n            selectionBegin.value = { x: ev.pageX, y: ev.pageY };\n            selectionEnd.value = { x: ev.pageX, y: ev.pageY };\n        };\n\n        const onPointerMove = (ev) => {\n            if (selecting.value) {\n                selectionEnd.value = { x: ev.pageX, y: ev.pageY };\n            }\n        };\n\n        const onPointerUp = () => {\n            selecting.value = false;\n\n            selectionBegin.value = { x: 0, y: 0 };\n            selectionEnd.value = { x: 0, y: 0 };\n        };\n\n        return {\n            styles,\n            onPointerDown,\n            onPointerMove,\n            onPointerUp,\n            selecting,\n            boundingRect,\n        };\n    },\n});\n\n</script>\n","import { render } from \"./RectangleSelection.vue?vue&type=template&id=176c206a\"\nimport script from \"./RectangleSelection.vue?vue&type=script&lang=js\"\nexport * from \"./RectangleSelection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\n * Copyright (c) 2022-2023 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n *\n */\nimport { useGraph } from '@baklavajs/renderer-vue';\nimport useDragMove from './useDragMove';\n/* eslint-disable no-param-reassign, @typescript-eslint/no-explicit-any */\nexport default function useGroupDragMove(dragRootNodePosition, dragRootNodeId = undefined, gridSnapperInstance = undefined) {\n    const { graph } = useGraph();\n    const groupDragMove = useDragMove(dragRootNodePosition, gridSnapperInstance, dragRootNodeId);\n    const groupPointerMove = groupDragMove.onPointerMove;\n    const onPointerMove = (ev) => {\n        const groupPositionCoords = {\n            x: dragRootNodePosition.value.x,\n            y: dragRootNodePosition.value.y,\n        };\n        groupPointerMove(ev);\n        const dx = dragRootNodePosition.value.x - groupPositionCoords.x;\n        const dy = dragRootNodePosition.value.y - groupPositionCoords.y;\n        graph.value.selectedNodes.forEach((node) => {\n            if (node.id !== dragRootNodeId) {\n                node.position.x += dx;\n                node.position.y += dy;\n            }\n        });\n    };\n    groupDragMove.onPointerMove = onPointerMove;\n    return groupDragMove;\n}\n","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nCustom node palette - Implements a sidebar containing available nodes.\n\nInherits from baklavajs/packages/renderer-vue/src/nodepalette/NodePalette.vue\n-->\n\n<template>\n    <!-- eslint-disable vue/no-multiple-template-root -->\n    <div\n        ref=\"paletteRef\"\n        class=\"baklava-node-palette export-hidden\"\n        :class=\"{'hidden-navbar': $isMobile}\"\n    >\n        <div class=\"search-bar\">\n            <div class=\"palette-title\">\n                <span>Nodes browser</span>\n            </div>\n            <div class=\"__entry_search\">\n                <Magnifier :color=\"'gray'\" />\n                <input class=\"node-search\" v-model=\"nodeSearch\" placeholder=\"Search\" />\n            </div>\n        </div>\n        <div class=\"nodes\">\n            <PaletteCategory\n                :nodeTree=\"nodeTree\"\n                :onDragStart=\"onDragStart\"\n                :defaultCollapse=\"collapse\"\n                :tooltip=\"tooltip\"\n                :nodeSearch=\"nodeSearch\"\n            />\n        </div>\n        <!-- Height of the sidebar is 60 so we need to subtract that -->\n        <Tooltip\n            v-show=\"tooltip.visible\"\n            :text=\"tooltip.text\"\n            :left=\"tooltip.left\"\n            :top=\"tooltip.top - 60\"\n        />\n    </div>\n    <transition name=\"fade\">\n        <div v-if=\"draggedNode\" class=\"baklava-dragged-node\" :style=\"draggedNodeStyles\">\n            <PaletteEntry\n                :title=\"draggedNode.nodeInformation.title\"\n                :iconPath=\"draggedNode.iconPath\"\n                :isDragged=\"true\"\n                :depth=\"0\"\n            />\n        </div>\n    </transition>\n</template>\n\n<script>\nimport { computed, defineComponent, provide, inject, ref, onMounted, watch } from 'vue'; // eslint-disable-line object-curly-newline\nimport { useViewModel, useTransform } from '@baklavajs/renderer-vue';\nimport { usePointer } from '@vueuse/core';\nimport PaletteCategory from './PaletteCategory.vue';\nimport getNodeTree from './nodeTree';\nimport PaletteEntry from './PaletteEntry.vue';\nimport Tooltip from '../../components/Tooltip.vue';\nimport Magnifier from '../../icons/Magnifier.vue';\nimport { DEFAULT_CUSTOM_NODE_TYPE } from '../../core/EditorManager';\nimport { menuState, configurationState } from '../../core/nodeCreation/ConfigurationState';\n\nexport default defineComponent({\n    components: {\n        PaletteCategory,\n        PaletteEntry,\n        Tooltip,\n        Magnifier,\n    },\n    setup() {\n        const { viewModel } = useViewModel();\n        const { editor } = viewModel.value;\n\n        const { x: mouseX, y: mouseY } = usePointer();\n        const { transform } = useTransform();\n\n        const paletteRef = ref(null);\n        const editorEl = inject('editorEl');\n\n        const draggedNode = ref(null);\n        const tooltip = ref(null);\n\n        const x = ref(null);\n        const y = ref(null);\n\n        tooltip.value = {\n            top: 0,\n            left: 0,\n            visible: false,\n            text: '',\n        };\n\n        const draggedNodeStyles = computed(() => {\n            if (!draggedNode.value || !editorEl?.value) {\n                return {};\n            }\n            const { left, top } = editorEl.value.getBoundingClientRect();\n            return {\n                top: `${mouseY.value - top}px`,\n                left: `${mouseX.value - left}px`,\n            };\n        });\n\n        function placeNode(instance) {\n            viewModel.value.displayedGraph.addNode(instance);\n            instance.position.x = x.value; // eslint-disable-line no-param-reassign\n            instance.position.y = y.value; // eslint-disable-line no-param-reassign\n        }\n\n        // Add new node when configuration menu is closed\n        watch(() => menuState.configurationMenu.visible, async (newValue, oldValue) => {\n            if (oldValue === true && newValue === false && menuState.configurationMenu.placeNode) {\n                const newType = configurationState.nodeData.name;\n                const nodeInformation = editor.nodeTypes.get(newType);\n                const instance = new nodeInformation.type(); // eslint-disable-line new-cap\n                if (menuState.configurationMenu.addNode && configurationState.success) {\n                    placeNode(instance);\n                }\n            }\n        });\n\n        const dragEndPlaceNode = (ev) => {\n            const elements = document.elementsFromPoint(ev.clientX, ev.clientY);\n\n            if (!elements.includes(paletteRef.value)) {\n                const rect = editorEl.value.getBoundingClientRect();\n                [x.value, y.value] = transform(mouseX.value - rect.left, mouseY.value - rect.top);\n\n                if (draggedNode.value.type === DEFAULT_CUSTOM_NODE_TYPE) {\n                    menuState.configurationMenu.visible = !menuState.configurationMenu.visible;\n                    menuState.configurationMenu.addNode = true;\n                    menuState.configurationMenu.placeNode = true;\n                } else {\n                    const instance = new draggedNode.value.nodeInformation.type(); // eslint-disable-line new-cap,max-len\n                    placeNode(instance);\n                }\n\n                draggedNode.value = null;\n                document.removeEventListener('pointerup', dragEndPlaceNode);\n                document.removeEventListener('keydown', dragEndDeselectNode); // eslint-disable-line no-use-before-define\n            }\n        };\n\n        const dragEndDeselectNode = (ev) => {\n            if (ev.key === 'Escape') {\n                draggedNode.value = null;\n\n                document.removeEventListener('pointerup', dragEndPlaceNode);\n                document.removeEventListener('keydown', dragEndDeselectNode);\n            }\n        };\n\n        const onDragStart = (type, nodeInformation, iconPath) => {\n            draggedNode.value = {\n                type,\n                nodeInformation,\n                iconPath,\n            };\n\n            document.addEventListener('pointerup', dragEndPlaceNode);\n            document.addEventListener('keydown', dragEndDeselectNode);\n        };\n        const nodeSearch = ref('');\n        const scroll = ref(0);\n        const showMenu = ref(false);\n        provide('menu', showMenu);\n\n        const nodeTree = computed(() => getNodeTree(nodeSearch));\n        const collapse = computed(() => viewModel.value.collapseSidebar);\n\n        onMounted(() => {\n            const nodesContainer = computed(() => document.querySelector('.nodes'));\n            nodesContainer.value.addEventListener('scroll', (event) => {\n                scroll.value = event.target.scrollTop;\n                const iconMenus = document.getElementsByClassName('__icondiv');\n                for (let i = 0; i < iconMenus.length; i += 1) {\n                    iconMenus[i].style.translate = `0px -${scroll.value.toString()}px`;\n                }\n            });\n        });\n\n        return {\n            draggedNodeStyles,\n            draggedNode,\n            onDragStart,\n            nodeTree,\n            collapse,\n            tooltip,\n            nodeSearch,\n            paletteRef,\n            scroll,\n        };\n    },\n});\n</script>\n","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nComponent representing single node's type category/subcategory.\nIt groups the nodes of the same subcategory in the block that can be collapsed.\n-->\n\n<template v-if=\"specificationLoaded\">\n    <!-- eslint-disable vue/no-multiple-template-root -->\n    <div v-show=\"nodeTree.mask\">\n        <div v-if=\"nodeTree.nodes.nodeTypes\">\n            <div\n                v-for=\"[nt, node] in sortedEntries(nodeTree.nodes.nodeTypes)\"\n                style=\"width: 100%;\"\n                v-show=\"node.mask\"\n                :style=\"padding(depth)\"\n                :class=\"nodeEntryClasses(nt)\"\n                :key=\"nt\"\n            >\n                <div\n                    @pointerdown=\"onDragStart(nt, node, node.iconPath)\"\n                    :class=\"nodeEntryClasses(nt)\"\n                >\n                    <template v-if=\"!isTopLevelNode(nt)\">\n                        <img\n                            class=\"__title-icon\"\n                            v-if=\"node.iconPath !== undefined\"\n                            :src=\"getIconPath(node.iconPath)\"\n                            draggable=\"false\"\n                        />\n                    </template>\n                    <Cross v-else color=\"white\" :rotate=\"45\" class=\"__title-icon\"></Cross>\n                    <div class=\"__title-label\" v-html=\"DOMPurify.sanitize(node.hitSubstring)\"></div>\n                </div>\n                <div\n                    class=\"__vertical_ellipsis\"\n                    ref=\"settings\"\n                    role=\"button\"\n                    @pointerdown.stop=\"\"\n                    @click.stop=\"() => showMenuClick(node)\"\n                    v-if=\"node.URLs.length !== 0\"\n                >\n                    <VerticalEllipsis class=\"smaller_svg\" />\n                </div>\n                <div class='__icondiv'>\n                    <LinkMenu\n                        :node='showMenu'\n                        style='width: 18em'\n                        v-if=\"showMenu !== false &&\n                                showMenu.hitSubstring === node.hitSubstring\"\n                        v-click-outside=\"closeMenu\"\n                    />\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div\n        v-for=\"([name, category], i) in sortedEntries(nodeTree.subcategories, true)\"\n        v-show=\"category.mask\"\n        :key=\"name\"\n    >\n        <template v-if=\"notEmptyCategory(category)\">\n            <div\n                class=\"__entry __category\"\n                @click=\"onMouseDown(i)\"\n                :style=\"padding(depth)\"\n            >\n                <Arrow :rotate=\"getRotation(i)\" scale=\"small\" />\n                <!-- There is only one category node -->\n                <template v-if=\"isCategoryNode(category)\">\n                    <div\n                        class=\"__entry __node-entry\"\n                        v-show=\"category.mask\"\n                        :key=\"category.title\"\n                        @click=\"onMouseDown(i)\"\n                        @pointerdown=\"onDragStart(\n                            category.title,\n                            category.categoryNode,\n                            category.iconPath\n                        )\"\n                    >\n                        <img\n                            class=\"__title-icon\"\n                            v-if=\"category.categoryNode.iconPath !== undefined\"\n                            :src=\"getIconPath(category.categoryNode.iconPath)\"\n                            draggable=\"false\"\n                        />\n                        <div\n                            class=\"__title-label\"\n                            v-html=\"DOMPurify.sanitize(category.hitSubstring)\">\n                        </div>\n                        <div\n                            class=\"__vertical_ellipsis\"\n                            ref=\"settings\"\n                            role=\"button\"\n                            @pointerdown.stop=\"\"\n                            @click.stop=\"() => showMenuClick(category)\"\n                            v-if=\"category.categoryNode.URLs.length !== 0\"\n                        >\n                            <VerticalEllipsis class=\"smaller_svg\" />\n                        </div>\n                    </div>\n                    <div class='__icondiv'>\n                        <LinkMenu\n                            :node='showMenu.categoryNode'\n                            style='width: 18em'\n                            v-if=\"showMenu !== false &&\n                                  showMenu.hitSubstring === category.hitSubstring\"\n                            v-click-outside=\"closeMenu\"\n                        />\n                    </div>\n                </template>\n                <div\n                    v-else\n                    class=\"__title\"\n                    v-html=\"DOMPurify.sanitize(category.hitSubstring)\"\n                ></div>\n            </div>\n            <div v-show=\"mask[i]\">\n                <PaletteCategory\n                    :nodeTree=\"category\"\n                    :onDragStart=\"onDragStart\"\n                    :depth=\"depth + 1\"\n                    :defaultCollapse=\"defaultCollapse\"\n                    :tooltip=\"tooltip\"\n                    :nodeSearch=\"nodeSearch\"\n                />\n            </div>\n        </template>\n        <template v-else>\n            <template v-if=\"isCategoryNode(category)\">\n                <div\n                    :class=\"nodeEntryClasses(category.title)\"\n                    :style=\"padding(depth)\"\n                    v-show=\"category.mask\"\n                    :key=\"category.title\"\n                    @pointerdown=\"onDragStart(\n                        category.title,\n                        category.categoryNode,\n                        category.iconPath\n                    )\"\n                >\n                    <img\n                        class=\"__title-icon\"\n                        v-if=\"category.categoryNode.iconPath !== undefined\"\n                        :src=\"getIconPath(category.categoryNode.iconPath)\"\n                        draggable=\"false\"\n                    />\n                    <div\n                        class=\"__title-label\"\n                        v-html=\"DOMPurify.sanitize(category.hitSubstring)\">\n                    </div>\n                    <div\n                        class=\"__vertical_ellipsis\"\n                        ref=\"settings\"\n                        role=\"button\"\n                        @pointerdown.stop=\"\"\n                        @click.stop=\"() => showMenuClick(category)\"\n                        v-if=\"category.categoryNode.URLs.length !== 0\"\n                    >\n                        <VerticalEllipsis class=\"smaller_svg\" />\n                    </div>\n                    <div class='__icondiv'>\n                        <LinkMenu\n                            :node='showMenu.categoryNode'\n                            style='width: 18em'\n                            v-if=\"showMenu !== false &&\n                                  showMenu.hitSubstring === category.hitSubstring\"\n                            v-click-outside=\"closeMenu\"\n                        />\n                    </div>\n                </div>\n            </template>\n            <div v-else class=\"__title\">{{ category.hitSubstring }}</div>\n        </template>\n    </div>\n</template>\n\n<script>\nimport { defineComponent, computed, ref, watch, inject } from 'vue'; // eslint-disable-line object-curly-newline\nimport { useViewModel } from '@baklavajs/renderer-vue';\nimport DOMPurify from 'dompurify';\nimport Arrow from '../../icons/Arrow.vue';\nimport VerticalEllipsis from '../../icons/VerticalEllipsis.vue';\nimport LinkMenu from '../LinkMenu.vue';\nimport EditorManager, { DEFAULT_CUSTOM_NODE_TYPE } from '../../core/EditorManager';\nimport Cross from '../../icons/Cross.vue';\nimport { TOP_LEVEL_NODES_NAMES } from './nodeTree';\n\nexport default defineComponent({\n    components: {\n        Arrow, LinkMenu, VerticalEllipsis, Cross,\n    },\n    props: {\n        nodeTree: {\n            required: true,\n        },\n        onDragStart: {\n            required: true,\n        },\n        depth: {\n            type: Number,\n            default: 0,\n        },\n        defaultCollapse: {\n            type: Boolean,\n            default: true,\n        },\n        tooltip: {\n            required: false,\n        },\n        nodeSearch: {\n            type: String,\n            required: true,\n        },\n    },\n    data: () => ({\n        DOMPurify,\n    }),\n    setup(props) {\n        const { viewModel } = useViewModel();\n        const getIconPath = (name) => viewModel.value.cache[`./${name}`] ?? name;\n        const isCategoryNode = (category) => category?.categoryNode !== undefined;\n\n        const notEmptyCategory = (category) =>\n            Object.keys(category.nodes.nodeTypes ?? {}).length !== 0\n            || Object.keys(category.subcategories).length !== 0;\n\n        const paddingDepth = 30;\n        const minPadding = 10;\n        const padding = (depth, forceZero = false) => {\n            if (forceZero) {\n                return 'padding-left: 0';\n            }\n            return `padding-left: ${minPadding + depth * paddingDepth}px`;\n        };\n\n        const mask = ref(Array(\n            Object.keys(props.nodeTree.subcategories ?? {}).length,\n        ).fill(!props.defaultCollapse));\n        let storedMask = mask.value;\n\n        // If the category tree changes the mask needs to get reinitialized\n        watch(\n            () => props.nodeTree,\n            () => {\n                mask.value = Array(Object.keys(\n                    props.nodeTree.subcategories ?? {},\n                ).length).fill(!props.defaultCollapse);\n            },\n        );\n\n        // If searching then the sidebar is expanded\n        watch(\n            () => props.nodeSearch,\n            (newValue, oldValue) => {\n                if (newValue !== '' && oldValue === '') {\n                    storedMask = mask.value;\n                    mask.value = Array(Object.keys(\n                        props.nodeTree.subcategories ?? {},\n                    ).length).fill(true);\n                } else if (newValue === '' && oldValue !== '') {\n                    mask.value = storedMask;\n                }\n            },\n        );\n\n        const getRotation = (index) => {\n            if (mask.value[index]) {\n                return 'left';\n            }\n            return 'right';\n        };\n\n        const onMouseDown = (index) => {\n            mask.value.splice(index, 1, !mask.value[index]);\n        };\n\n        const isTopLevelNode = (name) => TOP_LEVEL_NODES_NAMES.includes(name);\n\n        const sortedEntries = (obj, sortSubcategories = false) =>\n            Object.entries(obj).sort(([a, aNode], [b, bNode]) => {\n                if (a === DEFAULT_CUSTOM_NODE_TYPE) {\n                    return -1;\n                }\n                if (b === DEFAULT_CUSTOM_NODE_TYPE) {\n                    return 1;\n                }\n                if (!isTopLevelNode(a) && isTopLevelNode(b)) {\n                    return 1;\n                }\n                if (isTopLevelNode(a) && !isTopLevelNode(b)) {\n                    return -1;\n                }\n\n                if (sortSubcategories) {\n                    if (notEmptyCategory(aNode) && !notEmptyCategory(bNode)) {\n                        return 1;\n                    }\n                    if (!notEmptyCategory(aNode) && notEmptyCategory(bNode)) {\n                        return -1;\n                    }\n                }\n\n                return a.toLowerCase().localeCompare(b.toLowerCase());\n            });\n\n        const showMenu = inject('menu');\n        const showMenuClick = (menu) => {\n            showMenu.value = (showMenu.value.hitSubstring === menu.hitSubstring) ? false : menu;\n        };\n        const closeMenu = () => {\n            if (showMenu.value) showMenu.value = false;\n        };\n\n        const editorManager = EditorManager.getEditorManagerInstance();\n        const specificationLoaded = computed(() => editorManager.specificationLoaded.value);\n\n        const nodeEntryClasses = (name) => ({\n            __entry: true,\n            '__node-entry': true,\n            '__top-level-node-entry': isTopLevelNode(name),\n        });\n\n        return {\n            padding,\n            mask,\n            onMouseDown,\n            getRotation,\n            sortedEntries,\n            getIconPath,\n            isCategoryNode,\n            notEmptyCategory,\n            showMenu,\n            showMenuClick,\n            closeMenu,\n            specificationLoaded,\n            nodeEntryClasses,\n            isTopLevelNode,\n        };\n    },\n});\n</script>\n","/*\n * Copyright (c) 2022-2024 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { useViewModel } from '@baklavajs/renderer-vue';\nimport { watch } from 'vue';\nimport fuzzysort from 'fuzzysort';\nimport EditorManager, { DEFAULT_GRAPH_NODE_TYPE, DEFAULT_CUSTOM_NODE_TYPE } from '../../core/EditorManager';\n/**\n * Creates a tree of categories based on the passed names of categories.\n *\n * @param Set of categories names of the nodes\n * @returns Tree of parsed categories that represents categories and their subcategories structure\n */\nconst parseCategories = (categoriesNames) => {\n    const categoryTree = {};\n    const toParse = {};\n    categoriesNames.forEach((c) => {\n        const [newLabel, ...rest] = c.split('/');\n        const label = newLabel.trim();\n        if (!Object.keys(toParse).includes(label)) {\n            toParse[label] = [];\n        }\n        if (rest.length > 0) {\n            toParse[label].push(rest.join('/'));\n        }\n    });\n    Object.entries(toParse).forEach(([label, rest]) => {\n        categoryTree[label] = parseCategories(new Set(rest));\n    });\n    return categoryTree;\n};\n/* eslint-disable no-param-reassign */\n/**\n * Sets `hitSubstring` value of all nodes of a given category to default names.\n * @param category Single category entry\n */\nconst setDefaultNames = (category) => {\n    const [name, node] = category;\n    node.hitSubstring = name;\n    if (node.categoryNode !== undefined) {\n        node.categoryNode.hitSubstring = node.categoryNode.title;\n    }\n    if (node.nodes.nodeTypes !== undefined) {\n        Object.entries(node.nodes.nodeTypes).forEach(([, nodeType]) => {\n            nodeType.hitSubstring = nodeType.title;\n        });\n    }\n    Object.entries(node.subcategories).forEach((subTree) => setDefaultNames(subTree));\n};\n/* eslint-disable no-param-reassign */\n/**\n * Sets in place all masks inside nodes and subcategories to true\n * @param category Single category object\n */\nconst setMasksToTrue = (category) => {\n    category.mask = true;\n    if (category.categoryNode !== undefined) {\n        category.categoryNode.mask = true;\n    }\n    if (category.nodes.nodeTypes !== undefined) {\n        Object.values(category.nodes.nodeTypes).forEach((nodeType) => {\n            nodeType.mask = true;\n        });\n    }\n    Object.values(category.subcategories).forEach((subTree) => setMasksToTrue(subTree));\n};\n/**\n * Uses parsed categories structure to create a full tree of nodes based on their categories\n * which can be used to render then in a node palette.\n *\n * @param categoryTree Parsed tree returned by `parseCategories` function. It is used to divide\n * nodes into subcategories.\n * @param nodes list of nodes that has information about their types and icons created\n * in `getNodeTree` function.\n * @param prefix represents category path of a node.\n * @returns Parsed structure where every node has two keys: `nodes`, which represents nodes of\n * a given category and `subcategories` which represent subcategories. Subcategories are\n * also of this type.\n */\nconst categorizeNodes = (categoryTree, nodes, prefix = '') => {\n    const nodeTree = {};\n    Object.entries(categoryTree).forEach(([category, subcategories]) => {\n        var _a;\n        let name = '';\n        if (prefix === '') {\n            name = category;\n        }\n        else {\n            name = `${prefix}/${category}`;\n        }\n        const hitNodes = (_a = nodes.find((n) => n.categoryName === name)) !== null && _a !== void 0 ? _a : {};\n        if (Object.keys(hitNodes).length !== 0) {\n            const categoryNames = [];\n            Object.entries(hitNodes.nodeTypes).forEach(([nameNodeType, nodeType]) => {\n                if (nodeType.isCategory) {\n                    categoryNames.push(nameNodeType);\n                }\n            });\n            const allNames = Object.keys(hitNodes.nodeTypes);\n            const nonCategoryNodes = {\n                categoryName: hitNodes.categoryName,\n                nodeTypes: {},\n            };\n            let categoryNode;\n            allNames.forEach((nodeName) => {\n                if (categoryNames.includes(nodeName)) {\n                    categoryNode = hitNodes.nodeTypes[nodeName];\n                }\n                else {\n                    nonCategoryNodes.nodeTypes[nodeName] = hitNodes.nodeTypes[nodeName];\n                }\n            });\n            nodeTree[category] = {\n                subcategories: categorizeNodes(subcategories, nodes, name),\n                nodes: nonCategoryNodes,\n                categoryNode,\n                hitSubstring: category,\n                mask: true,\n            };\n        }\n        else {\n            nodeTree[category] = {\n                subcategories: categorizeNodes(subcategories, nodes, name),\n                nodes: {},\n                categoryNode: undefined,\n                hitSubstring: category,\n                mask: true,\n            };\n        }\n    });\n    return nodeTree;\n};\n/**\n *\n * Updates masks of all nodes and subcategories based on filter value.\n * The node is shown if filter is a substring of the name.\n * Category is shown if it contains at least one node in the subtree which is\n * shown or if filter is a substring of the category name\n *\n * @param treeNode NodeSubcategories instance.\n * @param filter String which is used for filtering\n * @param forceMask whether the whole substree should be expanded\n * @returns Boolean value whether at least one of the categories in the tree has\n * mask set to true.\n */\nconst updateMasks = (treeNode, filter, forceMask) => Object.entries(treeNode).map(([categoryName, node]) => {\n    var _a;\n    const threshold = -50;\n    let categoryMatches = false;\n    const categoryResult = fuzzysort.single(filter, categoryName);\n    if (categoryResult !== null && categoryResult.score > threshold) {\n        node.hitSubstring = (_a = fuzzysort.highlight(categoryResult, '<span>', '</span>')) !== null && _a !== void 0 ? _a : '';\n        categoryMatches = true;\n    }\n    else {\n        node.hitSubstring = categoryName;\n    }\n    let entryMatches = false;\n    if (node.nodes.nodeTypes !== undefined && Object.keys(node.nodes.nodeTypes).length !== 0) {\n        entryMatches = Object.values(node.nodes.nodeTypes)\n            .map((nt) => {\n            var _a;\n            const entryResult = fuzzysort.single(filter, nt.title);\n            nt.mask = (entryResult !== null && entryResult.score > threshold) ||\n                categoryMatches ||\n                forceMask;\n            if (entryResult !== null) {\n                nt.hitSubstring = (_a = fuzzysort.highlight(entryResult, '<span>', '</span>')) !== null && _a !== void 0 ? _a : '';\n            }\n            else {\n                nt.hitSubstring = nt.title;\n            }\n            return nt.mask;\n        })\n            .includes(true);\n    }\n    // The node is expanded if any entry in its subtree is highlighted,\n    // or a node that is part of this category is highlighted,\n    // or the category is highlighted or forceMask is true.\n    node.mask = updateMasks(node.subcategories, filter, categoryMatches || forceMask) ||\n        categoryMatches ||\n        entryMatches ||\n        forceMask;\n    return node.mask;\n}).includes(true);\n/* eslint-enable no-param-reassign */\nlet unWatch;\nconst TOP_LEVEL_CATEGORY = 'TopLevel';\nexport const TOP_LEVEL_NODES_NAMES = [\n    DEFAULT_CUSTOM_NODE_TYPE,\n    DEFAULT_GRAPH_NODE_TYPE,\n];\nexport default function getNodeTree(nameFilterRef) {\n    const { viewModel } = useViewModel();\n    const { editor } = viewModel.value;\n    const editorManager = EditorManager.getEditorManagerInstance();\n    const nodeTypeEntries = Array.from(editor.nodeTypes.entries());\n    const categoryNames = new Set(nodeTypeEntries.map(([, ni]) => ni.category));\n    const topLevelCategories = {\n        categoryName: 'TopLevel',\n        nodeTypes: {},\n    };\n    const nodes = [];\n    categoryNames.forEach((c) => {\n        // Add nodes with an empty category to the top level.\n        if (c === '') {\n            nodeTypeEntries\n                .filter(([, ni]) => ni.category === '')\n                .forEach(([nodeName, node]) => {\n                topLevelCategories.nodeTypes[nodeName] = Object.assign(Object.assign({}, node), { isCategory: node.isCategory, mask: true, hitSubstring: node.title, iconPath: editor.getNodeIconPath(nodeName), URLs: editor.getNodeURLs(nodeName) });\n            });\n            return;\n        }\n        let nodeTypesInCategory = nodeTypeEntries.filter(([, ni]) => ni.category === c);\n        const nodesURLs = Object.fromEntries(nodeTypesInCategory.map((n) => {\n            const [nodeType] = n; // @ts-ignore Editor has an incorrect type. Ignoring for now\n            const URLs = editor.getNodeURLs(nodeType);\n            return [nodeType, URLs];\n        }));\n        const nodesIconPath = Object.fromEntries(nodeTypesInCategory.map((n) => {\n            const [nodeType] = n; // @ts-ignore Editor has an incorrect type. Ignoring for now\n            const iconPath = editor.getNodeIconPath(nodeType);\n            return [nodeType, iconPath];\n        }));\n        let topLevelNodes = nodeTypesInCategory.filter(([name, _]) => TOP_LEVEL_NODES_NAMES.includes(name));\n        nodeTypesInCategory = nodeTypesInCategory.filter(([name, _]) => !TOP_LEVEL_NODES_NAMES.includes(name));\n        if (!editorManager.baklavaView.settings.editableNodeTypes) {\n            topLevelNodes = topLevelNodes.filter(([name, _]) => name !== DEFAULT_CUSTOM_NODE_TYPE);\n        }\n        if (!editorManager.baklavaView.settings.newGraphNode) {\n            topLevelNodes = topLevelNodes.filter(([name, _]) => name !== DEFAULT_GRAPH_NODE_TYPE);\n        }\n        if (nodeTypesInCategory.length > 0) {\n            const nodeTypes = nodeTypesInCategory.map(([nodeName, node]) => [nodeName, Object.assign(Object.assign({}, node), { isCategory: node.isCategory, mask: true, hitSubstring: node.title, iconPath: nodesIconPath[nodeName], URLs: nodesURLs[nodeName] })]);\n            nodes.push({\n                categoryName: c,\n                nodeTypes: Object.fromEntries(nodeTypes),\n            });\n        }\n        topLevelNodes.forEach(([nodeName, node]) => {\n            topLevelCategories.nodeTypes[nodeName] = Object.assign(Object.assign({}, node), { isCategory: node.isCategory, mask: true, hitSubstring: node.title, iconPath: nodesIconPath[nodeName], URLs: nodesURLs[nodeName] });\n        });\n    });\n    const nodeCategories = new Set(nodes.map((c) => c.categoryName));\n    const categoryTree = parseCategories(nodeCategories);\n    const parsedTree = categorizeNodes(categoryTree, nodes);\n    // If specification changes we no longer want to watch it\n    if (unWatch) {\n        unWatch();\n    }\n    const topCategory = {\n        subcategories: parsedTree,\n        nodes: topLevelCategories,\n        categoryNode: undefined,\n        hitSubstring: TOP_LEVEL_CATEGORY,\n        mask: true,\n    };\n    const topSubcategory = {\n        All: topCategory,\n    };\n    unWatch = watch(nameFilterRef, (newNameFilter) => {\n        if (newNameFilter === '') {\n            Object.entries(topSubcategory).forEach((subTree) => setDefaultNames(subTree));\n            Object.values(topSubcategory).forEach((subTree) => setMasksToTrue(subTree));\n        }\n        else {\n            updateMasks(topSubcategory, newNameFilter.toLowerCase(), false);\n        }\n    });\n    return topCategory;\n}\n","import { render } from \"./PaletteCategory.vue?vue&type=template&id=72c885a0\"\nimport script from \"./PaletteCategory.vue?vue&type=script&lang=js\"\nexport * from \"./PaletteCategory.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nA single entry representing available node type in the sidebar.\n-->\n<template>\n    <div class=\"__entry __node-entry __dragged\" :style=\"padding\">\n        <img class=\"__title-icon\" v-if=\"nodeIcon !== undefined\" :src=\"nodeIcon\" draggable=\"false\" />\n        <div class=\"__title-label\" v-html=\"titleSanitized\"></div>\n    </div>\n</template>\n\n<script>\nimport { defineComponent, computed } from 'vue';\nimport { useViewModel } from '@baklavajs/renderer-vue';\nimport DOMPurify from 'dompurify';\n\nexport default defineComponent({\n    props: {\n        title: {\n            type: String,\n            required: true,\n        },\n        iconPath: {\n            type: String,\n            required: false,\n        },\n        depth: {\n            type: Number,\n            required: true,\n        },\n    },\n    setup(props) {\n        const { viewModel } = useViewModel();\n        const getIconPath = (name) => viewModel.value.cache[`./${name}`] ?? name;\n        const nodeIcon = computed(() => getIconPath(props.iconPath));\n        const paddingDepth = 20;\n        const minPadding = 10;\n        const padding = computed(\n            () => `padding-left: ${minPadding + props.depth * paddingDepth}px`,\n        );\n\n        return {\n            nodeIcon,\n            padding,\n            getIconPath,\n        };\n    },\n    computed: {\n        titleSanitized() {\n            return DOMPurify.sanitize(this.title);\n        },\n    },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.__dragged {\n    border-radius: var(--baklava-node-border-radius);\n    border-width: 0px;\n}\n</style>\n","import { render } from \"./PaletteEntry.vue?vue&type=template&id=3395bfa5&scoped=true\"\nimport script from \"./PaletteEntry.vue?vue&type=script&lang=js\"\nexport * from \"./PaletteEntry.vue?vue&type=script&lang=js\"\n\nimport \"./PaletteEntry.vue?vue&type=style&index=0&id=3395bfa5&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3395bfa5\"]])\n\nexport default __exports__","import { render } from \"./NodePalette.vue?vue&type=template&id=5e27a8d1\"\nimport script from \"./NodePalette.vue?vue&type=script&lang=js\"\nexport * from \"./NodePalette.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<template>\n    <ConnectionView\n        :x1=\"swappedD.input[0]\"\n        :y1=\"swappedD.input[1]\"\n        :x2=\"swappedD.output[0]\"\n        :y2=\"swappedD.output[1]\"\n        :state=\"status\"\n        :connection=\"connection\"\n        is-temporary\n    />\n</template>\n\n<script>\nimport { computed } from 'vue';\nimport { Components } from '@baklavajs/renderer-vue';\nimport ConnectionView from './ConnectionView.vue';\n\nexport default {\n    extends: Components.TemporaryConnection,\n    components: {\n        ConnectionView,\n    },\n    setup(props) {\n        const { d, status } = Components.TemporaryConnection.setup(props);\n\n        const swappedD = computed(() => {\n            let { input, output } = d.value;\n\n            // Currently, baklavajs swaps the input/output if this condition holds\n            // We want to have no discrepancy between the input output coordinates\n            // and connection from/to values.\n            if (props.connection.from.isInput) {\n                [input, output] = [output, input];\n            }\n\n            return { input, output };\n        });\n\n        return { d, swappedD, status };\n    },\n};\n</script>\n","import { render } from \"./TemporaryConnection.vue?vue&type=template&id=00fe0537\"\nimport script from \"./TemporaryConnection.vue?vue&type=script&lang=js\"\nexport * from \"./TemporaryConnection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nComponent defining connection between two different nodes\nInherits from baklavajs/renderer-vue/src/connection/ConnectionView.vue\n-->\n\n<template>\n    <g v-if=\"hasAnchors\">\n        <path :d=\"parsedNewD\" class=\"connection-wrapper baklava-connection\"></path>\n        <!-- The connection wrapper is rendered twice, once for\n            easy highlight detection, and once for creating anchor points -->\n\n        <!-- eslint-disable vue/valid-v-for -->\n        <template v-if=\"hasAnchors\">\n            <g\n                v-for=\"(d, index) in parsedNewD\"\n                @pointerdown.left.exact=\"onMouseDown\"\n                @pointerdown=\"(ev) => { if(ev.pointerType === 'touch') onMouseDown(ev) }\"\n                @pointerdown.left.ctrl.exact=\"(ev) => onMouseCtrlDown(ev, index)\"\n            >\n            <path :d=\"d\" class=\"connection-wrapper baklava-connection\"></path>\n            <path :d=\"d\" class=\"baklava-connection\" :class=\"cssClasses\" :style=\"style\"></path>\n            </g>\n            <template v-if=\"hover || !editorManager.baklavaView.settings.hideAnchors\">\n                <Anchor\n                    v-for=\"(anchor, index) in connection.anchors\"\n                    :key=\"anchor.id\"\n                    :position=\"anchor\"\n                    :rightclickCallback=\"() => removeAnchor(index)\"\n                />\n            </template>\n        </template>\n    </g>\n    <g\n        v-else\n        @pointerdown.left.exact=\"onMouseDown\"\n        @pointerdown=\"(ev) => { if(ev.pointerType === 'touch') onMouseDown(ev) }\"\n        @pointerdown.left.ctrl.exact=\"(ev) => onMouseCtrlDown(ev, 0)\"\n    >\n        <path :d=\"parsedNewD\" class=\"connection-wrapper baklava-connection\"></path>\n        <path :d=\"parsedNewD\" class=\"baklava-connection\" :class=\"cssClasses\" :style=\"style\"></path>\n    </g>\n</template>\n\n<script>\nimport {\n    defineComponent, computed, toRef,\n} from 'vue';\nimport { Components, useGraph, useViewModel } from '@baklavajs/renderer-vue';\nimport doubleClick from '../../core/doubleClick';\nimport Anchor from '../../components/Anchor.vue';\nimport EditorManager from '../../core/EditorManager';\n\n/* eslint-disable vue/no-mutating-props,no-param-reassign */\nexport default defineComponent({\n    extends: Components.Connection,\n    props: {\n        isHighlighted: { default: false },\n        connection: { required: true },\n        hover: { default: false },\n    },\n    components: { Anchor },\n    setup(props) {\n        const { classes } = Components.Connection.setup(props);\n        const { graph } = useGraph();\n        const { viewModel } = useViewModel();\n        const { interfaceTypes } = viewModel.value;\n        const editorManager = EditorManager.getEditorManagerInstance();\n        const hover = toRef(props, 'hover');\n\n        const connectionStyle = interfaceTypes.getConnectionStyle(\n            props.connection.from,\n            props.connection.to,\n        );\n\n        const cssClasses = computed(() => ({\n            ...classes.value,\n            '--hover': props.isHighlighted || hover.value,\n            '--dashed': connectionStyle.interfaceConnectionPattern === 'dashed',\n            '--dotted': connectionStyle.interfaceConnectionPattern === 'dotted',\n        }));\n\n        const style = computed(() => ({\n            '--color': connectionStyle.interfaceConnectionColor,\n        }));\n\n        const onMouseDown = doubleClick(700, (ev) => {\n            if (!viewModel.value.editor.readonly) {\n                ev.preventDefault();\n                graph.value.removeConnection(props.connection);\n            }\n        });\n\n        const removeAnchor = (idx) => {\n            if (viewModel.value.editor.readonly) return;\n            graph.value.events.removeAnchor.emit([props.connection, idx]);\n            props.connection.anchors.splice(idx, 1);\n        };\n\n        const onMouseCtrlDown = (ev, index) => {\n            if (\n                viewModel.value.editor.readonly ||\n                !viewModel.value.connectionRenderer.supportsAnchors()\n            ) return;\n            ev.preventDefault();\n\n            const newAnchor = {\n                x: (ev.offsetX / graph.value.scaling) - graph.value.panning.x,\n                y: (ev.offsetY / graph.value.scaling) - graph.value.panning.y,\n                id: Date.now(),\n            };\n                // The index shows the connection section that was pressed -\n                // since we have an extra one at the beginning, we need a -1 and a\n                // division by 3 with no decimal to determine what anchor position\n                // corresponds\n            graph.value.addAnchor(newAnchor, props.connection, Math.trunc((index - 1) / 3));\n        };\n\n        const transform = (x, y) => {\n            const tx = (x + graph.value.panning.x) * graph.value.scaling;\n            const ty = (y + graph.value.panning.y) * graph.value.scaling;\n            return [tx, ty];\n        };\n\n        const newD = computed(() => {\n            const [tx1, ty1] = transform(props.x1, props.y1);\n            const [tx2, ty2] = transform(props.x2, props.y2);\n            return viewModel.value.connectionRenderer.render(tx1, ty1, tx2, ty2, props.connection);\n        });\n\n        const parsedNewD = computed(() => {\n            const d = newD.value;\n\n            if (Array.isArray(d) && d.length) {\n                const parsedArray = [];\n                for (let i = 0; i < d.length - 1; i += 1) {\n                    parsedArray.push(`M ${d[i].x} ${d[i].y} L ${d[i + 1].x} ${d[i + 1].y}`);\n                }\n                return parsedArray;\n            }\n            return d;\n        });\n\n        const hasAnchors = computed(() =>\n            props.connection.anchors !== undefined &&\n            props.connection.anchors.length &&\n            viewModel.value.connectionRenderer.supportsAnchors(),\n        );\n\n        return {\n            cssClasses,\n            parsedNewD,\n            onMouseDown,\n            onMouseCtrlDown,\n            style,\n            hasAnchors,\n            removeAnchor,\n            editorManager,\n        };\n    },\n});\n</script>\n","import { render } from \"./ConnectionView.vue?vue&type=template&id=592b3e6a\"\nimport script from \"./ConnectionView.vue?vue&type=script&lang=js\"\nexport * from \"./ConnectionView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 55825;\nmodule.exports = webpackEmptyContext;","/*\n * Copyright (c) 2022-2023 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst elListeners = {};\n\nconst longPressFactory = (pointerDownAction, pointerUpAction) => ({\n    beforeMount: (el, binding) => {\n        const data = {\n            timeout: null,\n            newEvent: null,\n            longPress: false,\n            moveEvents: 0,\n        };\n        elListeners[el] = {\n            pointerdown: (ev) => {\n                if (ev.pointerType === 'touch' && data.timeout === null) {\n                    data.moveEvents = 0;\n                    data.longPress = false;\n                    pointerDownAction(el, binding, ev, data);\n                    data.timeout = setTimeout(() => { data.longPress = true; }, binding.arg ?? 500);\n                }\n            },\n            pointermove: () => { data.moveEvents += 1; },\n            pointerup: (ev) => {\n                if (ev.pointerType !== 'touch') return;\n                // If long press is valid send right click to element\n                if (data.longPress && data.moveEvents < 10) {\n                    pointerUpAction(el, binding, ev, data);\n                }\n                if (data.timeout) {\n                    clearTimeout(data.timeout);\n                    data.timeout = null;\n                }\n            },\n        };\n        el.addEventListener('pointerdown', elListeners[el].pointerdown);\n        el.addEventListener('pointermove', elListeners[el].pointermove);\n        el.addEventListener('pointerup', elListeners[el].pointerup);\n    },\n    unmounted: (el) => {\n        el.removeEventListener('pointerdown', elListeners[el].pointerdown);\n        el.removeEventListener('pointermove', elListeners[el].pointermove);\n        el.removeEventListener('pointerup', elListeners[el].pointerup);\n    },\n});\n\nexport const longPress = longPressFactory(\n    // eslint-disable-next-line no-param-reassign\n    (_el, _binding, ev, data) => { data.newEvent = ev; },\n    (_el, binding, _ev, data) => { setTimeout(() => binding.value(data.newEvent), 50); },\n);\n\nexport const longPressToRight = longPressFactory(\n    (_el, _binding, ev, data) => {\n        // eslint-disable-next-line no-param-reassign\n        data.newEvent = new PointerEvent('pointerdown', {\n            button: 2, // Right click\n            clientX: ev.clientX,\n            clientY: ev.clientY,\n            screenX: ev.screenX,\n            screenY: ev.screenY,\n            pointerType: 'mouse',\n            relatedTarget: ev.relatedTarget,\n        });\n    },\n    (el, _binding, _ev, data) => { setTimeout(() => { el.dispatchEvent(data.newEvent); }, 50); },\n);\n","/*\n * Copyright (c) 2022-2024 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n *\n */\nimport { computed, ref } from 'vue';\nimport { useGraph, useViewModel } from '@baklavajs/renderer-vue';\nimport { gridSnapper, nodeSnapper } from '../core/snappers';\n/* eslint-disable no-param-reassign, @typescript-eslint/no-explicit-any */\nexport default function useDragMove(positionRef, gridSnapperInstance = undefined, nodeId = undefined) {\n    // any definition is an ad-hoc solution as we don't have our graph definition\n    const { graph } = useGraph();\n    const { viewModel } = useViewModel();\n    const calculateSnappedPosition = gridSnapperInstance !== null && gridSnapperInstance !== void 0 ? gridSnapperInstance : gridSnapper(ref(1));\n    const gridSize = computed(() => viewModel.value.settings.background.gridSize);\n    const backgroundGridSnapper = gridSnapper(gridSize);\n    const nodeSnappers = {\n        x: nodeSnapper('x'),\n        y: nodeSnapper('y'),\n    };\n    const draggingStartPoint = ref(null);\n    const draggingStartPosition = ref(null);\n    const movementStepEnabled = ref(true);\n    const dragging = computed(() => {\n        // If we didn't move, then we are not dragging\n        if (!!draggingStartPoint.value && draggingStartPosition.value) {\n            return (draggingStartPosition.value.x !== positionRef.value.x\n                || draggingStartPosition.value.y !== positionRef.value.y);\n        }\n        return false;\n    });\n    /* eslint-disable arrow-body-style */\n    const calculatePosition = (pos, kind, align = false, gridSnap = false) => {\n        if (align && nodeId !== undefined) {\n            const alignedCoord = nodeSnappers[kind](pos, nodeId, graph.value.selectedNodes.map((node) => node.id));\n            if (alignedCoord !== undefined) {\n                return alignedCoord;\n            }\n        }\n        if (gridSnap) {\n            return backgroundGridSnapper(pos);\n        }\n        // allow either snap-to-grid or free movement\n        return movementStepEnabled.value ? calculateSnappedPosition(pos) : pos;\n    };\n    /* eslint-enable arrow-body-style */\n    if (positionRef.value) {\n        positionRef.value.x = calculatePosition(positionRef.value.x, 'x');\n        positionRef.value.y = calculatePosition(positionRef.value.y, 'y');\n    }\n    const onPointerDown = (ev) => {\n        movementStepEnabled.value = !ev.shiftKey;\n        draggingStartPoint.value = {\n            x: ev.pageX,\n            y: ev.pageY,\n        };\n        draggingStartPosition.value = {\n            x: positionRef.value.x,\n            y: positionRef.value.y,\n        };\n    };\n    const onPointerMove = (ev) => {\n        movementStepEnabled.value = !ev.shiftKey;\n        const align = ev.ctrlKey;\n        const gridSnap = ev.shiftKey;\n        if (draggingStartPoint.value && draggingStartPosition.value) {\n            const dx = ev.pageX - draggingStartPoint.value.x;\n            const dy = ev.pageY - draggingStartPoint.value.y;\n            positionRef.value.x = calculatePosition(draggingStartPosition.value.x + dx / graph.value.scaling, 'x', align, gridSnap);\n            positionRef.value.y = calculatePosition(draggingStartPosition.value.y + dy / graph.value.scaling, 'y', align, gridSnap);\n        }\n    };\n    const onPointerUp = () => {\n        draggingStartPoint.value = null;\n        draggingStartPosition.value = null;\n        movementStepEnabled.value = true;\n    };\n    return {\n        dragging,\n        onPointerDown,\n        onPointerMove,\n        onPointerUp,\n    };\n}\n","/*\n * Copyright (c) 2022-2023 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Baklava file that is not exported so it has to be copy-pasted here locally into the project\n\nexport default function getDomElements(ni) {\n    const interfaceDOM = document.getElementById(ni.id);\n    const portDOM = interfaceDOM?.getElementsByClassName('__port');\n\n    return {\n        node: interfaceDOM?.closest('.baklava-node') ?? null,\n        interface: interfaceDOM,\n        port: portDOM && portDOM.length > 0 ? portDOM[0] : null,\n    };\n}\n","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nWraps the connection, defines it's type and parameters.\nInherits from baklavajs/renderer-vue/src/connection/ConnectionView.vue\n-->\n\n<template>\n    <ConnectionView\n        ref=\"conn\"\n        :x1=\"d.x1\"\n        :y1=\"d.y1\"\n        :x2=\"d.x2\"\n        :y2=\"d.y2\"\n        :state=\"state\"\n        :connection=\"connection\"\n        :isHighlighted=\"isHighlighted\"\n        :hover=\"hover\"\n        @mouseover=\"hover = true\"\n        @mouseleave=\"hover = false\"\n    ></ConnectionView>\n</template>\n\n<script>\nimport { defineComponent, ref, computed, watch, nextTick, onMounted, onBeforeUnmount } from 'vue'; // eslint-disable-line object-curly-newline\nimport { Components, useGraph } from '@baklavajs/renderer-vue';\nimport ConnectionView from './ConnectionView.vue';\nimport getDomElements from './domResolver';\nimport { TemporaryConnectionState } from '../temporaryConnection.js';\n\nexport default defineComponent({\n    extends: Components.ConnectionWrapper,\n    props: { connection: { required: true }, isHighlighted: { default: false } },\n    components: { ConnectionView },\n    setup(props) {\n        const conn = ref(null);\n        const { graph } = useGraph();\n\n        let resizeObserver;\n        const d = ref({\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n        });\n\n        // eslint-disable-next-line no-confusing-arrow\n        const state = computed(() =>\n            props.connection.isInDanger\n                ? TemporaryConnectionState.FORBIDDEN\n                : TemporaryConnectionState.NONE,\n        );\n\n        const hover = ref(false);\n\n        /**\n         * Check whether the connection path contains the x, y point\n         *\n         * @param elements result of `document.elementsFromPoint()` for a given x, y point.\n         */\n        const containsPoint = (elements) =>\n            elements.includes(conn.value.$el.firstChild);\n\n        const fromNodePosition = computed(\n            () => graph.value.findNodeById(props.connection.from.nodeId)?.position,\n        );\n        const toNodePosition = computed(\n            () => graph.value.findNodeById(props.connection.to.nodeId)?.position,\n        );\n\n        const fromNode = computed(() => graph.value.findNodeById(props.connection.from.nodeId));\n        const toNode = computed(() => graph.value.findNodeById(props.connection.to.nodeId));\n\n        const fromNodeInterfacesSide = computed(() =>\n            [\n                ...Object.values(fromNode.value?.inputs ?? {}),\n                ...Object.values(fromNode.value?.outputs ?? {}),\n            ].map((io) => [io.side, io.sidePosition]),\n        );\n        const toNodeInterfacesSide = computed(() =>\n            [\n                ...Object.values(toNode.value?.inputs ?? {}),\n                ...Object.values(toNode.value?.outputs ?? {}),\n            ].map((io) => [io.side, io.sidePosition]),\n        );\n\n        const getPortCoordinates = (resolved) => {\n            if (resolved.node && resolved.interface && resolved.port) {\n                return [\n                    resolved.node.offsetLeft +\n                        resolved.interface.offsetLeft +\n                        resolved.port.offsetLeft +\n                        resolved.port.clientWidth / 2,\n                    resolved.node.offsetTop +\n                        resolved.interface.offsetTop +\n                        resolved.port.offsetTop +\n                        resolved.port.clientHeight / 2,\n                ];\n            }\n            return [0, 0];\n        };\n\n        const updateCoords = () => {\n            const from = getDomElements(props.connection.from);\n            const to = getDomElements(props.connection.to);\n            if (from.node && to.node) {\n                if (!resizeObserver) {\n                    resizeObserver = new ResizeObserver(() => {\n                        updateCoords();\n                    });\n                    resizeObserver.observe(from.node);\n                    resizeObserver.observe(to.node);\n                }\n            }\n\n            const [x1, y1] = getPortCoordinates(from);\n            const [x2, y2] = getPortCoordinates(to);\n            d.value = {\n                x1,\n                y1,\n                x2,\n                y2,\n            };\n        };\n\n        // If any side of any interface in from or to node changes we may need to\n        // Rerender connections\n        watch([fromNodeInterfacesSide, toNodeInterfacesSide], async () => {\n            await nextTick();\n            updateCoords();\n        });\n\n        watch(\n            [fromNodePosition, toNodePosition],\n            async () => {\n                await nextTick();\n                updateCoords();\n            },\n            { deep: true },\n        );\n\n        onMounted(async () => {\n            await nextTick();\n            updateCoords();\n        });\n\n        onBeforeUnmount(() => {\n            if (resizeObserver) {\n                resizeObserver.disconnect();\n            }\n        });\n\n        return {\n            d,\n            state,\n            containsPoint,\n            conn,\n            hover,\n        };\n    },\n});\n</script>\n","import { render } from \"./PipelineManagerConnection.vue?vue&type=template&id=55783f60\"\nimport script from \"./PipelineManagerConnection.vue?vue&type=script&lang=js\"\nexport * from \"./PipelineManagerConnection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 63359;\nmodule.exports = webpackEmptyContext;","/*\n * Copyright (c) 2022-2023 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Checks if node is present inside selection rectangle\n * @returns\n */\nexport default function nodeInsideSelection(graph, node, boundingRect) {\n    const nodeHTMLelement = document.getElementById(node.id);\n    const selectionBoundingRect = boundingRect;\n\n    const navBarHeight = 60;\n    const panningX = graph.panning.x;\n    const panningY = graph.panning.y;\n    const { scaling } = graph;\n\n    const nodeX = scaling * (panningX + node.position.x);\n    const nodeY = scaling * (panningY + node.position.y + navBarHeight);\n    const nodeWidth = nodeHTMLelement.offsetWidth;\n    const nodeHeight = nodeHTMLelement.offsetHeight;\n\n    // reduce node dimensions by this coeff so that they are easier to select\n    const nodeDimCoefficient = 0.9;\n\n    if (nodeX + nodeX * (1 - nodeDimCoefficient) > selectionBoundingRect.xBegin\n    && nodeX + nodeWidth * scaling - nodeX * (1 - nodeDimCoefficient) < selectionBoundingRect.xEnd\n    && nodeY + nodeY * (1 - nodeDimCoefficient) > selectionBoundingRect.yBegin\n    && nodeY + nodeHeight * scaling\n        - nodeY * (1 - nodeDimCoefficient) < selectionBoundingRect.yEnd) {\n        return true;\n    }\n    return false;\n}\n","/*\n * Copyright (c) 2022-2024 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { computed } from 'vue';\nimport { useGraph } from '@baklavajs/renderer-vue';\nimport useDragMove from './useDragMove';\n\nexport default function usePanZoom() {\n    const { graph } = useGraph();\n\n    // State needed for pinch-zoom\n    let pointerCache = [];\n    let prevDiff = -1;\n    let midpoint = { x: 0, y: 0 };\n\n    const isGraphSmall = () => graph.value.size().graphWidth <= 500 ||\n            graph.value.size().graphHeight <= 500;\n\n    // The limit for zooming that does not allow for zooming if\n    // `zoomLimit` number of graphs would fit into the editor\n    // vertically or horizontally.\n    let zoomLimit = 4;\n\n    const panningRef = computed(() => graph.value.panning);\n    const dragMove = useDragMove(panningRef);\n\n    const applyZoom = (centerX, centerY, newScale) => {\n        if (newScale <= 0) {\n            return;\n        }\n\n        if (isGraphSmall()) {\n            zoomLimit = 8;\n        }\n\n        const currentPoint = [\n            centerX / graph.value.scaling - graph.value.panning.x,\n            centerY / graph.value.scaling - graph.value.panning.y,\n        ];\n        const newPoint = [\n            centerX / newScale - graph.value.panning.x,\n            centerY / newScale - graph.value.panning.y,\n        ];\n        const diff = [newPoint[0] - currentPoint[0], newPoint[1] - currentPoint[1]];\n\n        const editorHeight = window.innerHeight;\n        const editorWidth = window.innerWidth;\n\n        const allowZoomOut =\n            zoomLimit * graph.value.size().graphWidth > editorWidth / newScale ||\n            zoomLimit * graph.value.size().graphHeight > editorHeight / newScale ||\n            (\n                newScale > graph.value.scaling &&\n                graph.value.size().graphHeight !== -Infinity\n            );\n\n        if (allowZoomOut) {\n            graph.value.scaling = newScale;\n            graph.value.panning.x += diff[0];\n            graph.value.panning.y += diff[1];\n        }\n    };\n\n    const calculateScale = (scrollDelta) => {\n        // For smaller graphs, allow the larger scale than for larger graphs.\n        const upperLimitOfScale = isGraphSmall() ? 2 : 1.5;\n\n        const newScale = graph.value.scaling * (1 - scrollDelta / 3000);\n        return Math.min(newScale, upperLimitOfScale);\n    };\n\n    const onMouseWheel = (ev) => {\n        if (ev.target.type === 'textarea' && ev.target.className === 'baklava-input') {\n            return;\n        }\n\n        ev.preventDefault();\n        let scrollAmount = ev.deltaY;\n        if (ev.deltaMode === 1) {\n            scrollAmount *= 32; // Firefox fix, multiplier is trial & error\n        }\n\n        // Limit the zooming.\n        const newScale = calculateScale(scrollAmount);\n\n        applyZoom(ev.clientX, ev.clientY, newScale);\n    };\n\n    const getCoordsFromCache = () => ({\n        ax: pointerCache[0].clientX,\n        ay: pointerCache[0].clientY,\n        bx: pointerCache[1].clientX,\n        by: pointerCache[1].clientY,\n    });\n\n    const onPointerDown = (ev) => {\n        dragMove.onPointerDown(ev);\n\n        if (pointerCache.length <= 1) {\n            pointerCache.push(ev);\n        }\n\n        if (pointerCache.length === 2) {\n            const { ax, ay, bx, by } = getCoordsFromCache(); // eslint-disable-line object-curly-newline,max-len\n            const dx = ax - bx;\n            const dy = ay - by;\n            prevDiff = Math.sqrt(dx * dx + dy * dy);\n\n            midpoint = {\n                x: ax + (bx - ax) / 2,\n                y: ay + (by - ay) / 2,\n            };\n        }\n    };\n\n    const onPointerMove = (ev) => {\n        if (pointerCache.length === 2) {\n            for (let i = 0; i < pointerCache.length; i += 1) {\n                if (ev.pointerId === pointerCache[i].pointerId) {\n                    pointerCache[i] = ev;\n                    break;\n                }\n            }\n\n            const { ax, ay, bx, by } = getCoordsFromCache(); // eslint-disable-line object-curly-newline,max-len\n            const dx = ax - bx;\n            const dy = ay - by;\n            const curDiff = Math.sqrt(dx * dx + dy * dy);\n\n            if (prevDiff > 0) {\n                const newScale = graph.value.scaling * (1 + (curDiff - prevDiff) / 500);\n                applyZoom(midpoint.x, midpoint.y, newScale);\n            }\n\n            // Cache the distance for the next move event\n            prevDiff = curDiff;\n        } else {\n            dragMove.onPointerMove(ev);\n        }\n    };\n\n    const onPointerUp = (ev) => {\n        dragMove.onPointerUp();\n\n        pointerCache = pointerCache.filter((p) => p.pointerId !== ev.pointerId);\n        prevDiff = -1;\n    };\n\n    const onZoomIn = () => {\n        // Limit the zooming to 1.5x of the original size\n        const newScale = Math.min(graph.value.scaling * 1.2, 1.5);\n        applyZoom(window.innerWidth / 2, window.innerHeight / 2, newScale);\n    };\n\n    const onZoomOut = () => {\n        applyZoom(window.innerWidth / 2, window.innerHeight / 2, graph.value.scaling * 0.8);\n    };\n\n    return {\n        ...dragMove,\n        onPointerDown,\n        onPointerMove,\n        onPointerUp,\n        onMouseWheel,\n        onZoomIn,\n        onZoomOut,\n    };\n}\n"],"names":["TemporaryConnectionState","NONE","ALLOWED","FORBIDDEN","useTemporaryConnection","graph","temporaryConnection","hoveringOver","hoveredOut","hoveringOverElement","ni","value","to","checkConnectionResult","checkConnection","from","status","connectionAllowed","ids","connectionsInDanger","map","c","id","connections","forEach","includes","isInDanger","undefined","render","onMouseMove","ev","element","document","elementFromPoint","clientX","clientY","pointerType","dispatchEvent","PointerEvent","classList","contains","mx","scaling","panning","x","my","y","offsetX","offsetY","onMouseDown","target","onMouseUp","addConnection","setup","selecting","selectionBegin","selectionEnd","boundingRect","xBegin","yBegin","xEnd","yEnd","styles","position","visibility","top","left","width","Math","abs","height","onPointerDown","pageX","pageY","onPointerMove","onPointerUp","class","style","useGroupDragMove","dragRootNodePosition","dragRootNodeId","gridSnapperInstance","groupDragMove","groupPointerMove","groupPositionCoords","dx","dy","selectedNodes","node","parseCategories","categoriesNames","categoryTree","toParse","newLabel","rest","split","label","trim","Object","keys","length","push","join","entries","Set","setDefaultNames","category","name","hitSubstring","categoryNode","title","nodes","nodeTypes","nodeType","subcategories","subTree","setMasksToTrue","mask","values","categorizeNodes","prefix","nodeTree","_a","hitNodes","find","n","categoryName","categoryNames","nameNodeType","isCategory","allNames","nonCategoryNodes","nodeName","updateMasks","treeNode","filter","forceMask","categoryMatches","categoryResult","score","entryMatches","nt","entryResult","unWatch","TOP_LEVEL_NODES_NAMES","components","Arrow","LinkMenu","VerticalEllipsis","Cross","props","required","onDragStart","depth","type","Number","default","defaultCollapse","Boolean","tooltip","nodeSearch","String","data","DOMPurify","viewModel","notEmptyCategory","Array","fill","storedMask","newValue","oldValue","isTopLevelNode","showMenu","editorManager","EditorManager","getEditorManagerInstance","specificationLoaded","padding","forceZero","index","splice","getRotation","sortedEntries","obj","sortSubcategories","sort","a","aNode","b","bNode","toLowerCase","localeCompare","getIconPath","cache","isCategoryNode","showMenuClick","menu","closeMenu","nodeEntryClasses","__entry","key","iconPath","color","rotate","src","draggable","sanitize","URLs","ref","role","i","scale","nodeIcon","computed","titleSanitized","this","PaletteCategory","PaletteEntry","Tooltip","Magnifier","editor","mouseX","mouseY","transform","paletteRef","editorEl","draggedNode","visible","text","draggedNodeStyles","getBoundingClientRect","placeNode","instance","displayedGraph","addNode","configurationMenu","async","newType","nodeData","get","success","dragEndPlaceNode","elementsFromPoint","rect","nodeInformation","removeEventListener","dragEndDeselectNode","scroll","nameFilterRef","nodeTypeEntries","topLevelCategories","assign","getNodeIconPath","getNodeURLs","nodeTypesInCategory","nodesURLs","fromEntries","nodesIconPath","topLevelNodes","_","baklavaView","settings","editableNodeTypes","newGraphNode","nodeCategories","parsedTree","topCategory","topSubcategory","All","newNameFilter","getNodeTree","collapse","collapseSidebar","querySelector","addEventListener","event","scrollTop","iconMenus","getElementsByClassName","translate","toString","$isMobile","placeholder","isDragged","extends","TemporaryConnection","ConnectionView","d","swappedD","input","output","connection","isInput","x1","y1","x2","y2","state","Connection","isHighlighted","hover","Anchor","classes","interfaceTypes","connectionStyle","getConnectionStyle","cssClasses","interfaceConnectionPattern","interfaceConnectionColor","doubleClick","readonly","preventDefault","removeConnection","newD","tx1","ty1","tx2","ty2","connectionRenderer","parsedNewD","isArray","parsedArray","onMouseCtrlDown","supportsAnchors","newAnchor","Date","now","addAnchor","trunc","hasAnchors","anchors","removeAnchor","idx","events","emit","hideAnchors","anchor","rightclickCallback","webpackEmptyContext","req","e","Error","code","resolve","module","exports","elListeners","longPressFactory","pointerDownAction","pointerUpAction","beforeMount","el","binding","timeout","newEvent","longPress","moveEvents","pointerdown","setTimeout","arg","pointermove","pointerup","clearTimeout","unmounted","_el","_binding","_ev","longPressToRight","button","screenX","screenY","relatedTarget","useDragMove","positionRef","nodeId","calculateSnappedPosition","gridSize","background","backgroundGridSnapper","nodeSnappers","draggingStartPoint","draggingStartPosition","movementStepEnabled","dragging","calculatePosition","pos","kind","align","gridSnap","alignedCoord","shiftKey","ctrlKey","getDomElements","interfaceDOM","getElementById","portDOM","closest","interface","port","ConnectionWrapper","conn","resizeObserver","fromNodePosition","findNodeById","toNodePosition","fromNode","toNode","fromNodeInterfacesSide","inputs","outputs","io","side","sidePosition","toNodeInterfacesSide","getPortCoordinates","resolved","offsetLeft","clientWidth","offsetTop","clientHeight","updateCoords","ResizeObserver","observe","deep","disconnect","containsPoint","elements","$el","firstChild","nodeInsideSelection","nodeHTMLelement","selectionBoundingRect","panningX","panningY","nodeX","nodeY","nodeWidth","offsetWidth","nodeHeight","offsetHeight","usePanZoom","pointerCache","prevDiff","midpoint","isGraphSmall","size","graphWidth","graphHeight","zoomLimit","panningRef","dragMove","applyZoom","centerX","centerY","newScale","currentPoint","newPoint","diff","editorHeight","window","innerHeight","editorWidth","innerWidth","getCoordsFromCache","ax","ay","bx","by","sqrt","pointerId","curDiff","p","onMouseWheel","className","scrollAmount","deltaY","deltaMode","scrollDelta","upperLimitOfScale","min","calculateScale","onZoomIn","onZoomOut"],"sourceRoot":""}