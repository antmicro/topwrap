{"version":3,"file":"js/index-42f9d7e6.3ff0e3e8.js","mappings":"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","sources":["webpack://pipeline-manager/./src/components/Tooltip.vue","webpack://pipeline-manager/./src/components/Tooltip.vue?f9bc","webpack://pipeline-manager/./src/App.vue","webpack://pipeline-manager/./src/App.vue?7ccd","webpack://pipeline-manager/./src/components/menu/SaveMenu.vue","webpack://pipeline-manager/./src/components/menu/SaveMenu.vue?5eed","webpack://pipeline-manager/./src/components/menu/ParentMenu.vue","webpack://pipeline-manager/./src/components/menu/ParentMenu.vue?8bab","webpack://pipeline-manager/./src/components/menu/ExportMenu.vue","webpack://pipeline-manager/./src/components/menu/ExportMenu.vue?ad50","webpack://pipeline-manager/./src/components/menu/nodeCreation/InterfaceConfigurationMenu.vue?e5af","webpack://pipeline-manager/./src/components/menu/nodeCreation/utils.ts","webpack://pipeline-manager/./src/components/menu/nodeCreation/InterfaceConfigurationMenu.vue?abd8","webpack://pipeline-manager/./src/components/menu/nodeCreation/InterfaceConfigurationMenu.vue","webpack://pipeline-manager/./src/components/menu/nodeCreation/NodeConfigurationMenu.vue?f8a9","webpack://pipeline-manager/./src/components/menu/nodeCreation/NodeConfigurationMenu.vue?e947","webpack://pipeline-manager/./src/components/menu/nodeCreation/NodeConfigurationMenu.vue","webpack://pipeline-manager/./src/components/menu/nodeCreation/PropertyConfigurationMenu.vue?f39c","webpack://pipeline-manager/./src/components/menu/nodeCreation/PropertyConfigurationMenu.vue?fef6","webpack://pipeline-manager/./src/components/menu/nodeCreation/PropertyConfigurationMenu.vue","webpack://pipeline-manager/./src/components/menu/nodeCreation/LayerConfigurationMenu.vue?d099","webpack://pipeline-manager/./src/components/menu/nodeCreation/LayerConfigurationMenu.vue?e32c","webpack://pipeline-manager/./src/components/menu/nodeCreation/LayerConfigurationMenu.vue","webpack://pipeline-manager/./src/components/menu/nodeCreation/ListMenu.vue?6e0a","webpack://pipeline-manager/./src/components/menu/nodeCreation/ListMenu.vue?0753","webpack://pipeline-manager/./src/components/menu/nodeCreation/ListMenu.vue","webpack://pipeline-manager/./src/components/menu/WelcomeMenu.vue","webpack://pipeline-manager/./src/components/menu/WelcomeMenu.vue?fd0a","webpack://pipeline-manager/./src/components/Panel.vue","webpack://pipeline-manager/./src/components/Panel.vue?aa94","webpack://pipeline-manager/./src/components/Return.vue","webpack://pipeline-manager/./src/components/Return.vue?4a84","webpack://pipeline-manager/./src/components/Notification.vue","webpack://pipeline-manager/./src/components/NotificationBadge.vue","webpack://pipeline-manager/./src/components/NotificationBadge.vue?8d2c","webpack://pipeline-manager/./src/components/Notification.vue?deb2","webpack://pipeline-manager/./src/components/Anchor.vue?e9d6","webpack://pipeline-manager/./src/components/Anchor.vue","webpack://pipeline-manager/./src/components/Anchor.vue?86c5","webpack://pipeline-manager/./src/components/NodeSpecificationEditor.vue","webpack://pipeline-manager/./src/components/NodeSpecificationEditor.vue?96e3","webpack://pipeline-manager/./src/components/Home.vue","webpack://pipeline-manager/./src/components/NavBar.vue","webpack://pipeline-manager/./src/components/DropdownItem.vue","webpack://pipeline-manager/./src/components/DropdownItem.vue?4b29","webpack://pipeline-manager/./src/components/Notifications.vue","webpack://pipeline-manager/./src/components/Notifications.vue?e79f","webpack://pipeline-manager/./src/components/Settings.vue","webpack://pipeline-manager/./src/components/Settings.vue?b3ff","webpack://pipeline-manager/./src/components/saveConfiguration.ts","webpack://pipeline-manager/./src/components/NavBar.vue?01fd","webpack://pipeline-manager/./src/components/TerminalPanel.vue?8876","webpack://pipeline-manager/./src/components/Terminal.vue","webpack://pipeline-manager/./src/components/Terminal.vue?7d4c","webpack://pipeline-manager/./src/components/TerminalPanel.vue?4ba6","webpack://pipeline-manager/./src/components/TerminalPanel.vue","webpack://pipeline-manager/./src/components/LoadingScreen.vue","webpack://pipeline-manager/./src/components/LoadingScreen.vue?f185","webpack://pipeline-manager/./src/components/Home.vue?08c6","webpack://pipeline-manager/./src/components/Zoom.vue","webpack://pipeline-manager/./src/components/Zoom.vue?4892"],"sourcesContent":["<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<template>\n    <div class=\"__tooltip\" :style=\"styles\">\n        {{ text }}\n    </div>\n</template>\n\n<script>\nimport { defineComponent, computed } from 'vue';\n\nexport default defineComponent({\n    props: {\n        top: {\n            type: Number,\n            default: 0,\n        },\n        left: {\n            type: Number,\n            default: 0,\n        },\n        text: {\n            type: String,\n            required: true,\n        },\n    },\n    setup(props) {\n        const styles = computed(() => {\n            const s = {};\n            s.top = `${props.top}px`;\n            s.left = `${props.left}px`;\n            return s;\n        });\n\n        return { styles };\n    },\n});\n</script>\n\n<style lang=\"scss\">\n.__tooltip {\n    z-index: 4;\n    font-size: $fs-small;\n    color: $white;\n    position: absolute;\n    text-align: center;\n    flex-direction: column;\n    width: max-content;\n\n    margin: 1em 0;\n    padding: 1em;\n    background-color: $gray-600;\n    border: 1px solid $gray-500;\n    border-radius: 15px;\n\n    transform: translateX(-50%);\n}\n</style>\n","import { render } from \"./Tooltip.vue?vue&type=template&id=7e6bd8f7\"\nimport script from \"./Tooltip.vue?vue&type=script&lang=js\"\nexport * from \"./Tooltip.vue?vue&type=script&lang=js\"\n\nimport \"./Tooltip.vue?vue&type=style&index=0&id=7e6bd8f7&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<template>\n    <div id=\"app\">\n        <router-view />\n    </div>\n</template>\n","import { render } from \"./App.vue?vue&type=template&id=2102b6b3\"\nconst script = {}\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2025 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nPopup menu for choosing save options.\n-->\n\n<!-- eslint-disable vue/no-mutating-props -->\n<template>\n    <div class=\"create-menu\">\n        <div v-for=\"[option, label] in options\" :key=\"option.id\" class=\"option\">\n            <div class=\"option-label\" v-if=\"getOptionName(option.componentName)\">\n                {{ option.name }}\n            </div>\n            <component\n                :is=\"option.component\"\n                :intf=\"option\"\n                v-model=\"saveConfiguration[label]\"\n                :class=\"{ '__name-option': getOptionName(option.componentName)}\"\n            />\n        </div>\n    </div>\n</template>\n\n<script>\nimport {\n    defineComponent, computed, markRaw, ref, watch, toRef,\n} from 'vue';\n\nimport InputInterface from '../../interfaces/InputInterface.js';\nimport InputInterfaceComponent from '../../interfaces/InputInterface.vue';\nimport ButtonInterface from '../../interfaces/ButtonInterface.js';\nimport CheckboxInterface from '../../interfaces/CheckboxInterface.js';\nimport { getOptionName } from '../../custom/CustomNode.js';\n\nexport default defineComponent({\n    props: {\n        modelValue: {\n            type: Boolean,\n            default: false,\n        },\n        saveConfiguration: {\n            required: true,\n            type: Object,\n        },\n    },\n    setup(props, { emit }) {\n        const close = () => {\n            if (props.modelValue) {\n                emit('update:modelValue', false);\n            }\n        };\n\n        const createCheckboxOption = (text, label) => [computed(() => {\n            if (props.saveConfiguration[label] === undefined) return undefined;\n\n            const option = new CheckboxInterface(text, props.saveConfiguration[label]);\n            option.events.setValue.subscribe(this, (v) => {\n                props.saveConfiguration[label] = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n            });\n            option.setDefaultComponent();\n            return option;\n        }), label];\n\n        const saveConfiguration = toRef(props, 'saveConfiguration');\n        const createInputOption = (text, label) => {\n            const createComponent = () => {\n                const component = new InputInterface(text);\n                component.componentName = 'InputInterface';\n                component.setComponent(markRaw(InputInterfaceComponent));\n                return component;\n            };\n\n            const exists = computed(() => saveConfiguration.value[label] !== undefined);\n            const option = ref(exists.value ? createComponent() : undefined);\n\n            watch(exists, (existsNow, existedBefore) => {\n                if (existedBefore === existsNow) return;\n                option.value = existsNow ? createComponent() : undefined;\n            });\n\n            return [option, label];\n        };\n\n        const readonly = createCheckboxOption('Make graph read only', 'readonly');\n        const hideHud = createCheckboxOption('Disable HUD', 'hideHud');\n        const position = createCheckboxOption('Preserve current view location', 'position');\n        const graph = createCheckboxOption('Save graph', 'graph');\n        const minify = createCheckboxOption('Minify', 'minify');\n        const graphName = createInputOption('Graph name', 'graphName');\n        const dataflowname = createInputOption('File name', 'saveName');\n\n        const save = [computed(() => new ButtonInterface('Save', () => {\n            props.saveConfiguration.saveCallback();\n            close();\n        })), undefined];\n\n        const options = computed(() =>\n            [readonly, hideHud, position, graph, minify, graphName, dataflowname, save]\n                .filter(([option, _]) => option.value !== undefined)\n                .map(([option, label]) => [option.value, label]));\n\n        return { options, getOptionName };\n    },\n});\n</script>\n","import { render } from \"./SaveMenu.vue?vue&type=template&id=b28d5b44\"\nimport script from \"./SaveMenu.vue?vue&type=script&lang=js\"\nexport * from \"./SaveMenu.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2025 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nBase for creating popup menus.\n-->\n\n<!-- eslint-disable vue/no-mutating-props -->\n<template>\n    <div class=\"popup-menu\">\n        <div class=\"__header\" v-show=\"title\">\n            <div class=\"__header-title\">\n                {{ title }}\n            </div>\n            <Cross tabindex=\"-1\" class=\"__close\" @click=\"close\" />\n        </div>\n        <slot></slot>\n    </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\nimport Cross from '../../icons/Cross.vue';\n\nexport default defineComponent({\n    props: {\n        modelValue: {\n            type: Boolean,\n            default: false,\n        },\n        title: {\n            type: String,\n        },\n    },\n    components: {\n        Cross,\n    },\n    setup(props, { emit }) {\n        const close = () => {\n            if (props.modelValue) {\n                emit('update:modelValue', false);\n            }\n        };\n\n        return { close };\n    },\n});\n</script>\n\n<style lang=\"scss\">\n    .popup-menu {\n        position: absolute;\n        background-color: #{$gray-600}E6;\n        border: 1px solid $green;\n        border-radius: 10px;\n        color: white;\n        user-select: none;\n\n        left: 50vw;\n        top: 50vh;\n        transform: translate(-50%, -50%);\n        padding: 1em;\n\n        display: flex;\n        flex-direction: column;\n        gap: 1em;\n\n        height: max-content;\n\n        & > .__header {\n            display: flex;\n            align-items: center;\n            gap: 2em;\n\n            & > .__header-title {\n                font-size: $fs-small;\n                flex-grow: 1;\n            }\n\n            & > .__close {\n                flex-grow: 0;\n                user-select: none;\n                outline: none;\n                cursor: pointer;\n            }\n        }\n    }\n</style>\n","import { render } from \"./ParentMenu.vue?vue&type=template&id=de1b63f8\"\nimport script from \"./ParentMenu.vue?vue&type=script&lang=js\"\nexport * from \"./ParentMenu.vue?vue&type=script&lang=js\"\n\nimport \"./ParentMenu.vue?vue&type=style&index=0&id=de1b63f8&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2025 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nPopup menu for choosing export options.\n-->\n\n<!-- eslint-disable vue/no-mutating-props -->\n<template>\n    <div class=\"create-menu\">\n        <div v-for=\"[option, label] in options\" :key=\"option.id\" class=\"option\">\n            <div class=\"option-label\" v-if=\"getOptionName(option.componentName)\">\n                {{ option.name }}\n            </div>\n            <component\n                :is=\"option.component\"\n                :intf=\"option\"\n                v-model=\"exportGraph[label]\"\n                :class=\"{ '__name-option': getOptionName(option.componentName)}\"\n            />\n        </div>\n    </div>\n</template>\n\n<script>\nimport {\n    defineComponent, computed, markRaw,\n} from 'vue';\n\nimport IntegerInterface from '../../interfaces/IntegerInterface.js';\nimport ButtonInterface from '../../interfaces/ButtonInterface.js';\nimport InputInterface from '../../interfaces/InputInterface.js';\nimport InputInterfaceComponent from '../../interfaces/InputInterface.vue';\nimport { getOptionName } from '../../custom/CustomNode.js';\n\nexport default defineComponent({\n    props: {\n        modelValue: {\n            type: Boolean,\n            default: false,\n        },\n        exportGraph: {\n            required: true,\n            type: Object,\n        },\n    },\n    setup(props, { emit }) {\n        const close = () => {\n            if (props.modelValue) {\n                emit('update:modelValue', false);\n            }\n        };\n\n        const createIntegerOption = (text, label) => [computed(() => {\n            if (props.exportGraph[label] === undefined) return undefined;\n\n            const option = new IntegerInterface(text, props.exportGraph[label]);\n            option.events.setValue.subscribe(this, (v) => {\n                props.exportGraph[label] = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n            });\n            option.setDefaultComponent();\n            return option;\n        }), label];\n\n        const width = createIntegerOption('Width', 'width');\n        const height = createIntegerOption('Height', 'height');\n\n        const fileName = [computed(() => {\n            const component = new InputInterface('File name');\n            component.componentName = 'InputInterface';\n            component.setComponent(markRaw(InputInterfaceComponent));\n            return component;\n        }), 'saveName'];\n\n        const save = [computed(() => new ButtonInterface('Export', () => {\n            props.exportGraph.exportCallback();\n            close();\n        })), undefined];\n\n        const options =\n            computed(() => [width, height, fileName, save]\n                .filter(([option, _]) => option.value !== undefined)\n                .map(([option, label]) => [option.value, label]));\n\n        return { options, getOptionName };\n    },\n});\n</script>\n","import { render } from \"./ExportMenu.vue?vue&type=template&id=5e74f793\"\nimport script from \"./ExportMenu.vue?vue&type=script&lang=js\"\nexport * from \"./ExportMenu.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = { class: \"create-menu\" };\nconst _hoisted_2 = { class: \"option-label\" };\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n    return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.configurationOptions, (option) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n                key: option.id\n            }, [\n                _createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.getOptionName(option.componentName) ? `${option.name}:` : ''), 1),\n                (option.componentName === 'InputInterface')\n                    ? (_openBlock(), _createBlock(_resolveDynamicComponent(option.component), {\n                        key: 0,\n                        intf: option,\n                        modelValue: _ctx.newInterface[option.configurationVModel],\n                        \"onUpdate:modelValue\": ($event) => ((_ctx.newInterface[option.configurationVModel]) = $event),\n                        class: \"__name-option\"\n                    }, null, 8, [\"intf\", \"modelValue\", \"onUpdate:modelValue\"]))\n                    : (_openBlock(), _createBlock(_resolveDynamicComponent(option.component), {\n                        key: 1,\n                        intf: option,\n                        class: \"__name-option\"\n                    }, null, 8, [\"intf\"]))\n            ]));\n        }), 128)),\n        (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.addInterfaceMenu.component), { intf: _ctx.addInterfaceMenu }, null, 8, [\"intf\"]))\n    ]));\n}\n","/*\n * Copyright (c) 2025 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n *\n */\nimport { computed, markRaw } from 'vue';\nimport InputInterface from '../../../interfaces/InputInterface.js';\nimport InputInterfaceComponent from '../../../interfaces/InputInterface.vue';\nfunction newInputInterface(text, value, vModelName) {\n    return computed(() => {\n        const option = new InputInterface(text, value).setPort(false);\n        option.componentName = 'InputInterface';\n        option.configurationVModel = vModelName;\n        option.setComponent(markRaw(InputInterfaceComponent));\n        return option;\n    });\n}\nexport default newInputInterface;\n","import { defineComponent, computed, ref, } from 'vue';\nimport { ButtonInterface, SelectInterface, } from '@baklavajs/renderer-vue'; // eslint-disable-line object-curly-newline\nimport { getOptionName } from '../../../custom/CustomNode.js';\nimport { addInterface } from '../../../core/nodeCreation/Configuration.ts';\nimport { menuState } from '../../../core/nodeCreation/ConfigurationState.ts';\nimport newInputInterface from './utils.ts';\nexport default defineComponent({\n    setup() {\n        const newInterface = {\n            name: 'New interface',\n            type: '',\n            direction: ref('inout'),\n        };\n        const close = () => {\n            menuState.interfaceMenu = false;\n        };\n        const interfaceName = newInputInterface('Interface name', newInterface.name, 'name');\n        const interfaceType = newInputInterface('Interface type', newInterface.type, 'type');\n        const interfaceDirection = computed(() => {\n            const option = new SelectInterface('Interface direction', newInterface.direction.value, ['input', 'output', 'inout']).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                newInterface.direction.value = v;\n            });\n            option.componentName = 'SelectInterface';\n            return option;\n        });\n        const addInterfaceMenu = computed(() => {\n            const button = new ButtonInterface('Add interface', () => {\n                if (newInterface.type === '') {\n                    const intf = {\n                        name: newInterface.name,\n                        direction: newInterface.direction.value,\n                    };\n                    addInterface(intf);\n                }\n                else {\n                    const typesList = newInterface.type.split(',');\n                    const intf = {\n                        name: newInterface.name,\n                        type: typesList.length === 1 ? newInterface.type : typesList,\n                        direction: newInterface.direction.value,\n                    };\n                    addInterface(intf);\n                }\n                close();\n            });\n            button.componentName = 'ButtonInterface';\n            return button;\n        });\n        const configurationOptions = computed(() => [interfaceName.value, interfaceType.value, interfaceDirection.value]);\n        return {\n            configurationOptions,\n            addInterfaceMenu,\n            getOptionName,\n            newInterface,\n        };\n    },\n});\n","import { render } from \"./InterfaceConfigurationMenu.vue?vue&type=template&id=0667d431&ts=true\"\nimport script from \"./InterfaceConfigurationMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./InterfaceConfigurationMenu.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = { class: \"create-menu\" };\nconst _hoisted_2 = { class: \"option-label\" };\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n    return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.configurationOptions, (option) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n                key: option.id\n            }, [\n                _createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.getOptionName(option.componentName) ? `${option.name}:` : ''), 1),\n                (_openBlock(), _createBlock(_resolveDynamicComponent(option.component), {\n                    intf: option,\n                    modelValue: _ctx.newNode[option.configurationVModel],\n                    \"onUpdate:modelValue\": ($event) => ((_ctx.newNode[option.configurationVModel]) = $event),\n                    class: \"__name-option\"\n                }, null, 8, [\"intf\", \"modelValue\", \"onUpdate:modelValue\"]))\n            ]));\n        }), 128)),\n        (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.create.component), { intf: _ctx.create }, null, 8, [\"intf\"]))\n    ]));\n}\n","import { defineComponent, computed, markRaw } from 'vue';\nimport { ButtonInterface, } from '@baklavajs/renderer-vue'; // eslint-disable-line object-curly-newline\nimport { getOptionName } from '../../../custom/CustomNode.js';\nimport { createNode, modifyConfiguration } from '../../../core/nodeCreation/Configuration.ts';\nimport { menuState, configurationState } from '../../../core/nodeCreation/ConfigurationState.ts';\nimport TextAreaInterface from '../../../interfaces/TextAreaInterface.js';\nimport TextAreaInterfaceComponent from '../../../interfaces/TextAreaInterface.vue';\nimport newInputInterface from './utils.ts';\nexport default defineComponent({\n    setup() {\n        if (menuState.configurationMenu.addNode) {\n            // Reset node configuration\n            configurationState.nodeData = {\n                name: 'Custom Node',\n                category: 'Default category',\n                layer: '',\n                description: '',\n            };\n            configurationState.properties = [];\n            configurationState.interfaces = [];\n            configurationState.editedType = undefined;\n            configurationState.success = false;\n        }\n        const newNode = configurationState.nodeData;\n        const close = () => {\n            menuState.configurationMenu.visible = false;\n        };\n        const nodeName = newInputInterface('Node name', 'Custom Node', 'name');\n        const nodeCategory = newInputInterface('Node category', 'Default', 'category');\n        if (!configurationState.nodeData.description) {\n            configurationState.nodeData.description = '';\n        }\n        const nodeDescription = computed(() => {\n            const option = new TextAreaInterface('Node description', 'Description').setPort(false);\n            option.componentName = 'TextAreaInterface';\n            option.configurationVModel = 'description';\n            option.setComponent(markRaw(TextAreaInterfaceComponent));\n            return option;\n        });\n        const create = computed(() => {\n            let button;\n            if (menuState.configurationMenu.addNode === true) {\n                button = new ButtonInterface('Create', () => {\n                    const errors = createNode();\n                    configurationState.success = errors.length === 0;\n                    close();\n                });\n            }\n            else {\n                button = new ButtonInterface('Configure', () => {\n                    const errors = modifyConfiguration();\n                    configurationState.success = errors.length === 0;\n                    close();\n                });\n            }\n            button.componentName = 'ButtonInterface';\n            return button;\n        });\n        const configurationOptions = computed(() => [nodeName.value, nodeCategory.value, nodeDescription.value]);\n        return {\n            configurationOptions,\n            create,\n            getOptionName,\n            newNode,\n        };\n    },\n});\n","import { render } from \"./NodeConfigurationMenu.vue?vue&type=template&id=bf06a020&ts=true\"\nimport script from \"./NodeConfigurationMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./NodeConfigurationMenu.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = { class: \"create-menu\" };\nconst _hoisted_2 = { class: \"option-label\" };\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n    return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.configurationOptions, (option) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n                key: option.id\n            }, [\n                _createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.getOptionName(option.componentName) ? `${option.name}:` : ''), 1),\n                (option.componentName === 'InputInterface')\n                    ? (_openBlock(), _createBlock(_resolveDynamicComponent(option.component), {\n                        key: 0,\n                        intf: option,\n                        modelValue: _ctx.newProperty[option.configurationVModel],\n                        \"onUpdate:modelValue\": ($event) => ((_ctx.newProperty[option.configurationVModel]) = $event),\n                        class: \"__name-option\"\n                    }, null, 8, [\"intf\", \"modelValue\", \"onUpdate:modelValue\"]))\n                    : (_openBlock(), _createBlock(_resolveDynamicComponent(option.component), {\n                        key: 1,\n                        intf: option,\n                        class: \"__name-option\"\n                    }, null, 8, [\"intf\"]))\n            ]));\n        }), 128)),\n        (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.addPropertyMenu.component), { intf: _ctx.addPropertyMenu }, null, 8, [\"intf\"]))\n    ]));\n}\n","import { defineComponent, computed, markRaw, ref, } from 'vue';\nimport { ButtonInterface, SelectInterface, IntegerInterface, CheckboxInterface, } from '@baklavajs/renderer-vue'; // eslint-disable-line object-curly-newline\nimport { getOptionName } from '../../../custom/CustomNode.js';\nimport { addProperty } from '../../../core/nodeCreation/Configuration.ts';\nimport { menuState } from '../../../core/nodeCreation/ConfigurationState.ts';\nimport InputInterface from '../../../interfaces/InputInterface.js';\nimport InputInterfaceComponent from '../../../interfaces/InputInterface.vue';\nimport newInputInterface from './utils.ts';\nexport default defineComponent({\n    setup() {\n        const newProperty = {\n            name: 'New property',\n            type: ref('text'),\n            default: 'Default',\n            min: ref(0),\n            max: ref(0),\n        };\n        const enabledMinMax = ref(false);\n        const close = () => {\n            menuState.propertyMenu = false;\n        };\n        const propertyName = newInputInterface('Property name', newProperty.name, 'name');\n        // NOTE: Select and List types are not supported for now\n        const propertyType = computed(() => {\n            const option = new SelectInterface('Property type', newProperty.type.value, ['text', 'number', 'integer', 'bool', 'slider', 'constant', 'hex', 'multiline']).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                if (v === newProperty.type.value)\n                    return;\n                if (['text', 'constant'].includes(v)) {\n                    newProperty.default = v;\n                }\n                else if (['number', 'integer', 'slider', 'hex'].includes(v)) {\n                    newProperty.default = ref(0);\n                    // Whether to display min max values by default\n                    if (['slider'].includes(v)) {\n                        enabledMinMax.value = true;\n                    }\n                    else {\n                        enabledMinMax.value = false;\n                    }\n                }\n                else if (['bool'].includes(v)) {\n                    newProperty.default = ref(true);\n                }\n                newProperty.type.value = v;\n            });\n            option.componentName = 'SelectInterface';\n            return option;\n        });\n        const propertyDefault = computed(() => {\n            if (['text', 'constant'].includes(newProperty.type.value)) {\n                const option = new InputInterface('Default value', newProperty.default).setPort(false);\n                option.componentName = 'InputInterface';\n                option.configurationVModel = 'default';\n                option.setComponent(markRaw(InputInterfaceComponent));\n                return option;\n            }\n            if (['number', 'integer', 'slider', 'hex'].includes(newProperty.type.value)) {\n                const option = new IntegerInterface('Default value', newProperty.default.value).setPort(false);\n                option.events.setValue.subscribe(this, (v) => {\n                    newProperty.default.value = v;\n                });\n                option.componentName = 'IntegerInterface';\n                return option;\n            }\n            const option = new CheckboxInterface('Default value', newProperty.default.value).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                newProperty.default.value = v;\n            });\n            option.componentName = 'CheckboxInterface';\n            return option;\n        });\n        const addPropertyMenu = computed(() => {\n            const button = new ButtonInterface('Add property', () => {\n                const prop = {\n                    name: newProperty.name,\n                    type: newProperty.type.value,\n                    default: (typeof newProperty.default === 'string') ? newProperty.default : newProperty.default.value,\n                    min: enabledMinMax.value ? newProperty.min.value : undefined,\n                    max: enabledMinMax.value ? newProperty.max.value : undefined,\n                };\n                addProperty(prop);\n                close();\n            });\n            button.componentName = 'ButtonInterface';\n            return button;\n        });\n        const useMinMax = computed(() => {\n            const option = new CheckboxInterface('Use min / max', enabledMinMax.value).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                enabledMinMax.value = v;\n            });\n            option.componentName = 'CheckboxInterface';\n            return option;\n        });\n        const propertyMin = computed(() => {\n            var _a;\n            const option = new IntegerInterface('Min', (_a = newProperty.min.value) !== null && _a !== void 0 ? _a : 0).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                newProperty.min.value = v;\n            });\n            option.componentName = 'IntegerInterface';\n            return option;\n        });\n        const propertyMax = computed(() => {\n            var _a;\n            const option = new IntegerInterface('Max', (_a = newProperty.max.value) !== null && _a !== void 0 ? _a : 1).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                newProperty.max.value = v;\n            });\n            option.componentName = 'IntegerInterface';\n            return option;\n        });\n        const configurationOptions = computed(() => {\n            let options = [propertyName.value, propertyType.value, propertyDefault.value];\n            if (['number', 'integer', 'slider', 'hex'].includes(newProperty.type.value)) {\n                if (!['slider'].includes(newProperty.type.value)) {\n                    options.push(useMinMax.value);\n                }\n                if (enabledMinMax.value) {\n                    options = options.concat([propertyMin.value, propertyMax.value]);\n                }\n            }\n            return options;\n        });\n        return {\n            configurationOptions,\n            addPropertyMenu,\n            getOptionName,\n            newProperty,\n        };\n    },\n});\n","import { render } from \"./PropertyConfigurationMenu.vue?vue&type=template&id=78d5d699&ts=true\"\nimport script from \"./PropertyConfigurationMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./PropertyConfigurationMenu.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = { class: \"create-menu\" };\nconst _hoisted_2 = { class: \"option-label\" };\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n    return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.configurationOptions, (option) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n                key: option.id\n            }, [\n                _createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.getOptionName(option.componentName) ? `${option.name}:` : ''), 1),\n                (_openBlock(), _createBlock(_resolveDynamicComponent(option.component), {\n                    intf: option,\n                    modelValue: _ctx.newNodeData[option.configurationVModel],\n                    \"onUpdate:modelValue\": ($event) => ((_ctx.newNodeData[option.configurationVModel]) = $event),\n                    class: \"__name-option\"\n                }, null, 8, [\"intf\", \"modelValue\", \"onUpdate:modelValue\"]))\n            ]));\n        }), 128)),\n        (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.setLayer.component), { intf: _ctx.setLayer }, null, 8, [\"intf\"]))\n    ]));\n}\n","import { defineComponent, computed, } from 'vue';\nimport { ButtonInterface } from '@baklavajs/renderer-vue'; // eslint-disable-line object-curly-newline\nimport { getOptionName } from '../../../custom/CustomNode.js';\nimport { modifyConfiguration } from '../../../core/nodeCreation/Configuration.ts';\nimport { menuState, configurationState } from '../../../core/nodeCreation/ConfigurationState.ts';\nimport newInputInterface from './utils.ts';\nexport default defineComponent({\n    setup() {\n        const newNodeData = configurationState.nodeData;\n        const close = () => {\n            menuState.layerMenu = false;\n        };\n        const nodeLayer = newInputInterface('Node layer', 'Default layer', 'layer');\n        const setLayer = computed(() => {\n            const button = new ButtonInterface('Set layer', () => {\n                modifyConfiguration();\n                close();\n            });\n            button.componentName = 'ButtonInterface';\n            return button;\n        });\n        const configurationOptions = computed(() => [nodeLayer.value]);\n        return {\n            configurationOptions,\n            getOptionName,\n            newNodeData,\n            setLayer,\n        };\n    },\n});\n","import { render } from \"./LayerConfigurationMenu.vue?vue&type=template&id=49da2a1c&ts=true\"\nimport script from \"./LayerConfigurationMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./LayerConfigurationMenu.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = { class: \"create-menu\" };\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n    return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.listedOptions, (option) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n                key: option.id\n            }, [\n                (_openBlock(), _createBlock(_resolveDynamicComponent(option.component), {\n                    intf: option,\n                    tabindex: \"-1\"\n                }, null, 8, [\"intf\"]))\n            ]));\n        }), 128)),\n        (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.confirmButton.component), { intf: _ctx.confirmButton }, null, 8, [\"intf\"]))\n    ]));\n}\n","import { defineComponent, computed, ref, } from 'vue';\nimport { ButtonInterface } from '@baklavajs/renderer-vue'; // eslint-disable-line object-curly-newline\nimport CheckboxInterface from '../../../interfaces/CheckboxInterface.js';\nimport { menuState } from '../../../core/nodeCreation/ConfigurationState.ts';\nexport default defineComponent({\n    props: {\n        componentName: {\n            type: String,\n            required: true,\n        },\n        items: {\n            type: Array,\n            required: true,\n        },\n        confirmAction: {\n            type: Function,\n            required: true,\n        },\n        confirmText: {\n            type: String,\n            required: true,\n        },\n    },\n    setup(props) {\n        const close = () => {\n            menuState[props.componentName] = false;\n        };\n        const selectedItems = ref([]);\n        function toggleItem(item) {\n            const i = selectedItems.value.indexOf(item);\n            if (i >= 0) {\n                selectedItems.value.splice(i, 1);\n            }\n            else {\n                selectedItems.value.push(item);\n            }\n        }\n        const listedOptions = computed(() => {\n            const options = ref([]);\n            props.items.forEach((item) => {\n                const option = new CheckboxInterface(item.name, false);\n                option.events.setValue.subscribe(this, () => toggleItem(item));\n                options.value.push(option);\n            });\n            return options.value;\n        });\n        const confirmButton = computed(() => {\n            const button = new ButtonInterface(props.confirmText, () => {\n                props.confirmAction(selectedItems.value);\n                close();\n            });\n            button.componentName = 'ButtonInterface';\n            return button;\n        });\n        return {\n            selectedItems,\n            listedOptions,\n            confirmButton,\n        };\n    },\n});\n","import { render } from \"./ListMenu.vue?vue&type=template&id=1a52ef6d&ts=true\"\nimport script from \"./ListMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./ListMenu.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"welcome-container\">\n        <p class=\"subtitle\">\n            <span v-if=\"welcomeMessage\">\n            {{ welcomeMessage }}\n            <br /><br />\n            </span>\n        </p>\n\n        <div\n            class=\"drop-zone\"\n            @dragover.prevent=\"isDragging = true\"\n            @dragleave=\"isDragging = false\"\n            @drop.prevent=\"handleDrop\"\n            :class=\"{ dragging: isDragging }\"\n        >\n            <svg class=\"drop-icon\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\">\n                <path\n                    d=\"M12 15V3m0 0l-4 4m4-4l4 4M2 17l.621 2.485A2 2 0 0 0 4.561 21h14.878a2 2 0 0 0\n                        1.94-1.515L22 17\"\n                    stroke=\"currentColor\"\n                    stroke-width=\"2\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                />\n            </svg>\n\n            <h3>\n                {{\n                    specificationLoaded\n                        ? 'Drag & drop graph file or nodes'\n                        : 'Drag & drop specification of nodes'\n                }}\n            </h3>\n            <p class=\"drop-text\">\n                {{\n                    specificationLoaded\n                        // eslint-disable-next-line max-len\n                        ? 'Either upload an existing graph in JSON format or start a new graph by drag and dropping nodes specified in the left sidebar'\n                        // eslint-disable-next-line max-len\n                        : 'Load a specification file in JSON format to provide available node types. Optionally upload both specification and graph'\n                }}\n            </p>\n\n            <div class=\"or-divider\"><span>OR</span></div>\n\n            <button class=\"browse-button\" @click=\"$refs.fileInput.click()\">\n                <component :is=\"'svg'\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\n                    <path\n                        d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                    <polyline\n                        points=\"14,2 14,8 20,8\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                </component>\n                Browse files\n            </button>\n        </div>\n\n        <nav class=\"footer-links\">\n            <a\n                v-for=\"{ text, url, icon, polyline } in links\"\n                :key=\"text\"\n                :href=\"url\"\n                target=\"_blank\"\n                class=\"footer-link\"\n            >\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\">\n                    <path\n                        :d=\"icon\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                    <polyline\n                        v-if=\"polyline\"\n                        :points=\"polyline\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                    />\n                </svg>\n                {{ text }}\n            </a>\n        </nav>\n\n        <input\n            ref=\"fileInput\"\n            type=\"file\"\n            @change=\"loadFiles($event.target.files)\"\n            multiple\n            accept=\".json\"\n        />\n    </div>\n</template>\n\n<script>\nimport { defineComponent, ref, computed } from 'vue';\nimport EditorManager from '../../core/EditorManager';\n\nconst LINKS = [\n    {\n        text: 'Documentation',\n        url: 'https://antmicro.github.io/kenning-pipeline-manager/introduction.html',\n        icon: 'M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z',\n        polyline: '14,2 14,8 20,8',\n    },\n];\n\nexport default defineComponent({\n    props: {\n        loadFiles: { type: Function, required: true },\n    },\n    setup(props) {\n        const isDragging = ref(false);\n        const specificationLoaded = computed(\n            () => EditorManager.getEditorManagerInstance().specificationLoaded.value,\n        );\n\n        const welcomeMessage = computed(\n            () => process.env.VUE_APP_WELCOME_MESSAGE,\n        );\n\n        const handleDrop = ({ dataTransfer: { files } }) => {\n            isDragging.value = false;\n            if (files.length) {\n                props.loadFiles(files);\n            }\n        };\n\n        return {\n            isDragging,\n            specificationLoaded,\n            welcomeMessage,\n            links: LINKS,\n            handleDrop,\n        };\n    },\n});\n</script>\n\n<style lang=\"scss\">\n.welcome-container-panel {\n    position: fixed !important;\n    left: min(300px, 50vw) !important;\n    top: 0 !important;\n    width: calc(100vw - min(300px, 50vw)) !important;\n    height: 100vh !important;\n    z-index: 2 !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    right: 0 !important;\n    bottom: 0 !important;\n\n    .blur-panel {\n        position: static !important;\n        left: 0 !important;\n        top: 0 !important;\n        width: 100% !important;\n        height: 100% !important;\n        padding: 0 !important;\n        margin: 0 !important;\n        background-color: transparent !important;\n        backdrop-filter: none !important;\n    }\n\n    .popup-menu {\n        position: static !important;\n        transform: none !important;\n        left: auto !important;\n        top: auto !important;\n        width: 100% !important;\n        height: 100% !important;\n        padding: 0rem !important;\n        margin: 0 !important;\n        border: none !important;\n        border-radius: 0 !important;\n        background: #00000045 !important;\n        backdrop-filter: blur(10px) !important;\n        display: flex !important;\n        align-items: center !important;\n        justify-content: center !important;\n    }\n}\n</style>\n\n<style scoped lang=\"scss\">\n@import '../../../styles/variables';\n\n.welcome-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    max-width: 500px;\n    margin: $spacing-xxl auto;\n    background: $gray-600;\n    color: $white;\n    padding: $spacing-xxl;\n    border-radius: $spacing-m;\n}\n\n.subtitle {\n    font-size: $fs-medium;\n    color: $gray-100;\n    line-height: 1.5;\n    margin: 0 0 $spacing-xxl 0;\n    font-weight: 400;\n    text-align: center;\n}\n\n.drop-zone {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    min-height: 200px;\n    border: 2px dashed $gray-500;\n    border-radius: $spacing-s;\n    background: rgba($gray-500, 0.2);\n    transition: all 0.3s ease;\n    padding: $spacing-xxl $spacing-xl;\n    text-align: center;\n\n    &.dragging {\n        border-color: $green;\n        background: rgba($green, 0.05);\n    }\n\n    h3 {\n        font-size: $fs-large;\n        font-weight: 500;\n        margin: 0 0 $spacing-xs 0;\n        color: $white;\n    }\n}\n\n.drop-icon {\n    margin-bottom: $spacing-l;\n    color: $gray-200;\n    padding: $spacing-xs;\n}\n\n.drop-text {\n    color: $gray-100;\n    margin: 0 0 $spacing-xl 0;\n    font-size: $fs-small;\n    max-width: 280px;\n}\n\n.or-divider {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    margin: $spacing-l 0;\n\n    &::before,\n    &::after {\n        content: '';\n        flex: 1;\n        height: 1px;\n        background: $gray-500;\n    }\n\n    span {\n        padding: 0 $spacing-l;\n        color: $gray-200;\n        font-size: $fs-small;\n        font-weight: 500;\n    }\n}\n\n.browse-button {\n    display: flex;\n    align-items: center;\n    gap: $spacing-xs;\n    background: $green;\n    color: $black;\n    border-radius: $spacing-s;\n    padding: $spacing-m $spacing-xl;\n    font-size: $fs-medium;\n    font-weight: 500;\n    transition: all 0.2s ease;\n    margin-bottom: $spacing-l;\n\n    &:hover {\n        background: rgba($green, 0.8);\n    }\n}\n\n.footer-links {\n    display: flex;\n    gap: $spacing-xl;\n    margin-top: $spacing-xl;\n    justify-content: center;\n}\n\n.footer-link {\n    display: flex;\n    align-items: center;\n    gap: $spacing-xs;\n    color: $gray-100;\n    text-decoration: none;\n    font-size: $fs-small;\n    font-weight: 500;\n    transition: all 0.2s ease;\n    padding: $spacing-xs $spacing-m;\n    border-radius: $spacing-xs;\n\n    &:hover {\n        color: $green;\n        background: rgba($green, 0.05);\n\n        svg {\n            opacity: 1;\n        }\n    }\n\n    svg {\n        opacity: 0.7;\n    }\n}\n\n@media (max-width: 768px) {\n    .welcome-container {\n        margin: $spacing-l;\n        padding: $spacing-xl;\n        max-width: none;\n    }\n\n    .subtitle {\n        font-size: $fs-small;\n    }\n\n    .drop-zone {\n        min-height: 180px;\n    }\n}\n</style>\n","import { render } from \"./WelcomeMenu.vue?vue&type=template&id=ad09295c&scoped=true\"\nimport script from \"./WelcomeMenu.vue?vue&type=script&lang=js\"\nexport * from \"./WelcomeMenu.vue?vue&type=script&lang=js\"\n\nimport \"./WelcomeMenu.vue?vue&type=style&index=0&id=ad09295c&lang=scss\"\nimport \"./WelcomeMenu.vue?vue&type=style&index=1&id=ad09295c&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ad09295c\"]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<template>\n    <div class=\"blur-panel\">\n        <slot />\n    </div>\n</template>\n\n<script>\nimport { computed, defineComponent } from 'vue';\n\nexport default defineComponent({\n    props: {\n        blur: {\n            type: Boolean,\n            default: true,\n        },\n    },\n    setup(props) {\n        const backgroundColor = computed(() => (props.blur ? '#{$gray-600}80' : null));\n        const backdropFilter = computed(() => (props.blur ? 'blur(10px)' : null));\n        const position = computed(() => (props.blur ? 'absolute' : null));\n        return { backgroundColor, backdropFilter, position };\n    },\n});\n</script>\n\n<style lang=\"scss\">\n.blur-panel {\n    background-color: v-bind('backgroundColor');\n    backdrop-filter: v-bind('backdropFilter');\n    position: v-bind('position');\n    padding: $spacing-l;\n    color: white;\n    left: 0%;\n    z-index: 10;\n    top: 0%;\n    width: 100%;\n    height: 100%;\n    min-height: fit-content;\n\n    & > .panel {\n        display: grid;\n        grid-row-gap: $spacing-l;\n        user-select: none;\n        right: 25%;\n        top: 25%;\n        width: 50%;\n        height: 50%;\n\n        & > div {\n            & > .option-label {\n                padding-bottom: $spacing-s;\n                color: $white;\n                font-size: $fs-medium;\n            }\n        }\n    }\n}\n</style>\n","import { render } from \"./Panel.vue?vue&type=template&id=3be1febc\"\nimport script from \"./Panel.vue?vue&type=script&lang=js\"\nexport * from \"./Panel.vue?vue&type=script&lang=js\"\n\nimport \"./Panel.vue?vue&type=style&index=0&id=3be1febc&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2025 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nThis component is used to return from subgraph (specifically for preview mode).\nIt emits 'click' event when the button is clicked.\n-->\n\n<template>\n    <div\n        role=\"button\"\n        class=\"return-control export-hidden\"\n        @pointerover=\"isHovered = true\"\n        @pointerleave=\"isHovered = false\"\n        @click=\"$emit('click')\"\n    >\n        <Arrow rotate=\"down\" :hover=\"isHovered\" color=\"white\" class=\"small_svg\" />\n    </div>\n</template>\n\n<script>\nimport Arrow from '../icons/Arrow.vue';\n\nexport default {\n    components: {\n        Arrow,\n    },\n\n    emits: ['click'],\n\n    data() {\n        return {\n            isHovered: false,\n        };\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.return-control {\n    width: 44px;\n    height: 44px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    background-color: $gray-600;\n    border: 1px solid $gray-500;\n    border-radius: 100%;\n    position: fixed;\n    left: 30px;\n    top: 30px;\n    z-index: 100;\n}\n</style>\n","import { render } from \"./Return.vue?vue&type=template&id=31c81a72&scoped=true\"\nimport script from \"./Return.vue?vue&type=script&lang=js\"\nexport * from \"./Return.vue?vue&type=script&lang=js\"\n\nimport \"./Return.vue?vue&type=style&index=0&id=31c81a72&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-31c81a72\"]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nSingle notification.\n-->\n\n<template>\n    <div :class=\"border\" class=\"notification-container\">\n        <div class=\"notification-badge\">\n            <NotificationBadge :type=\"type\" />\n        </div>\n        <div class=\"notification-message\">\n            <span v-if=\"type === 'info'\" :class=\"type\">Info</span>\n            <span v-if=\"type === 'warning'\" :class=\"type\">Warning</span>\n            <span v-if=\"type === 'error'\" :class=\"type\">Error</span>\n            <span class=\"message\">{{ message }}</span>\n        </div>\n        <button @click=\"remove\" tabindex=\"-1\"><Cross color=\"white\"  tabindex=\"-1\"/></button>\n    </div>\n</template>\n\n<script>\nimport Cross from '../icons/Cross.vue';\nimport NotificationBadge from './NotificationBadge.vue';\nimport { notificationStore } from '../core/stores';\n\nexport default {\n    components: {\n        Cross,\n        NotificationBadge,\n    },\n    props: {\n        message: {\n            type: String,\n            required: true,\n        },\n\n        type: {\n            type: String,\n            required: true,\n        },\n\n        border: {\n            type: String,\n            default: 'none',\n        },\n\n        index: {\n            type: Number,\n            default: 0,\n        },\n    },\n    data() {\n        return {\n            notificationStore,\n        };\n    },\n    methods: {\n        remove() {\n            notificationStore.removeOne(this.index);\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.notification-container {\n    display: flex;\n    align-items: center;\n    gap: $spacing-l;\n    /* This calculation need to\n     get width of space between paddings\n     in notification panel\n  */\n    height: 90px;\n    border-radius: 15px;\n    padding: $spacing-m;\n\n    &.border {\n        border: 1px solid $gray-200;\n    }\n\n    & > .notification-badge {\n        flex-basis: 35px;\n    }\n\n    & > .notification-message {\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        font-size: $fs-small;\n        min-width: 0;\n\n        & > .message {\n            overflow: hidden;\n            display: -webkit-box;\n            -webkit-line-clamp: 1;\n            -webkit-box-orient: vertical;\n        }\n\n        & > .info {\n            color: $green;\n        }\n\n        & > .warning {\n            color: $gold;\n        }\n\n        & > .error {\n            color: $red;\n        }\n\n        & > span:last-child {\n            color: $white;\n        }\n    }\n}\n</style>\n","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nBadge that is displayed next to the notification.\nCan be either an exclamation mark or an x mark\n-->\n\n<template>\n    <div :class=\"type\">\n        <ExclamationMark v-if=\"type === 'info'\" />\n        <ExclamationMark v-if=\"type === 'warning'\" rotate=\"flip\" />\n        <Cross v-if=\"type === 'error'\" color=\"white\" />\n    </div>\n</template>\n\n<script>\nimport ExclamationMark from '../icons/ExclamationMark.vue';\nimport Cross from '../icons/Cross.vue';\n\nexport default {\n    components: {\n        ExclamationMark,\n        Cross,\n    },\n    props: {\n        type: {\n            type: String,\n            required: true,\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\ndiv {\n    width: 35px;\n    height: 35px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.info {\n    background-color: $green;\n}\n\n.warning {\n    background-color: $gold;\n}\n\n.error {\n    background-color: $red;\n}\n</style>\n","import { render } from \"./NotificationBadge.vue?vue&type=template&id=9ef0f814&scoped=true\"\nimport script from \"./NotificationBadge.vue?vue&type=script&lang=js\"\nexport * from \"./NotificationBadge.vue?vue&type=script&lang=js\"\n\nimport \"./NotificationBadge.vue?vue&type=style&index=0&id=9ef0f814&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9ef0f814\"]])\n\nexport default __exports__","import { render } from \"./Notification.vue?vue&type=template&id=0512bfcb&scoped=true\"\nimport script from \"./Notification.vue?vue&type=script&lang=js\"\nexport * from \"./Notification.vue?vue&type=script&lang=js\"\n\nimport \"./Notification.vue?vue&type=style&index=0&id=0512bfcb&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0512bfcb\"]])\n\nexport default __exports__","import { computed, ref, defineComponent } from 'vue';\nimport { useGraph, useViewModel } from '@baklavajs/renderer-vue';\nimport useDragMove from '../custom/useDragMove';\nexport default defineComponent({\n    props: {\n        position: {\n            type: Object,\n            required: true,\n        },\n        rightclickCallback: {\n            required: true,\n            type: Function,\n        },\n    },\n    setup(props) {\n        // any definition is an ad-hoc solution as we don't have our graph definition\n        const { graph } = useGraph();\n        const { viewModel } = useViewModel();\n        const radius = 7.5;\n        const styles = computed(() => ({\n            cx: `${(props.position.x + graph.value.panning.x) * graph.value.scaling}px`,\n            cy: `${(props.position.y + graph.value.panning.y) * graph.value.scaling}px`,\n            r: `${radius * graph.value.scaling}px`,\n        }));\n        const dragMove = useDragMove(ref(props.position));\n        const stopDrag = () => {\n            dragMove.onPointerUp();\n            document.removeEventListener('pointermove', dragMove.onPointerMove);\n            document.removeEventListener('pointerup', stopDrag);\n        };\n        const startDrag = (ev) => {\n            if (viewModel.value.editor.readonly)\n                return;\n            dragMove.onPointerDown(ev);\n            document.addEventListener('pointermove', dragMove.onPointerMove);\n            document.addEventListener('pointerup', stopDrag);\n        };\n        return {\n            styles,\n            startDrag,\n        };\n    },\n});\n","import { render } from \"./Anchor.vue?vue&type=template&id=5f3d208c&ts=true\"\nimport script from \"./Anchor.vue?vue&type=script&lang=ts\"\nexport * from \"./Anchor.vue?vue&type=script&lang=ts\"\n\nimport \"./Anchor.vue?vue&type=style&index=0&id=5f3d208c&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n    return (_openBlock(), _createElementBlock(\"g\", {\n        onPointerdown: [\n            _cache[0] || (_cache[0] = _withModifiers(\n            //@ts-ignore\n            (...args) => (_ctx.startDrag && _ctx.startDrag(...args)), [\"left\"])),\n            _cache[1] || (_cache[1] = _withModifiers(\n            //@ts-ignore\n            (...args) => (_ctx.rightclickCallback && _ctx.rightclickCallback(...args)), [\"right\", \"exact\"]))\n        ],\n        class: \"anchor\"\n    }, [\n        _createElementVNode(\"circle\", {\n            style: _normalizeStyle(_ctx.styles)\n        }, null, 4)\n    ], 32));\n}\n","<!--\nCopyright (c) 2022-2025 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n<template>\n    <div\n        ref=\"root\"\n        class=\"__spec-editor-section\"\n        v-if=\"visible\"\n    >\n        <div class=\"__title\">Specification</div>\n        <div class=\"__spec-editor\">\n            <button\n                class=\"baklava-button __validate-button\"\n                :disabled=\"!canApplyChanges\"\n                @click=\"updateSpecification\"\n            >\n                Apply\n            </button>\n            <textarea\n                ref=\"el\"\n                v-model=\"currentSpecification\"\n                class=\"baklava-input __editor\"\n                spellcheck=\"false\"\n                @input=\"handleInput\"\n                @keydown.tab=\"handleTab\"\n            />\n            <p class=\"__validation_errors\">\n                <template v-if=\" cachedValidationResult.length > 0\">\n                    Problems:<br>\n                    <span\n                        v-for=\"(err, idx) in cachedValidationResult\"\n                        :key=\"idx\"\n                        style=\"color: var(--baklava-control-color-error);\"\n                    >\n                        {{ formatError(err) }}\n                    </span>\n                </template>\n                <template v-else>\n                    <span style=\"color: var(--baklava-control-color-primary);\">\n                        The specification is valid.\n                    </span>\n                </template>\n            </p>\n        </div>\n    </div>\n</template>\n\n<script>\nimport YAML from 'yaml';\nimport {\n    computed, defineComponent, nextTick, ref, toRef, watch, onMounted, onBeforeUnmount,\n} from 'vue';\nimport EditorManager, { EDITED_NODE_STYLE } from '../core/EditorManager';\nimport NotificationHandler from '../core/notifications';\nimport { menuState, configurationState } from '../core/nodeCreation/ConfigurationState.ts';\nimport { alterInterfaces, alterProperties, findNodes } from '../core/nodeCreation/Configuration.ts';\n\nexport default defineComponent({\n    props: {\n        node: {\n            required: true,\n            type: Object,\n        },\n        scrollHandle: {\n            required: false,\n            type: HTMLElement,\n        },\n    },\n    setup(props) {\n        // State\n\n        const editorManager = EditorManager.getEditorManagerInstance();\n        const node = toRef(props, 'node');\n        const root = ref(null);\n        const el = ref(null);\n\n        let typingTimer;\n        const validateAfterIdleFor = 500;\n\n        const maybeStringify = (maybeSpecification) => (maybeSpecification !== undefined\n            ? YAML.stringify(maybeSpecification)\n            : '');\n\n        const nodeMatchesSpec = (specNode) => {\n            const isCategory = specNode.isCategory ?? false;\n            const nodeType = node.value?.type;\n            const specNodeType = isCategory\n                ? specNode.category?.split('/').slice(-1)[0]\n                : specNode.name;\n            return nodeType === specNodeType;\n        };\n\n        const specificationWithIncludes = ref(null);\n        watch(\n            [() => editorManager.specification.unresolvedSpecification.nodes, node],\n            () => {\n                const unresolved = editorManager.specification.unresolvedSpecification;\n                const included = editorManager.specification.includedSpecification;\n                const specification = JSON.parse(JSON.stringify(unresolved));\n\n                EditorManager.mergeObjects(\n                    specification,\n                    included,\n                );\n                specificationWithIncludes.value = specification;\n            },\n            { immediate: true, deep: true },\n        );\n\n        const specification = computed(() => specificationWithIncludes\n            .value\n            ?.nodes\n            ?.find(nodeMatchesSpec));\n\n        // We modify this value in the editor, so it's not exactly computed\n        const currentSpecification = ref(maybeStringify(specification.value));\n        watch(specification, async () => {\n            currentSpecification.value =\n            editorManager.modifiedNodeSpecificationRegistry[node.value.id]\n            ?? maybeStringify(specification.value);\n        });\n\n        // Validation\n\n        /**\n         * Find duplicate values in an array of objects based on a specified property.\n         *\n         * @param {Array} array - The array of objects to search for duplicates.\n         * @param {string} propertyName - The property name to check for duplicate values.\n         * @returns {Array} An array containing the values of the specified property\n         *     that appear more than once.\n         */\n        const findDuplicates = (array, propertyName) => {\n            const nameCounter = new Map();\n            array.forEach((element) => {\n                let count = 1;\n                if (nameCounter.has(element[propertyName])) {\n                    count = nameCounter.get(element[propertyName]) + 1;\n                }\n                nameCounter.set(element[propertyName], count);\n            });\n\n            return Array.from(\n                nameCounter.entries(),\n            )\n                .filter(([_, count]) => count > 1)\n                .map(([name]) => name);\n        };\n\n        /**\n         * Validates the interfaces of a parsed node specification.\n         *\n         * This function ensures that there are no duplicate interface names.\n         *\n         * @param {Object} parsedSpecification - The parsed node specification object to validate.\n         * @throws {Error} Thrown if the validation failed.\n         */\n        const validateNodeInterfaces = (parsedSpecification) => {\n            if (!parsedSpecification?.interfaces) {\n                return;\n            }\n\n            const duplicates = findDuplicates(parsedSpecification.interfaces, 'name');\n            if (duplicates.length > 0) {\n                throw new Error(`Conflicting interface names: ${duplicates.join(', ')}`);\n            }\n        };\n\n        /**\n         * Validate a node specification.\n         *\n         * @param {Object} parsedSpecification - The node specification object to validate.\n         * @throws {Error} Throws an error containing validation errors if any are found.\n         */\n        const validateNode = (parsedSpecification) => {\n            const validationErrors = editorManager.validateNode(parsedSpecification);\n            if (validationErrors.length) {\n                throw new Error(validationErrors);\n            }\n        };\n\n        /**\n         * Validate the properties of a node.\n         *\n         * This function ensures that there are no duplicated properties names.\n         *\n         * @param {Object} parsedSpecification - The parsed node specification object to validate.\n         * @throws {Error} Raised if a validation failed.\n         */\n        const validateNodeProperties = (parsedSpecification) => {\n            if (!parsedSpecification?.properties) {\n                return;\n            }\n\n            const duplicates = findDuplicates(parsedSpecification.properties, 'name');\n            if (duplicates.length > 0) {\n                throw new Error(`Conflicting property names: ${duplicates.join(', ')}`);\n            }\n        };\n\n        /**\n         * Validate the style of a node.\n         *\n         * @param {Object} parsedSpecification - The parsed node specification object to validate.\n         * @throws {Error} Raised if a validation failed.\n         */\n        const validateNodeStyle = (parsedSpecification) => {\n            const validationErrors = editorManager.validateNodeStyle(parsedSpecification);\n            if (validationErrors.length) throw new Error(validationErrors);\n        };\n\n        const validate = () => {\n            const errors = [];\n            try {\n                const parsedCurrentSpecification = YAML.parse(currentSpecification.value.replaceAll('\\t', '  '));\n                const differingSpecifications =\n                    JSON.stringify(specification.value) !==\n                    JSON.stringify(parsedCurrentSpecification);\n\n                if (!differingSpecifications) {\n                    return []; // No changes, so no errors to show\n                }\n\n                try {\n                    validateNode(parsedCurrentSpecification);\n                } catch (e) { errors.push(e); }\n                try {\n                    validateNodeProperties(parsedCurrentSpecification);\n                } catch (e) { errors.push(e); }\n                try {\n                    validateNodeInterfaces(parsedCurrentSpecification);\n                } catch (e) { errors.push(e); }\n                try {\n                    validateNodeStyle(parsedCurrentSpecification);\n                } catch (e) { errors.push(e); }\n            } catch (error) {\n                errors.push(error);\n            }\n            return errors;\n        };\n\n        // Reference to cache validation results.\n        const cachedValidationResult = ref([]);\n        const updateCachedValidationResult = () => {\n            cachedValidationResult.value = validate();\n        };\n\n        const visible = computed(\n            () =>\n                specification.value && editorManager.baklavaView.settings.editableNodeTypes,\n        );\n\n        updateCachedValidationResult();\n\n        const updateSpecification = async () => {\n            try {\n                const parsingErrors = validate();\n                if (parsingErrors.length > 0) {\n                    throw new Error(parsingErrors);\n                }\n                const parsedSpecification = YAML.parse(currentSpecification.value.replaceAll('\\t', '  '));\n\n                // Update style of edited node type\n                const { style } = parsedSpecification;\n                if (!Array.isArray(style) || !style.includes(EDITED_NODE_STYLE)) {\n                    parsedSpecification.style = EditorManager.mergeStyles(style, EDITED_NODE_STYLE);\n                }\n\n                // Update all nodes of the type to match the new specification\n                const oldType = node.value.type;\n                const nodes = findNodes(oldType);\n\n                // Update each field if it is defined\n                /* eslint-disable no-param-reassign */\n                nodes.forEach((n) => {\n                    if (n.type === n.title) {\n                        n.title = EditorManager.getNodeName(parsedSpecification);\n                    } else {\n                        n.highlightedType = EditorManager.getNodeName(parsedSpecification);\n                    }\n                    n.type = EditorManager.getNodeName(parsedSpecification);\n\n                    Object.entries(parsedSpecification).forEach(([key, value]) => {\n                        if (value !== undefined && key !== 'name') {\n                            n[key] = value;\n                        }\n                    });\n                });\n\n                // Remove deleted interfaces and properties\n                // An interface was deleted if it's present in old resolved specification\n                // but not in the editor and is also not inherited.\n                let oldSpecification = editorManager.specification.currentSpecification\n                    .nodes?.find((n) => EditorManager.getNodeName(n) === oldType);\n\n                if (oldSpecification === undefined) {\n                    oldSpecification = editorManager.specification.currentSpecification\n                        .nodes?.find(nodeMatchesSpec);\n                }\n                if (oldSpecification === undefined) {\n                    oldSpecification = editorManager.specification.unresolvedSpecification\n                        .nodes?.find(nodeMatchesSpec);\n                }\n                if (oldSpecification === undefined) {\n                    oldSpecification = editorManager.specification.unresolvedSpecification\n                        .nodes?.find((n) => EditorManager.getNodeName(n) === oldType);\n                }\n\n                let oldProperties = oldSpecification.properties ?? [];\n                let oldInterfaces = oldSpecification.interfaces ?? [];\n\n                let inheritedProperties = [];\n                let inheritedInterfaces = [];\n\n                parsedSpecification?.extends?.forEach((parentType) => {\n                    const parentSpec = editorManager.baklavaView.editor.parentNodes.get(parentType);\n                    inheritedProperties = [\n                        ...inheritedProperties,\n                        ...(parentSpec?.properties ?? []),\n                    ];\n                    inheritedInterfaces = [\n                        ...inheritedInterfaces,\n                        ...(parentSpec?.interfaces ?? []),\n                    ];\n                });\n\n                oldProperties = oldProperties.filter(\n                    (prop) => !inheritedProperties.some((p) => p.name === prop.name),\n                );\n                oldInterfaces = oldInterfaces.filter(\n                    (intf) => !inheritedInterfaces.some((i) => i.name === intf.name),\n                );\n\n                // Deep copy properties from specification before altering nodes\n                const parsedProperties = structuredClone(parsedSpecification.properties ?? []);\n                const parsedInterfaces = structuredClone(parsedSpecification.interfaces ?? []);\n\n                const removedProperties = oldProperties.filter(\n                    (prop) => !parsedProperties.some((p) => p.name === prop.name),\n                ) ?? [];\n                const removedInterfaces = oldInterfaces.filter(\n                    (intf) => !parsedInterfaces.some((i) => i.name === intf.name),\n                ) ?? [];\n                const addedProperties = parsedProperties.filter(\n                    (prop) => !oldProperties.some((p) => p.name === prop.name),\n                ) ?? [];\n                const addedInterfaces = parsedInterfaces.filter(\n                    (intf) => !oldInterfaces.some((i) => i.name === intf.name),\n                ) ?? [];\n\n                const childNodes = findNodes(oldType, true) ?? [];\n\n                alterProperties([...nodes, ...childNodes], removedProperties, true);\n                alterInterfaces([...nodes, ...childNodes], removedInterfaces, true);\n                alterProperties([...nodes, ...childNodes], parsedProperties);\n                alterInterfaces([...nodes, ...childNodes], parsedInterfaces);\n\n                const resolvedChildNodes = editorManager.specification.currentSpecification.nodes\n                    .filter((n) => n.extends?.includes(oldType)) ?? [];\n\n                resolvedChildNodes.forEach((n) => {\n                    n.interfaces = n.interfaces?.filter(\n                        (intf) => !removedInterfaces.some((i) => i.name === intf.name),\n                    ) ?? [];\n                    n.properties = n.properties?.filter(\n                        (prop) => !removedProperties.some((p) => p.name === prop.name),\n                    ) ?? [];\n                    n.interfaces = [...n.interfaces, ...addedInterfaces];\n                    n.properties = [...n.properties, ...addedProperties];\n                });\n\n                // eslint-disable-next-line no-underscore-dangle\n                const errors = editorManager._unregisterNodeType(oldType);\n                if (errors.length) {\n                    NotificationHandler.terminalLog('error', 'Error when registering the node', errors);\n                    return;\n                }\n                // Add type to editor and specification\n                const ret = editorManager.addNodeToEditorSpecification(\n                    parsedSpecification,\n                    oldType,\n                );\n                if (ret.errors !== undefined && ret.errors.length) {\n                    throw new Error(ret.errors);\n                }\n\n                validateNodeStyle(parsedSpecification);\n                validateNodeInterfaces(parsedSpecification);\n                validateNodeProperties(parsedSpecification);\n                validateNode(parsedSpecification);\n\n                const validationErrors =\n                    EditorManager\n                        .validateSpecification(\n                            editorManager.specification.unresolvedSpecification,\n                        );\n                if (validationErrors.length) {\n                    throw new Error(validationErrors);\n                }\n\n                currentSpecification.value = YAML.stringify(parsedSpecification);\n                editorManager.modifiedNodeSpecificationRegistry[node.value.id] =\n                    currentSpecification.value;\n\n                NotificationHandler.showToast('info', 'Node validated');\n            } catch (error) {\n                const messages = Array.isArray(error) ? error : [error];\n                NotificationHandler.terminalLog('error', 'Validation failed', messages);\n            }\n        };\n\n        /**\n         * Determines whether the node specification changes can be applied.\n         *\n         * Compares the current YAML specification with the original,\n         * and checks for the absence of validation errors in the UI.\n         * Utilizes caching to prevent redundant computations if\n         * the specification remains unchanged.\n         *\n         * @returns {boolean} `true` if the specification has been modified\n         *   and there are no validation errors. Otherwise, `false`.\n         * @throws {Error} If parsing the YAML fails.\n         */\n        const canApplyChanges = computed(() => {\n            try {\n                const parsedCurrentSpecification = YAML.parse(\n                    currentSpecification.value.replaceAll('\\t', '  '),\n                );\n                const differingSpecifications =\n                    JSON.stringify(\n                        specification.value,\n                    ) !==\n                    JSON.stringify(\n                        parsedCurrentSpecification,\n                    );\n\n                if (!differingSpecifications) {\n                    return false;\n                }\n\n                const parsedSpecForValidation = YAML.parse(currentSpecification.value.replaceAll('\\t', '  '));\n                validateNode(parsedSpecForValidation);\n                validateNodeProperties(parsedSpecForValidation);\n                validateNodeInterfaces(parsedSpecForValidation);\n\n                return true;\n            } catch (error) {\n                return false;\n            }\n        });\n\n        /**\n         * Format an error message into an HTML element.\n         *\n         * @param {string|Error} error - The error object or message to format.\n         * @returns {string} The formatted error message.\n         */\n        const formatError = (error) => {\n            let errorMessage = (error && error.message) ? error.message : String(error);\n            errorMessage = errorMessage.replace(/^\\s*unresolved_specification\\//, '');\n            try {\n                // If the error message contains a stringified array, extract and format it.\n                const match = errorMessage.match(/\\[.*\\]/);\n                if (match) {\n                    const arr = JSON.parse(match[0]);\n                    if (Array.isArray(arr)) {\n                        errorMessage = errorMessage.replace(match[0], arr.join(', '));\n                    }\n                }\n            } catch (e) {\n                // Not a JSON array, leave as it is.\n            }\n            return errorMessage;\n        };\n\n        /**\n         * Set up a debounced event listener to validate a specification.\n         *\n         * Removes any existing 'keyup' event listener for live validation,\n         * then attaches a new listener that waits for the user to stop typing\n         * for a specified duration (`validateAfterIdleFor`) before triggering\n         * the validation status display (`updateCachedValidationResult`).\n         *\n         * @returns {void}\n         */\n        const validateIfTypingCompleted = () => {\n            if (!el.value) {\n                return;\n            }\n            el.value.removeEventListener('keyup', el.value.liveValidateListener);\n            el.value.liveValidateListener = () => {\n                clearTimeout(typingTimer);\n                typingTimer = setTimeout(updateCachedValidationResult, validateAfterIdleFor);\n            };\n            el.value.addEventListener('keyup', el.value.liveValidateListener);\n        };\n\n        // Editor height\n\n        const handleInput = () => {\n            if (!visible.value) { return; }\n            const { scrollHandle } = props;\n            let prevParentScrollHeight;\n            if (props.scrollHandle) {\n                prevParentScrollHeight = scrollHandle.scrollTop;\n            }\n\n            // Setting the height to 'auto' first allows the element\n            // to shrink if the content has decreased.\n            // Then, setting it to the scrollHeight of the element (in pixels)\n            // resizes the element to fit its content exactly.\n            el.value.style.height = 'auto';\n            el.value.style.height = `${el.value.scrollHeight}px`;\n\n            if (scrollHandle !== undefined && scrollHandle.scrollTop < prevParentScrollHeight) {\n                scrollHandle.scrollTop = prevParentScrollHeight;\n            }\n\n            editorManager.modifiedNodeSpecificationRegistry[node.value.id] =\n                currentSpecification.value;\n            validateIfTypingCompleted();\n        };\n\n        const delayedEditorUpdate = () => nextTick().then(handleInput);\n\n        watch(currentSpecification, delayedEditorUpdate);\n        watch(visible, delayedEditorUpdate);\n        delayedEditorUpdate();\n\n        // We modify this value in the editor, so it's not exactly computed\n        watch(specification, async () => {\n            currentSpecification.value =\n                editorManager.modifiedNodeSpecificationRegistry[node.value.id]\n                ?? maybeStringify(specification.value);\n        });\n\n        const handleUIUpdate = () => {\n            if (menuState.configurationMenu.addNode) return;\n            node.value.type = configurationState.nodeData.name;\n            const newSpecification = editorManager.specification.unresolvedSpecification\n                ?.nodes\n                ?.find(nodeMatchesSpec);\n            specification.value = newSpecification;\n            currentSpecification.value = maybeStringify(newSpecification);\n            editorManager.modifiedNodeSpecificationRegistry[node.value.id] =\n                currentSpecification.value;\n        };\n\n        watch(menuState, () => nextTick().then(handleUIUpdate));\n\n        onMounted(() => {\n            document.addEventListener('click', updateCachedValidationResult);\n            nextTick(() => {\n                handleInput();\n                // Resize the YAML editor after DOM is loaded.\n                setTimeout(() => {\n                    handleInput();\n                }, 10);\n            });\n        });\n\n        onBeforeUnmount(() => {\n            document.removeEventListener('click', updateCachedValidationResult);\n        });\n\n        // Editing\n\n        const handleTab = async (event) => {\n            event.preventDefault();\n            document.execCommand('insertText', false, '\\t');\n        };\n\n        return {\n            el,\n            root,\n            handleInput,\n            currentSpecification,\n            specification,\n            validate,\n            updateSpecification,\n            canApplyChanges,\n            visible,\n            handleTab,\n            formatError,\n            cachedValidationResult,\n        };\n    },\n});\n</script>\n\n<style scoped>\n    __validation_errors {\n        max-width: 100%;\n    }\n</style>\n","import { render } from \"./NodeSpecificationEditor.vue?vue&type=template&id=e440346e&scoped=true\"\nimport script from \"./NodeSpecificationEditor.vue?vue&type=script&lang=js\"\nexport * from \"./NodeSpecificationEditor.vue?vue&type=script&lang=js\"\n\nimport \"./NodeSpecificationEditor.vue?vue&type=style&index=0&id=e440346e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e440346e\"]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nThe entrypoint of the application.\n-->\n\n<template>\n    <div>\n        <LoadingScreen v-if=\"loading\" />\n        <div id=\"container\">\n            <NavBar />\n            <Editor\n                class=\"inner-editor\"\n                :view-model=\"editorManager.baklavaView\"\n                @setLoad=\"handleLoad\"\n                :loading=\"loading\"\n            />\n            <TerminalPanel v-show=\"(!loading && !hideHud) || terminalStore.show\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue';\nimport NavBar from './NavBar.vue';\nimport EditorManager from '../core/EditorManager.js';\nimport TerminalPanel from './TerminalPanel.vue';\nimport LoadingScreen from './LoadingScreen.vue';\nimport Editor from '../custom/Editor.vue';\nimport '@baklavajs/themes/dist/classic.css';\nimport { terminalStore } from '../core/stores.js';\n\nexport default {\n    components: {\n        NavBar,\n        Editor,\n        TerminalPanel,\n        LoadingScreen,\n    },\n    setup() {\n        const editorManager = EditorManager.getEditorManagerInstance();\n        const loading = ref(false);\n\n        const cache = {};\n        // Importing all assets to a cache so that they can be accessed dynamically during runtime\n        function importAll(r) {\n            r.keys().forEach((key) => (cache[key] = r(key))); // eslint-disable-line no-return-assign,max-len\n        }\n        try {\n            importAll(require.context('../../assets', true, /\\.(svg|png|jpg|jpeg|gif|webp|avif)$/));\n        } catch (e) {\n            // assets directory not found\n        } finally {\n            editorManager.baklavaView.cache = cache;\n        }\n\n        const hideHud = computed(() => editorManager.baklavaView.editor.hideHud);\n\n        const handleLoad = (value) => {\n            loading.value = value;\n        };\n\n        return {\n            editorManager,\n            hideHud,\n            handleLoad,\n            loading,\n            terminalStore,\n        };\n    },\n};\n</script>\n\n<style lang=\"scss\">\n</style>\n","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nNavigation bar of the application.\nDisplays user interface and main details about the Pipeline Manager status.\n-->\n\n<script>\nimport {\n    markRaw, ref, provide, watch,\n} from 'vue';\nimport { toSvg } from 'html-to-image';\nimport jsonlint from 'jsonlint';\nimport { useViewModel } from '@baklavajs/renderer-vue';\nimport { api as fullscreen } from 'vue-fullscreen';\nimport Logo from '../icons/Logo.vue';\nimport Arrow from '../icons/Arrow.vue';\nimport Expand from '../icons/Expand.vue';\nimport Collapse from '../icons/Collapse.vue';\nimport Run from '../icons/Run.vue';\nimport Validate from '../icons/Validate.vue';\nimport Backend from '../icons/Backend.vue';\nimport Bell from '../icons/Bell.vue';\nimport Cube from '../icons/Cube.vue';\nimport CassetteStop from '../icons/CassetteStop.vue';\nimport DropdownItem from './DropdownItem.vue';\nimport Cogwheel from '../icons/Cogwheel.vue';\nimport Magnifier from '../icons/Magnifier.vue';\nimport EditorManager from '../core/EditorManager';\nimport NotificationHandler from '../core/notifications';\nimport { notificationStore } from '../core/stores';\nimport runInfo from '../core/communication/runInformation';\nimport getExternalApplicationManager from '../core/communication/ExternalApplicationManager';\nimport { GraphFactory } from '../core/NodeFactory.js';\nimport Notifications from './Notifications.vue';\nimport Settings from './Settings.vue';\nimport {\n    ParentMenu, SaveMenu, ExportMenu, NodeConfigurationMenu, PropertyConfigurationMenu,\n    InterfaceConfigurationMenu, LayerConfigurationMenu, ListMenu,\n} from './menu';\nimport { menuState, configurationState } from '../core/nodeCreation/ConfigurationState.ts';\nimport { removeInterfaces, removeProperties } from '../core/nodeCreation/Configuration.ts';\nimport Panel from './Panel.vue';\nimport CustomSidebar from '../custom/CustomSidebar.vue';\nimport { saveSpecificationConfiguration, saveGraphConfiguration, exportGraph } from './saveConfiguration.ts';\n\nimport icons from '../icons';\n\nimport InputInterface from '../interfaces/InputInterface.js';\nimport { brokenImage } from '../../../resources/broken_image.js';\nimport {\n    startTransaction, commitTransaction,\n} from '../core/History.ts';\n\n/* eslint-disable no-param-reassign */\nexport default {\n    components: {\n        Logo,\n        Arrow,\n        Run,\n        CassetteStop,\n        Validate,\n        Backend,\n        Bell,\n        DropdownItem,\n        Expand,\n        Collapse,\n        Notifications,\n        Magnifier,\n        Cogwheel,\n        Settings,\n        Cube,\n        ParentMenu,\n        SaveMenu,\n        ExportMenu,\n        NodeConfigurationMenu,\n        PropertyConfigurationMenu,\n        InterfaceConfigurationMenu,\n        Panel,\n        CustomSidebar,\n        LayerConfigurationMenu,\n        ListMenu,\n    },\n    computed: {\n        dataflowGraphName() {\n            return this.editorManager.editor.graphName;\n        },\n        graphId() {\n            return this.editorManager.baklavaView.displayedGraph.id;\n        },\n        editorTitle() {\n            if (this.graphName === undefined) {\n                return this.appName;\n            }\n            const normalizedGraphName = this.graphName.trim();\n            return normalizedGraphName === '' ? this.appName : normalizedGraphName;\n        },\n        preview() {\n            const urlParams = new URLSearchParams(window.location.search);\n            if (urlParams.has('preview')) {\n                return urlParams.get('preview') === 'true';\n            }\n            return false;\n        },\n        hideHud() {\n            return this.editorManager.editor.hideHud;\n        },\n        readonly() {\n            return this.editorManager.editor.readonly;\n        },\n        settingsOpen() {\n            return this.panels.settings.isOpen;\n        },\n        notificationsOpen() {\n            return this.panels.notifications.isOpen;\n        },\n        paletteOpen() {\n            return this.panels.palette.isOpen;\n        },\n        externalAppStatus() {\n            return this.panels.externalAppStatus.isOpen;\n        },\n        navbarItems() {\n            const { navbarItems } = this.editorManager.baklavaView;\n            navbarItems.forEach((item) => {\n                // If there is no such icon then assets are checked and used as a fallback\n                if (icons[item.iconName] === undefined) {\n                    item.icon = markRaw(icons.Placeholder);\n                    item.iconName = this.editorManager.baklavaView.cache[`./${item.iconName}`];\n                } else {\n                    item.icon = markRaw(icons[item.iconName]);\n                }\n            });\n            return navbarItems;\n        },\n        leftButtonsQuantity() {\n            return this.$refs.leftButtons.children.length;\n        },\n        rightButtonsQuantity() {\n            return this.$refs.rightButtons.children.length;\n        },\n        isNavBarCompressed() {\n            return (\n                this.isMounted &&\n                this.windowWidth <\n                (this.leftButtonsQuantity + this.rightButtonsQuantity) * this.buttonWidth\n                + this.searchbarWidthMultiplcity * this.buttonWidth // searchbar width\n                + 0.5 * this.buttonWidth // offset\n            );\n        },\n        mobileClasses() {\n            return { 'compressed-mobile': this.isNavBarCompressed };\n        },\n        nodesearchInputStyles() {\n            return {\n                width: `${this.searchbarWidthMultiplcity * this.buttonWidth}px`,\n            };\n        },\n        leftContainerStyles() {\n            if (this.isNavBarCompressed) {\n                return { 'flex-grow': this.leftButtonsQuantity };\n            }\n            return {};\n        },\n        rightContainerStyles() {\n            if (this.isNavBarCompressed) {\n                return {\n                    'flex-grow': this.rightButtonsQuantity,\n                    'justify-content': 'right',\n                };\n            }\n            return { 'justify-content': 'right' };\n        },\n        activeNavbarItems() {\n            return this.activeNavbarItemsNames;\n        },\n    },\n    watch: {\n        dataflowGraphName(newValue) {\n            this.graphName = newValue;\n\n            // Resetting the save configurations\n            saveSpecificationConfiguration.reset();\n            saveGraphConfiguration.reset();\n        },\n        graphName(newValue) {\n            this.editorManager.updateSubgraphName(newValue);\n\n            // Resetting the save configurations\n            saveSpecificationConfiguration.reset();\n            saveGraphConfiguration.reset();\n        },\n        searchEditorNodesQuery(newValue) {\n            const { viewModel } = useViewModel();\n            if (newValue === '') {\n                viewModel.value.editor.searchQuery = undefined;\n                return;\n            }\n            viewModel.value.editor.searchQuery = newValue.toLowerCase();\n        },\n        navbarItems(newValue) {\n            // Setup initial navbarItems\n            this.activeNavbarItemsNames = newValue.map((item) => item.procedureName);\n        },\n    },\n    data() {\n        const editorManager = EditorManager.getEditorManagerInstance();\n        const graphName = editorManager.baklavaView.editor.graphName ?? '';\n        const appName = process.env.VUE_APP_EDITOR_TITLE ?? 'Pipeline Manager';\n\n        const editorTitleInterface = new InputInterface(\n            'Graph name',\n            '',\n        );\n        editorTitleInterface.setDefaultComponent();\n\n        const searchEditorNodesQuery = ref('');\n        // Setup custom hook, which is executed when procedure starts or stops running\n        runInfo.setHook(this.updateActiveNavbarItems);\n\n        // Mock hoveredOver to suppress warning when creating Side Panel\n        // hoveredOver over is needed only for temporary connections, which are not used here\n        provide('hoveredOver', () => {});\n\n        return {\n            appName,\n            graphName,\n            editorManager,\n            editorTitleInterface,\n            /* Object used to pass information to ParentMenu component about\n                saving configuration. If any option is set to undefined then\n                it will be not displayed in the ParentMenu.\n            */\n            menuState,\n            configurationState,\n            removeInterfaces,\n            removeProperties,\n            /* create instance of external manager to control\n            connection, dataflow and specification\n            */\n            externalApplicationManager: getExternalApplicationManager(),\n            externalApp: {\n                available: false,\n                connected: false,\n            },\n            activeNavbarItemsNames: [],\n            saveConfiguration: saveGraphConfiguration,\n            saveGraphConfiguration,\n            saveSpecificationConfiguration,\n            exportGraph,\n            saveMenuShow: false,\n            exportMenuShow: false,\n            editTitle: false,\n            notificationStore,\n            showSearch: false,\n            crossIcon: markRaw(icons.Cross),\n            searchEditorNodesQuery,\n            navbarGuard: false,\n            isMounted: false,\n            windowWidth: 0,\n            buttonWidth: 0,\n            searchbarWidthMultiplcity: 4,\n            hoverInfo: {\n                isHovered: false,\n                hoveredPanel: undefined,\n            },\n            // Toggleable panels and their configuration\n            panels: {\n                notifications: {\n                    isOpen: false,\n                    class: '.notifications',\n                    iconRef: 'notifications',\n                    showTransform: '-495px, 0px',\n                    hideTransform: '0px, 0px',\n                },\n                palette: {\n                    isOpen: !this.$isMobile,\n                    class: '.baklava-node-palette',\n                    iconRef: 'palette',\n                    showTransform: '0px, 0px',\n                    hideTransform: '-450px, 0px',\n                },\n                externalAppStatus: {\n                    isOpen: false,\n                    class: '.external-app-status',\n                    iconRef: 'backend',\n                    showTransform: '-89%, 0px',\n                    hideTransform: '-89%, -180px',\n                },\n                settings: {\n                    isOpen: false,\n                    class: '.settings-panel',\n                    iconRef: 'settings',\n                    showTransform: '-495px, 0px',\n                    hideTransform: '0px, 0px',\n                },\n                nodesearch: {\n                    isOpen: false,\n                },\n                fullscreen: {\n                    isOpen: fullscreen.isFullscreen,\n                },\n            },\n        };\n    },\n    methods: {\n        /**\n         * Loads nodes' specification from text structure.\n         * It first validates the specification file. If the validation is successful the\n         * specification is loaded. Otherwise a proper log is printed to the user.\n         *\n         * @param {string} specText specification to validate and load.\n         * @returns {Promise} result after validation and loading.\n         */\n        async loadSpecification(specText) {\n            const validationErrors = EditorManager.validateSpecification(specText);\n            if (Array.isArray(validationErrors) && validationErrors.length) {\n                NotificationHandler.terminalLog('error', 'Specification is invalid', validationErrors);\n                const { version } = JSON.parse(specText);\n                if (this.editorManager.specificationVersion !== version) {\n                    NotificationHandler.terminalLog(\n                        'error',\n                        'Mismatched specification version',\n                        `Specification version (${version}) differs from the current version (${this.editorManager.specificationVersion}). It may result in unexpected behaviour.` +\n                        ' Please refer to https://antmicro.github.io/kenning-pipeline-manager/changelogs.html to see if that is the case.',\n                    );\n                }\n                return Promise.resolve();\n            }\n            return this.editorManager.updateEditorSpecification(specText)\n                .then(({ errors, warnings, info }) => {\n                    if (Array.isArray(warnings) && warnings.length) {\n                        NotificationHandler.terminalLog(\n                            'warning',\n                            'Issue when loading specification',\n                            warnings,\n                        );\n                    }\n                    if (Array.isArray(errors) && errors.length) {\n                        NotificationHandler.terminalLog('error', 'Specification is invalid', errors);\n                        if (Array.isArray(info) && info.length) {\n                            NotificationHandler.terminalLog(\n                                'error',\n                                'Mismatched specification version',\n                                `${info} Please refer to https://antmicro.github.io/kenning-pipeline-manager/changelogs.html to see if that is the case.`,\n                            );\n                        }\n                    } else if (Array.isArray(info) && info.length) {\n                        NotificationHandler.terminalLog('info', 'Specification loaded', info);\n                    }\n                });\n        },\n\n        createNewGraphCallback() {\n            startTransaction();\n            this.editorManager.editor.deepCleanEditor(false);\n            commitTransaction();\n        },\n\n        /**\n         * Event handler that loads a specification passed by the user\n         * and tries to load it into a new environment it.\n         */\n        loadSpecificationCallback() {\n            const file = document.getElementById('load-spec-button').files[0];\n            if (!file) return;\n\n            this.editorManager.baklavaView.editor.events.setLoad.emit(true);\n            const resolve = () => this.editorManager.baklavaView.editor.events.setLoad.emit(false);\n\n            const fileReader = new FileReader();\n\n            fileReader.onload = () => {\n                this.loadSpecification(fileReader.result).then(resolve);\n            };\n\n            fileReader.readAsText(file);\n            document.getElementById('load-spec-button').value = '';\n        },\n\n        togglePanel(panel, disable = false) {\n            const panelSelector = document.querySelector(panel.class);\n            const iconRef = this.$refs[panel.iconRef];\n\n            if (disable) {\n                panel.isOpen = false;\n            } else {\n                panel.isOpen = !panel.isOpen;\n            }\n            const isPanelOpen = panel.isOpen;\n\n            if (panelSelector) {\n                panelSelector.style.transition = `transform ${isPanelOpen ? '0.4' : '0.2'}s`;\n                panelSelector.style.transform = `translate(${\n                    isPanelOpen ? panel.showTransform : panel.hideTransform\n                })`;\n\n                iconRef.classList.toggle('open', isPanelOpen);\n            }\n        },\n\n        /**\n         * Toggle fullscreen mode.\n         *\n         * For iframe, the allow=\"fullscreen\" attribute must be set.\n         */\n        toggleFullscreen() {\n            if (!fullscreen.isEnabled) {\n                NotificationHandler.showToast('error', 'Fullscreen is not supported');\n                return;\n            }\n            fullscreen.toggle();\n        },\n\n        clickOutside(event, panel) {\n            const icon = this.$refs[panel.iconRef];\n            if (!icon) return;\n\n            const currentElement = event.target;\n            if (currentElement instanceof Node && (icon.contains(currentElement)\n                                                   || icon === currentElement)) {\n                return;\n            }\n\n            this.togglePanel(panel, true);\n        },\n\n        setEditTitle() {\n            if (this.readonly) return;\n            this.editTitle = true;\n            this.$nextTick(() => this.$refs.editorTitleInput._.refs.el.focus());\n        },\n\n        /**\n         * Loads nodes' specification from JSON structure.\n         *\n         * @param {string} specText specification to validate and load.\n         * @returns {Promise} result after validation and loading.\n         */\n        async loadDataflow(dataflow) {\n            return this.editorManager.loadDataflow(dataflow).then(({ errors, warnings, info }) => {\n                if (Array.isArray(warnings) && warnings.length) {\n                    NotificationHandler.terminalLog(\n                        'warning',\n                        'Issue when loading dataflow',\n                        warnings,\n                    );\n                }\n                if (Array.isArray(errors) && errors.length) {\n                    const messageTitle = process.env.VUE_APP_GRAPH_DEVELOPMENT_MODE === 'true' ?\n                        'Softload enabled, errors found while loading the dataflow' :\n                        'Dataflow is invalid';\n                    NotificationHandler.terminalLog('error', messageTitle, errors);\n                    if (Array.isArray(info) && info.length) {\n                        NotificationHandler.terminalLog(\n                            'error',\n                            'Mismatched dataflow version',\n                            `${info} Please refer to https://antmicro.github.io/kenning-pipeline-manager/changelogs.html to see if that is the case.`,\n                        );\n                    }\n                } else if (Array.isArray(info) && info.length) {\n                    NotificationHandler.terminalLog('info', 'Dataflow loaded', info);\n                }\n            });\n        },\n        /**\n         * Event handler that Loads a dataflow from a file.\n         * It the loading is successful it is loaded as the current dataflow.\n         * Otherwise the user is alerted with a feedback message.\n         */\n        loadDataflowCallback() {\n            const file = document.getElementById('load-dataflow-button').files[0];\n            if (!file) return;\n\n            this.editorManager.baklavaView.editor.events.setLoad.emit(true);\n            const resolve = () => this.editorManager.baklavaView.editor.events.setLoad.emit(false);\n\n            const fileReader = new FileReader();\n\n            fileReader.onload = async () => {\n                let dataflow = null;\n                try {\n                    dataflow = jsonlint.parse(fileReader.result);\n                } catch (exception) {\n                    if (exception instanceof SyntaxError) {\n                        NotificationHandler.terminalLog(\n                            'error',\n                            'Not a proper JSON file',\n                            exception.toString(),\n                        );\n                    } else {\n                        NotificationHandler.terminalLog(\n                            'error',\n                            'Unknown error',\n                            exception.toString(),\n                        );\n                    }\n                    resolve();\n                    return;\n                }\n\n                await this.externalApplicationManager.notifyAboutChange('graph_on_change', {\n                    dataflow,\n                });\n\n                this.loadDataflow(dataflow).then(resolve);\n            };\n\n            fileReader.readAsText(file);\n            document.getElementById('load-dataflow-button').value = '';\n        },\n\n        async requestDataflowAction(actionItem) {\n            if (!this.externalApp.available) return;\n            if (\n                this.isInProgress(actionItem.procedureName) &&\n                this.isStoppable(actionItem.procedureName)\n            ) {\n                await this.externalApplicationManager.requestDataflowStop(actionItem.procedureName);\n                return;\n            }\n            const activeAction = this.activeNavbarItemsNames.includes(actionItem.procedureName);\n            if (activeAction && !this.isInProgress(actionItem.procedureName)) {\n                await this.externalApplicationManager.requestDataflowAction(\n                    actionItem.procedureName,\n                    actionItem.requireResponse,\n                );\n            } else if (activeAction) {\n                NotificationHandler.terminalLog('warning', `${actionItem.name} cannot be stopped`);\n            }\n        },\n\n        async requestDataflowExport(prompt = true) {\n            if (!this.externalApp.available) return;\n            const result = await this.externalApplicationManager.requestDataflowExport();\n\n            if (result !== false) {\n                // Copy the saveConfiguration object to prevent changing the original object\n                this.saveConfiguration = { ...saveGraphConfiguration };\n                this.saveConfiguration.saveName = (\n                    result.filename ?? saveGraphConfiguration.saveName);\n                if (prompt) {\n                    this.saveConfiguration.readonly = undefined;\n                    this.saveConfiguration.hideHud = undefined;\n                    this.saveConfiguration.position = undefined;\n                    this.saveConfiguration.saveCallback =\n                        () => {\n                            this.saveConfiguration.saveCallbackCustomFormat(\n                                result.content,\n                            );\n                            this.saveConfiguration = saveGraphConfiguration;\n                        };\n                    this.saveMenuShow = true;\n                } else {\n                    this.saveConfiguration.saveCallbackCustomFormat(\n                        result.content,\n                    );\n                }\n            }\n        },\n\n        importDataflow() {\n            if (!this.externalApp.available) return;\n            const file = document.getElementById('request-dataflow-button').files[0];\n            if (!file) return;\n\n            const fileReader = new FileReader();\n            fileReader.onload = async () => {\n                await this.externalApplicationManager.importDataflow(fileReader.result);\n            };\n            fileReader.readAsText(file);\n        },\n\n        exportToSvg() {\n            // Get editor with data flow\n            const nodeEditor = document.querySelector('.inner-editor');\n            // Exclude nodes hidden in export (e.g. node palette and zoom controls)\n            const filter = (node) => !node.classList?.contains('export-hidden');\n            toSvg(nodeEditor, { filter, imagePlaceholder: brokenImage })\n                .then((dataUrl) => {\n                    const downloadLink = document.createElement('a');\n                    downloadLink.download = 'dataflow.svg';\n                    downloadLink.href = dataUrl;\n                    downloadLink.dataset.downloadurl = [\n                        dataUrl,\n                        downloadLink.download,\n                        downloadLink.href,\n                    ].join(':');\n                    document.body.appendChild(downloadLink);\n                    downloadLink.click();\n                    document.body.removeChild(downloadLink);\n                })\n                .catch((error) => {\n                    NotificationHandler.showToast('error', `Export to SVG failed: ${error}`);\n                });\n        },\n\n        createGraphNodeTypeFromCurrentGraph() {\n            menuState.configurationMenu.visible = !menuState.configurationMenu.visible;\n            menuState.configurationMenu.addNode = true;\n            menuState.configurationMenu.placeNode = false;\n\n            watch(() => menuState.configurationMenu.visible, async (newValue, oldValue) => {\n                if (oldValue === true && newValue === false) {\n                    const nodeName = configurationState.nodeData.name;\n                    let graphNode = this.editorManager.baklavaView.editor.nodeTypes.get(nodeName);\n                    let instance = new graphNode.type(); // eslint-disable-line new-cap\n\n                    if (configurationState.success) {\n                        // Save current graph\n                        const currentGraph = this.editorManager.baklavaView.displayedGraph;\n                        const currentGraphState = currentGraph.save();\n\n                        const errors = this.editorManager.addSubgraphToNode(\n                            instance,\n                            currentGraphState.nodes,\n                            currentGraphState.connections,\n                        );\n                        if (Array.isArray(errors) && errors.length) {\n                            NotificationHandler.terminalLog('error', 'Creating subgraph failed', errors);\n                        }\n\n                        // Switch to new graph and add new node there\n                        const newGraph = GraphFactory(\n                            [], [], this.appName, this.editorManager.baklavaView.editor,\n                        );\n                        this.editorManager.baklavaView.editor.switchToGraph(newGraph);\n\n                        graphNode = this.editorManager.baklavaView.editor.nodeTypes.get(nodeName);\n                        instance = new graphNode.type(); // eslint-disable-line new-cap\n                        this.editorManager.baklavaView.displayedGraph.addNode(instance);\n                        instance.position.x = window.innerWidth / 2;\n                        instance.position.y = window.innerHeight / 2;\n\n                        this.editorManager.baklavaView.editor.changeTopLevelGraph(\n                            this.editorManager.baklavaView.displayedGraph.id,\n                        );\n                    }\n                }\n            });\n        },\n\n        onClickNodeSearch() {\n            this.togglePanel(this.panels.nodesearch);\n            if (this.panels.nodesearch.isOpen) {\n                this.$nextTick(() => this.$refs.searchbarInput.focus());\n            }\n        },\n\n        openNavbar() {\n            this.navbarGuard = true;\n            this.$refs.navbar.classList.add('isHovered');\n        },\n\n        handleMouseLeave(ev) {\n            if (!this.$refs.navbar.classList.contains('isHovered')) return;\n            // check if event targets UI, if not hide NavBar\n            if (\n                (this.hideHud || this.$isMobile) &&\n                !this.editorManager.baklavaView.displayedGraph.sidebar.visible &&\n                !ev.target.closest('.baklava-node-palette')) {\n                // Ignore first event to prevent NavBar from hiding when side bar is opened\n                if (this.navbarGuard) {\n                    this.navbarGuard = false;\n                } else {\n                    this.togglePanel(this.panels.palette, true);\n                    this.$refs.navbar.classList.remove('isHovered');\n                }\n            }\n        },\n\n        updateHoverInfo(name, isRunnable = false) {\n            if (!isRunnable || this.activeNavbarItemsNames.includes(name) ||\n                this.isInProgress(name)) {\n                this.hoverInfo.hoveredPanel = name;\n                this.hoverInfo.isHovered = true;\n            }\n        },\n\n        resetHoverInfo(name) {\n            if (this.hoverInfo.hoveredPanel === name) {\n                this.hoverInfo.hoveredPanel = undefined;\n                this.hoverInfo.isHovered = false;\n            }\n        },\n        isHovered(name) {\n            return this.hoverInfo.hoveredPanel === name && this.hoverInfo.isHovered;\n        },\n\n        isInProgress(procedure) {\n            return runInfo.get(procedure).inProgress;\n        },\n\n        isStoppable(procedure) {\n            return this.externalApplicationManager\n                .appCapabilities.stoppable_methods?.includes(procedure) ?? true;\n        },\n\n        getNavbarActionTooltip(actionItem) {\n            if (\n                this.isStoppable(actionItem.procedureName) &&\n                this.isInProgress(actionItem.procedureName)\n            ) {\n                if (actionItem.stopName !== undefined) return actionItem.stopName;\n                return `Stop ${actionItem.name}`;\n            }\n            return actionItem.name;\n        },\n\n        updateActiveNavbarItems() {\n            const { navbarItems } = this;\n            let activeItems = new Set(navbarItems.map((item) => item.procedureName));\n            navbarItems.filter((item) => this.isInProgress(item.procedureName)).forEach((item) => {\n                // Intersection of current activeItems and items allowToRunInParallelWith\n                activeItems = new Set(\n                    (item.allowToRunInParallelWith ?? []).filter((name) => activeItems.has(name)),\n                ).add(item.procedureName);\n            });\n            this.activeNavbarItemsNames = Array.from(activeItems);\n        },\n        returnFromSubgraph() {\n            this.editorManager.returnFromSubgraph();\n            this.resetHoverInfo('subgraphReturn');\n        },\n    },\n    async mounted() {\n        this.isMounted = true;\n        this.buttonWidth = this.$refs.palette.offsetWidth;\n        this.windowWidth = window.innerWidth;\n\n        window.addEventListener('resize', () => {\n            this.windowWidth = window.innerWidth;\n            if (this.$refs.palette) this.buttonWidth = this.$refs.palette.offsetWidth;\n        });\n\n        // Listen for fullscreen change\n        document.addEventListener('fullscreenchange', () => {\n            this.panels.fullscreen.isOpen = !fullscreen.isFullscreen;\n        });\n\n        this.externalApplicationManager.registerConnectionHook(() => {\n            this.externalApp.available = this.externalApplicationManager.isExternalAppAvailable();\n            this.externalApp.connected = this.externalApplicationManager.isConnected();\n        });\n    },\n};\n</script>\n\n<!-- eslint-disable vue/no-multiple-template-root -->\n<template>\n    <Transition name=\"fade\" @mousedown.self=\"saveMenuShow = false\">\n        <Panel v-show=\"saveMenuShow\">\n            <ParentMenu\n                v-show=\"saveMenuShow\"\n                v-model=\"saveMenuShow\"\n                :title=\"'Save configuration'\"\n            >\n                <SaveMenu\n                    :saveConfiguration=\"saveConfiguration\"\n                    v-model=\"saveMenuShow\"\n                />\n            </ParentMenu>\n        </Panel>\n    </Transition>\n    <Transition name=\"fade\" @mousedown.self=\"exportMenuShow = false\">\n        <BlurPanel v-show=\"exportMenuShow\">\n            <ParentMenu\n                v-show=\"exportMenuShow\"\n                v-model=\"exportMenuShow\"\n                :title=\"'Export graph'\"\n            >\n                <ExportMenu\n                    :exportGraph = \"exportGraph\"\n                    v-model=\"exportMenuShow\"\n                />\n            </ParentMenu>\n        </BlurPanel>\n    </Transition>\n    <Transition name=\"fade\" @mousedown.self=\"menuState.configurationMenu.visible = false\">\n        <Panel v-show=\"menuState.configurationMenu.visible\">\n            <ParentMenu\n                v-if=\"menuState.configurationMenu.visible\"\n                v-model=\"menuState.configurationMenu.visible\"\n                :title=\"'Node configuration'\"\n            >\n                <NodeConfigurationMenu/>\n            </ParentMenu>\n        </Panel>\n    </Transition>\n    <Transition name=\"fade\" @mousedown.self=\"menuState.propertyMenu = false\">\n        <Panel v-show=\"menuState.propertyMenu\">\n            <ParentMenu\n                v-if=\"menuState.propertyMenu\"\n                v-model=\"menuState.propertyMenu\"\n                :title=\"'Add property'\"\n            >\n                <PropertyConfigurationMenu/>\n            </ParentMenu>\n        </Panel>\n    </Transition>\n    <Transition name=\"fade\" @mousedown.self=\"menuState.interfaceMenu = false\">\n        <Panel v-show=\"menuState.interfaceMenu\">\n            <ParentMenu\n                v-if=\"menuState.interfaceMenu\"\n                v-model=\"menuState.interfaceMenu\"\n                :title=\"'Add interface'\"\n            >\n                <InterfaceConfigurationMenu/>\n            </ParentMenu>\n        </Panel>\n    </Transition>\n    <Transition name=\"fade\" @mousedown.self=\"menuState.propertyListMenu = false\">\n        <Panel v-show=\"menuState.propertyListMenu\">\n            <ParentMenu\n                v-if=\"menuState.propertyListMenu\"\n                v-model=\"menuState.propertyListMenu\"\n                :title=\"'Remove properties'\"\n            >\n                <ListMenu\n                    :componentName=\"'propertyListMenu'\"\n                    :items=configurationState.properties\n                    :confirmAction=\"removeProperties\"\n                    :confirmText=\"'Remove properties'\"\n                />\n            </ParentMenu>\n        </Panel>\n    </Transition>\n    <Transition name=\"fade\" @mousedown.self=\"menuState.interfaceListMenu = false\">\n        <Panel v-show=\"menuState.interfaceListMenu\">\n            <ParentMenu\n                v-if=\"menuState.interfaceListMenu\"\n                v-model=\"menuState.interfaceListMenu\"\n                :title=\"'Remove interfaces'\"\n            >\n                <ListMenu\n                    :componentName=\"'interfaceListMenu'\"\n                    :items=configurationState.interfaces\n                    :confirmAction=\"removeInterfaces\"\n                    :confirmText=\"'Remove interfaces'\"\n                />\n            </ParentMenu>\n        </Panel>\n    </Transition>\n    <Transition name=\"fade\" @mousedown.self=\"menuState.layerMenu = false\">\n        <Panel v-show=\"menuState.layerMenu\">\n            <ParentMenu\n                v-if=\"menuState.layerMenu\"\n                v-model=\"menuState.layerMenu\"\n                :title=\"'Set node layer'\"\n            >\n                <LayerConfigurationMenu/>\n            </ParentMenu>\n        </Panel>\n    </Transition>\n\n    <div class=\"wrapper\"\n        v-click-outside=\"(ev) => handleMouseLeave(ev)\"\n    >\n        <div ref=\"navbar\" class=\"wrapper prevent-select\"\n            v-show=\"!preview\"\n            :class=\"(!hideHud && !$isMobile) ? 'wrapper-hud' : 'wrapper-hidden'\"\n            @pointerenter=\"$event.target.classList.add('isHovered')\"\n        >\n            <div class=\"container\">\n                <div :style=\"leftContainerStyles\">\n                    <div\n                        ref=\"leftButtons\"\n                        :class=\"['logo', mobileClasses]\"\n                        @pointerover=\"() => updateHoverInfo('logo')\"\n                        @pointerleave=\"() => resetHoverInfo('logo')\"\n                    >\n                        <Logo :hover=\"isHovered('logo')\" />\n                        <div class=\"dropdown-wrapper\">\n                            <template\n                                v-if=\"this.editorManager.specificationLoaded\"\n                            >\n                                <DropdownItem\n                                    id=\"create-new-graph-button\"\n                                    v-if=\"!readonly\"\n                                    text=\"Create new graph\"\n                                    type=\"'button'\"\n                                    :eventFunction=\"createNewGraphCallback\"\n                                />\n                                <template v-if=\"externalApp.connected\">\n                                    <hr />\n                                    <DropdownItem\n                                        text=\"Load file\"\n                                        id=\"request-dataflow-button\"\n                                        :eventFunction=\"importDataflow\"\n                                    />\n                                    <DropdownItem\n                                        text=\"Save file\"\n                                        type=\"button\"\n                                        :eventFunction=\"(async () => requestDataflowExport(false))\"\n                                    />\n                                    <DropdownItem\n                                        text=\"Save file as...\"\n                                        type=\"button\"\n                                        :eventFunction=\"(async () => requestDataflowExport(true))\"\n                                    />\n                                </template>\n                                <hr />\n                            </template>\n\n                            <template\n                                v-if=\"!hideHud\"\n                            >\n                                <DropdownItem\n                                    text=\"Load specification\"\n                                    id=\"load-spec-button\"\n                                    :eventFunction=\"loadSpecificationCallback\"\n                                />\n                                <DropdownItem\n                                    v-if=\"this.editorManager.specificationLoaded\"\n                                    text=\"Save specification as...\"\n                                    type=\"'button'\"\n                                    :eventFunction=\"() => {\n                                        saveMenuShow = !saveMenuShow\n                                        saveConfiguration = saveSpecificationConfiguration\n                                    }\"\n                                />\n                                <hr />\n                            </template>\n\n                            <template v-if=\"this.editorManager.specificationLoaded\">\n                                <DropdownItem\n                                    type=\"'button'\"\n                                    text=\"Set graph name\"\n                                    :eventFunction=\"setEditTitle\"\n                                />\n                                <DropdownItem\n                                    v-if=\"!hideHud\"\n                                    id=\"load-dataflow-button\"\n                                    text=\"Load graph file\"\n                                    :eventFunction=\"loadDataflowCallback\"\n                                />\n                                <DropdownItem\n                                    type=\"'button'\"\n                                    text=\"Save graph file\"\n                                    :eventFunction=\"() => saveGraphConfiguration.saveCallback()\"\n                                />\n                                <DropdownItem\n                                    type=\"'button'\"\n                                    text=\"Save graph as file as...\"\n                                    :eventFunction=\"() => {\n                                        saveMenuShow = !saveMenuShow\n                                        saveConfiguration = saveGraphConfiguration\n                                    }\"\n                                />\n                                <hr />\n                            </template>\n\n                            <DropdownItem\n                                type=\"'button'\"\n                                text=\"Export graph to PNG\"\n                                :eventFunction=\"() => {\n                                    exportMenuShow = !exportMenuShow\n                                    exportGraph = exportGraph\n                                }\"\n                            />\n                            <DropdownItem\n                                type=\"'button'\"\n                                text=\"Export graph to HTML-based SVG\"\n                                :eventFunction=\"exportToSvg\"\n                            />\n                            <DropdownItem\n                                v-if=\"this.editorManager.baklavaView.settings.editableNodeTypes\"\n                                type=\"'button'\"\n                                text=\"Create node type from graph\"\n                                :eventFunction=\"createGraphNodeTypeFromCurrentGraph\"\n                            />\n                        </div>\n                    </div>\n\n                    <div\n                        ref=\"palette\"\n                        v-if=\"!hideHud && !readonly\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        role=\"button\"\n                        @click=\"() => togglePanel(panels.palette)\"\n                        @pointerover=\"() => updateHoverInfo('palette')\"\n                        @pointerleave=\"() => resetHoverInfo('palette')\"\n                    >\n                        <Cube :hover=\"isHovered('palette')\" class=\"small_svg\"/>\n                        <div :class=\"['tooltip', mobileClasses]\">\n                            <span v-if=\"paletteOpen\">Hide node browser</span>\n                            <span v-else>Show node browser</span>\n                        </div>\n                    </div>\n                    <div\n                        v-for=\"actionItem in navbarItems\"\n                        :key=\"actionItem.name\"\n                        :id=\"`navbar-button-${actionItem.procedureName}`\"\n                        :class=\"[\n                            (\n                                (activeNavbarItems.includes(actionItem.procedureName)\n                                || isInProgress(actionItem.procedureName))\n                                ? 'hoverbox' : 'box'\n                            ),\n                            mobileClasses, {\n                            'button-in-progress': isInProgress(actionItem.procedureName),\n                        }]\"\n                        role=\"button\"\n                        @click=\"(async () => requestDataflowAction(actionItem))\"\n                        @pointerover=\"() => updateHoverInfo(actionItem.procedureName, true)\"\n                        @pointerleave=\"() => resetHoverInfo(actionItem.procedureName)\"\n                    >\n                        <!-- imgURI is used for Placeholder Icon to retrieve the image -->\n                        <CassetteStop\n                            v-if=\"\n                                isStoppable(actionItem.procedureName)\n                                && isInProgress(actionItem.procedureName)\n                            \"\n                            class=\"small_svg\"\n                            :hover=\"isHovered(actionItem.procedureName)\"\n                        />\n                        <component\n                            v-else\n                            class=\"small_svg\"\n                            :is=\"actionItem.icon\"\n                            :hover=\"isHovered(actionItem.procedureName)\"\n                            :imgURI=\"actionItem.iconName\"\n                        />\n                        <div class=\"progress-bar\" />\n                        <div :class=\"['tooltip', mobileClasses]\">\n                            <span>\n                                {{ getNavbarActionTooltip(actionItem) }}\n                            </span>\n                        </div>\n                    </div>\n                    <div\n                        v-if=\"this.editorManager.editor.isInSubgraph()\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        role=\"button\"\n                        @click=\"returnFromSubgraph\"\n                        @pointerover=\"() => updateHoverInfo('subgraphReturn')\"\n                        @pointerleave=\"() => resetHoverInfo('subgraphReturn')\"\n                    >\n                        <Arrow\n                            rotate=\"down\"\n                            :hover=\"isHovered('subgraphReturn')\"\n                            color=\"white\"\n                            class=\"small_svg\"\n                        />\n                        <div :class=\"['tooltip', mobileClasses]\">\n                            <span>Return from subgraph editor</span>\n                        </div>\n                    </div>\n                </div>\n                <component\n                    v-if=\"editTitle && !panels.nodesearch.isOpen\"\n                    ref=\"editorTitleInput\"\n                    :is=\"editorTitleInterface.component\"\n                    :intf=\"editorTitleInterface\"\n                    :class=\"['editorTitleInput', mobileClasses]\"\n                    v-model=\"graphName\"\n                    v-click-outside=\"() => { editTitle = false }\"\n                    @keyup.enter=\"() => { editTitle = false }\"\n                />\n                <span\n                    v-if=\"!editTitle && !panels.nodesearch.isOpen\"\n                    :class=\"['editorTitle', mobileClasses]\"\n                    @dblclick=\"setEditTitle\">\n                        {{ editorTitle }}\n                </span>\n                <span\n                    v-if=\"this.editorManager.baklavaView.settings.showIds &&\n                          !panels.nodesearch.isOpen\"\n                    :class=\"['editorTitle', 'graphId', mobileClasses]\">\n                        Graph ID: {{ graphId }}\n                </span>\n                <div :style=\"rightContainerStyles\" ref=\"rightButtons\">\n                    <div\n                        ref=\"searchbar\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        role=\"button\"\n                        @pointerover=\"() => updateHoverInfo('search')\"\n                        @pointerleave=\"() => {\n                            resetHoverInfo('search');\n                        }\"\n                        @click=\"onClickNodeSearch\"\n                        v-click-outside=\"() => panels.nodesearch.isOpen =\n                            searchEditorNodesQuery != ''\"\n                    >\n                        <Magnifier\n                            :hover=\"isHovered('search')\"\n                            class=\"small_svg\"\n                        />\n                        <div :class=\"['tooltip', mobileClasses]\">\n                            <span v-if=\"!panels.nodesearch.isOpen\">Show node search bar</span>\n                            <span v-else>Hide node search bar</span>\n                        </div>\n                    </div>\n                    <div\n                        v-show=\"panels.nodesearch.isOpen\"\n                        :style=\"nodesearchInputStyles\"\n                        :class=\"['search-editor-nodes', mobileClasses]\"\n                    >\n                        <input\n                            ref=\"searchbarInput\"\n                            v-model=\"searchEditorNodesQuery\"\n                            placeholder=\"Search for nodes\"\n                        />\n                    </div>\n                    <div\n                        ref=\"fullscreen\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        role=\"button\"\n                        @click=\"toggleFullscreen\"\n                        @pointerover=\"() => updateHoverInfo('Fullscreen')\"\n                        @pointerleave=\"() => resetHoverInfo('Fullscreen')\"\n                    >\n                        <Expand\n                            :hover=\"isHovered('Fullscreen')\"\n                            class=\"small_svg\"\n                            v-if=\"!panels.fullscreen.isOpen\"\n                        />\n                        <Collapse :hover=\"isHovered('Fullscreen')\" class=\"small_svg\" v-else />\n                        <div :class=\"['tooltip', mobileClasses]\">\n                            <span v-if=\"!panels.fullscreen.isOpen\">Enable fullscreen</span>\n                            <span v-else>Disable fullscreen</span>\n                        </div>\n                    </div>\n                    <div\n                        ref=\"settings\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        role=\"button\"\n                        @click=\"() => togglePanel(panels.settings)\"\n                        @pointerover=\"() => updateHoverInfo('settings')\"\n                        @pointerleave=\"() => resetHoverInfo('settings')\"\n                        v-click-outside=\"() => panels.settings.isOpen = false\"\n                    >\n                        <Cogwheel :hover=\"isHovered('settings')\" class=\"small_svg\" />\n                        <div :class=\"['tooltip', mobileClasses]\">\n                            <span v-if=\"!panels.settings.isOpen\">Show settings</span>\n                            <span v-else>Hide settings</span>\n                        </div>\n                    </div>\n                    <div\n                        ref=\"backend\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        v-if=\"externalApp.available\"\n                        @click=\"() => togglePanel(panels.externalAppStatus)\"\n                        @pointerover=\"() => updateHoverInfo('externalAppStatus')\"\n                        @pointerleave=\"() => resetHoverInfo('externalAppStatus')\"\n                    >\n                        <Backend\n                            v-if=\"externalApp.connected\"\n                            color=\"connected\"\n                            class=\"small_svg\"\n                            :active=\"externalAppStatus\"\n                            :hover=\"isHovered('externalAppStatus')\"\n                        />\n                        <Backend\n                            v-else color=\"disconnected\"\n                            class=\"small_svg\"\n                            :active=\"externalAppStatus\"\n                            :hover=\"isHovered('externalAppStatus')\"\n                        />\n                        <div :class=\"['tooltip', mobileClasses]\">\n                            <span>External App status</span>\n                        </div>\n                        <div\n                            v-click-outside=\"(ev) => clickOutside(ev, panels.externalAppStatus)\"\n                            class=\"external-app-status\"\n                        >\n                            <div>\n                                <span>Client status:</span>\n                                <!-- eslint-disable-next-line max-len -->\n                                <span v-if=\"externalApp.connected\"\n                                    class=\"connected\"\n                                    >Connected</span\n                                >\n                                <span v-else class=\"disconnected\">Disconnected</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        ref=\"notifications\"\n                        v-if=\"!hideHud\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        role=\"button\"\n                        @click=\"() => togglePanel(panels.notifications)\"\n                        @pointerover=\"() => updateHoverInfo('notifications')\"\n                        @pointerleave=\"() => resetHoverInfo('notifications')\"\n                    >\n                        <Bell\n                            id=\"navbar-bell\"\n                            :color=\"\n                                (this.notificationStore.notifications.length > 0) ?\n                                'green' : 'gray'\n                            \"\n                            :hover=\"isHovered('notifications')\"\n                            class=\"small_svg\"\n                        />\n                        <div\n                            v-if=\"notificationsOpen\"\n                            :class=\"['tooltip', mobileClasses]\"\n                        >\n                            <span>Hide notifications</span>\n                        </div>\n                        <div\n                            v-else :class=\"['tooltip', mobileClasses]\"\n                        >\n                            <span>Show notifications</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"progress-bar\" />\n        </div>\n        <Notifications v-click-outside=\"(ev) => clickOutside(ev, panels.notifications)\" />\n        <Settings\n            v-click-outside=\"(ev) => clickOutside(ev, panels.settings)\"\n            tabindex=\"-1\"\n            :viewModel=\"editorManager.baklavaView\"\n        />\n        <CustomSidebar\n            @sidebar-open=\"openNavbar\"\n        />\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.wrapper {\n    z-index: 5;\n}\n\n.wrapper-hud {\n    position: relative;\n}\n\n.wrapper-hidden {\n    $navbar-padding-bottom: calc($navbar-height * 1.5);\n    position: absolute;\n    width: 100%;\n    top: -$navbar-height;\n    padding-bottom: $navbar-padding-bottom;\n    transition: 0.2s;\n\n    &.isHovered {\n        transform: translateY($navbar-height);\n        padding-bottom: 0;\n    }\n\n    &:not(.isHovered) > .progress-bar {\n        bottom: calc($navbar-padding-bottom + 1px);\n    }\n}\n\n.container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: $navbar-height;\n    background-color: $gray-600;\n    border: 1px solid $gray-500;\n    border-left: 0;\n    border-right: 0;\n\n    .editorTitle {\n        width: auto;\n        text-wrap: wrap;\n        flex-grow: 1;\n\n        cursor: text;\n        text-align: center;\n        padding: 0 $spacing-s;\n\n        &.compressed-mobile {\n            display: none;\n        }\n    }\n\n    .graphId {\n        -webkit-user-select: text;\n        -ms-user-select: text;\n        user-select: text;\n    }\n\n    .editorTitleInput {\n        font-size: $fs-small;\n        padding: 0 $spacing-s;\n        flex-grow: 1;\n\n        &.compressed-mobile {\n            display: none;\n        }\n    }\n\n    .progress-bar {\n        position: absolute;\n        height: calc(60px * 0.2);\n        left: 0;\n        bottom: 0;\n        border-radius: 3px;\n        z-index: 5;\n        background-color: $green;\n\n        &.animate {\n            animation: pulse ease-in-out 2s infinite;\n\n            @keyframes pulse {\n                0% {\n                    left: 0;\n                    width: 0;\n                }\n                50% {\n                    width: 100%;\n                    left: 0;\n                }\n                100% {\n                    left: 100%;\n                    width: 0%;\n                }\n            }\n        }\n    }\n\n    & > div {\n        display: inherit;\n        flex-grow: 1;\n\n        & > div {\n            flex-grow: 0;\n            display: flex;\n            width: 3.75em;\n            height: 3.75em;\n\n            justify-content: center;\n            align-items: center;\n            position: relative;\n            box-sizing: border-box;\n            border-left: 1px solid $gray-500;\n\n            // If the navbar is compressed, the navbar button should shrink\n            &.compressed-mobile {\n                width: auto;\n                flex-grow: 1;\n                max-width: 3.75em;\n            }\n\n            &:last-child {\n                border-right: 1px solid $gray-500;\n            }\n\n            & > svg {\n                display: block;\n                width: 1.6875em;\n                height: 1.6875em;\n            }\n\n            & > .small_svg {\n                display: block;\n                width: 1.2em;\n                height: 1.2em;\n            }\n            & > .smaller_svg {\n                display: block;\n                width: 1em;\n                height: 1em;\n            }\n            & > .small_svg_stop {\n                position: absolute;\n                width: 0.8em;\n                height: 0.8em;\n                top: 8%;\n                right: 8%;\n                stroke: $gray-100;\n            }\n\n            & > .dropdown-wrapper {\n                user-select: none;\n                position: absolute;\n                flex-direction: column;\n                top: 100%;\n                left: 0;\n                display: none;\n                background-color: #181818;\n                border: 2px solid #737373;\n\n                & > div:hover {\n                    background-color: #2A2A2A;\n                }\n            }\n\n            & > .external-app-status {\n                @extend .dropdown-wrapper;\n                width: 220px;\n                display: flex;\n                /* Hide external app panel and position it\n                  to right border of backend icon\n                */\n                transform: translate(-89%, -180px);\n                padding: $spacing-l;\n                font-size: $fs-small;\n                justify-content: space-between;\n                border: none;\n                transition: transform 1s;\n\n                & > div {\n                    display: flex;\n                    justify-content: space-between;\n\n                    & > .disconnected {\n                        color: $red;\n                    }\n\n                    & > .connected {\n                        color: $green;\n                    }\n                }\n            }\n\n            & > .tooltip {\n                @extend .dropdown-wrapper;\n                border-radius: 15px;\n                background-color: $gray-600;\n                border: 1px solid $gray-200;\n                padding: $spacing-s;\n                left: calc(3.75em / 2);\n                transform: translate(-50%, 25%);\n                pointer-events: none;\n                white-space: nowrap;\n            }\n\n            &.logo:hover > .dropdown-wrapper {\n                display: flex;\n            }\n\n            &.box, &.hoverbox {\n                & > .small_svg {\n                    fill: $white;\n                }\n\n                &:hover {\n                    & > .tooltip {\n                        &:not(.compressed-mobile) {\n                            display: flex;\n                            z-index: 11;\n                        }\n                    }\n                }\n            }\n            &.hoverbox:hover {\n                cursor: pointer;\n\n                & > .small_svg {\n                    fill: $green;\n                }\n\n                & > .small_svg_stop {\n                    stroke: $red-dark;\n                }\n            }\n            &.box > .small_svg {\n                filter: brightness(50%);\n            }\n\n            &.search-editor-nodes {\n                max-width: calc(3.75em * 4);\n\n                & > input {\n                    width: 100%;\n                    height: 100%;\n                    padding: 0 0.5em;\n\n                    color: $white;\n                    border: none;\n                    background-color: $gray-600;\n\n                    &:focus {\n                        outline: 1px solid $green;\n                        z-index: 12;\n                    }\n\n                    &::placeholder {\n                        opacity: 0.5;\n                    }\n                }\n\n                // on smaller screens display search bellow NavBar\n                &.compressed-mobile {\n                    position: absolute;\n                    top: calc($navbar-height + 1px);\n                    max-width: 40vw;\n\n                    border: 1px solid $gray-500;\n                    box-sizing: border-box;\n                }\n            }\n        }\n\n        &:last-child > div:last-child .tooltip {\n            transform: translate(-75%, 25%);\n        }\n    }\n}\n\nspan {\n    font-size: $fs-small;\n    color: $white;\n    user-select: none;\n}\n\n.prevent-select {\n    -webkit-user-select: none; /* Safari */\n    -ms-user-select: none; /* IE 10 and IE 11 */\n    user-select: none; /* Standard syntax */\n}\n</style>\n","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nRepresents a single input option in a dropdown menu.\nThe input can callback different actions depending on the type of the component.\n-->\n\n<template>\n    <div>\n        <label v-if=\"type === 'file'\" :for=\"id\"> {{ text }} </label>\n        <input v-if=\"type === 'file'\" :id=\"id\" type=\"file\" @change=\"eventFunction\" />\n        <input v-else :id=\"id\" type=\"button\" @click=\"eventFunction\" :value=\"text\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        text: {\n            type: String,\n            required: true,\n        },\n        id: {\n            type: String,\n        },\n        type: {\n            type: String,\n            default: 'file',\n        },\n        eventFunction: {\n            type: Function,\n            required: true,\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\ndiv {\n    display: flex;\n    justify-content: space-between;\n    min-width: 10em;\n    height: 2.5em;\n    flex-direction: row;\n    align-items: center;\n\n    & > input[type='button'],\n    label {\n        width: 100%;\n        font-size: $fs-small;\n        color: $white;\n        padding: 0 0.9375em;\n        line-height: 2.5rem;\n        background-color: unset;\n        border: unset;\n        cursor: pointer;\n    }\n\n    & > input[type='button']:hover,\n    label:hover {\n        color: $green;\n    }\n}\n</style>\n","import { render } from \"./DropdownItem.vue?vue&type=template&id=74c292ef&scoped=true\"\nimport script from \"./DropdownItem.vue?vue&type=script&lang=js\"\nexport * from \"./DropdownItem.vue?vue&type=script&lang=js\"\n\nimport \"./DropdownItem.vue?vue&type=style&index=0&id=74c292ef&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-74c292ef\"]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nList of notitications that creates a `Notification` component for each message registered.\n-->\n\n<template>\n    <div class=\"notifications\" tabindex=\"-1\">\n        <div class=\"info\">\n            <span>Notifications ({{ notificationStore.notifications.length }})</span>\n            <button @click=\"this.removeAll\" tabindex=\"-1\">\n                <Cross />\n                Clear all\n            </button>\n        </div>\n        <div class=\"panel\">\n            <ul>\n                <!-- Iterating in reverse so that the newest messages are rendered first -->\n                <li v-for=\"index in notificationsLength\" :key=\"index\">\n                    <Notification\n                        :type=\"notifications[notificationsLength - index].type\"\n                        :message=\"`${notifications[notificationsLength - index].message}`\"\n                        :index=\"notificationsLength - index\"\n                        border=\"border\"\n                    />\n                </li>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Cross from '../icons/Cross.vue';\nimport Notification from './Notification.vue';\nimport { notificationStore } from '../core/stores';\n\nexport default {\n    components: {\n        Cross,\n        Notification,\n    },\n    computed: {\n        notifications() {\n            return notificationStore.notifications;\n        },\n        notificationsLength() {\n            return notificationStore.notifications.length;\n        },\n    },\n    data() {\n        return {\n            notificationStore,\n        };\n    },\n    methods: {\n        removeAll() {\n            notificationStore.remove();\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.notifications {\n    $notification-maxwidth: calc(100vw - 2 * $spacing-xxl);\n    /* Set height to 100 view port minus height of navigation bar and paddings\n    and minus the terminal panel */\n    height: calc(100% - 120px - $terminal-container-height);\n    width: 435px;\n    max-width: $notification-maxwidth;\n    background-color: $gray-600;\n    opacity: 0.9;\n    position: absolute;\n    /* Height of navigation bar*/\n    top: $navbar-height;\n    /* As default notification panel is hidden (minus value)\n      panel width (435px) + 2 * padding (30px) = 495px\n    */\n    right: -495px;\n    z-index: 4;\n    padding: $spacing-xxl;\n    overflow-y: auto;\n\n    // Prevent selection of text\n    -webkit-user-select: none; /* Safari */\n    -ms-user-select: none; /* IE 10 and IE 11 */\n    user-select: none; /* Standard syntax */\n\n    & > .info {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin-bottom: $spacing-l;\n\n        & > span {\n            color: $white;\n            font-size: $fs-large;\n        }\n\n        & > button {\n            color: $gray-200;\n            font-size: $fs-medium;\n        }\n    }\n\n    & > .panel {\n        display: grid;\n        grid-row-gap: $spacing-l;\n        ul {\n            max-width: $notification-maxwidth;\n        }\n        li {\n            -webkit-user-select: text; /* Safari */\n            -ms-user-select: text; /* IE 10 and IE 11 */\n            user-select: text; /* Standard syntax */\n        }\n    }\n}\n</style>\n","import { render } from \"./Notifications.vue?vue&type=template&id=69eabdd8&scoped=true\"\nimport script from \"./Notifications.vue?vue&type=script&lang=js\"\nexport * from \"./Notifications.vue?vue&type=script&lang=js\"\n\nimport \"./Notifications.vue?vue&type=style&index=0&id=69eabdd8&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-69eabdd8\"]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<template>\n    <div class=\"settings-panel\">\n        <div class=\"setting-header\">\n            <span>Settings</span>\n        </div>\n        <div class=\"panel\">\n            <div v-for=\"option in settingOptions\" :key=\"option.id\">\n                <div class=\"option-label\">\n                    {{ getOptionName(option.componentName) ? `${option.name}:` : '' }}\n                </div>\n                <component :is=\"option.component\" :intf=\"option\" tabindex=\"-1\"></component>\n            </div>\n\n            <div class=\"__properties\" v-show=\"disableLayersOptions.length !== 0\">\n                <div class=\"option-label\">Hide Layers:</div>\n                <div v-for=\"option in disableLayersOptions\" :key=\"option.id\">\n                    <component :is=\"option.component\" :intf=\"option\" tabindex=\"-1\"></component>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { computed, ref } from 'vue';\nimport { getOptionName } from '../custom/CustomNode.js';\nimport getExternalApplicationManager from '../core/communication/ExternalApplicationManager';\nimport { LOG_LEVEL } from '../core/notifications';\n\nimport SelectInterface from '../interfaces/SelectInterface.js';\nimport CheckboxInterface from '../interfaces/CheckboxInterface.js';\nimport IntegerInterface from '../interfaces/IntegerInterface.js';\nimport ButtonInterface from '../interfaces/ButtonInterface.js';\n\nexport default {\n    props: {\n        viewModel: {\n            required: true,\n        },\n    },\n    setup(props) {\n        const externalApplicationManager = getExternalApplicationManager();\n        const metadataChanged = (name, value) => {\n            externalApplicationManager.notifyAboutChange('metadata_on_change', {\n                metadata: {\n                    [name]: value,\n                },\n            });\n        };\n\n        const connectionStyleOption = computed(() => {\n            const items = [\n                { text: 'Curved', value: 'curved' },\n                { text: 'Orthogonal', value: 'orthogonal' },\n                { text: 'Alternative orthogonal', value: 'alternativeOrthogonal' },\n                { text: 'Straight', value: 'straight' },\n            ];\n            const option = new SelectInterface(\n                'Connection style',\n                props.viewModel.connectionRenderer.style,\n                items,\n            );\n            option.events.setValue.subscribe(this, (v) => {\n                props.viewModel.connectionRenderer.style = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n                metadataChanged('connectionStyle', v);\n            });\n            return option;\n        });\n\n        const randomizedOffsetOption = computed(() => {\n            const option = new CheckboxInterface(\n                'Randomized offset',\n                props.viewModel.connectionRenderer.randomizedOffset,\n            );\n            option.events.setValue.subscribe(this, (v) => {\n                props.viewModel.connectionRenderer.randomizedOffset = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n                metadataChanged('randomizedOffset', v);\n            });\n            return option;\n        });\n\n        const editableNodeTypes = computed(() => {\n            const option = new CheckboxInterface(\n                'Modify node types',\n                props.viewModel.settings.editableNodeTypes,\n            ).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                props.viewModel.settings.editableNodeTypes = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n                metadataChanged('editableTypes', v);\n            });\n            option.componentName = 'CheckboxInterface';\n            return option;\n        });\n\n        const hideAnchors = computed(() => {\n            const option = new CheckboxInterface(\n                'Hide anchors',\n                props.viewModel.settings.hideAnchors,\n            ).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                props.viewModel.settings.hideAnchors = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n                metadataChanged('hideAnchors', v);\n            });\n            option.componentName = 'CheckboxInterface';\n            return option;\n        });\n\n        const showIds = computed(() => {\n            const option = new CheckboxInterface(\n                'Show IDs',\n                props.viewModel.settings.showIds,\n            ).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                props.viewModel.settings.showIds = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n                metadataChanged('showIds', v);\n            });\n            option.componentName = 'CheckboxInterface';\n            return option;\n        });\n\n        const backgroundGridSize = computed(() => {\n            const option = new IntegerInterface(\n                'Background grid size',\n                props.viewModel.settings.background.gridSize,\n            );\n            option.events.setValue.subscribe(this, (v) => {\n                props.viewModel.settings.background.gridSize = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n                metadataChanged('backgroundSize', v);\n            });\n            return option;\n        });\n\n        const movementStep = computed(() => {\n            const option = new IntegerInterface(\n                'Node movement step',\n                props.viewModel.movementStep,\n            );\n            option.events.setValue.subscribe(this, (v) => {\n                props.viewModel.movementStep = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n                metadataChanged('movementStep', v);\n            });\n            return option;\n        });\n\n        const LayoutOption = computed(() => {\n            const { layoutManager } = props.viewModel.editor;\n            const items = layoutManager\n                .getAvailableAlgorithms()\n                .map((algorithmName) => ({ text: algorithmName, value: algorithmName }));\n            const option = new SelectInterface(\n                'Autolayout algorithm',\n                layoutManager.usedAlgorithm,\n                items,\n            );\n            option.events.setValue.subscribe(this, (v) => {\n                layoutManager.useAlgorithm(v);\n                metadataChanged('layout', v);\n            });\n            return option;\n        });\n\n        const LayoutApply = computed(() => {\n            const button = new ButtonInterface('Apply autolayout', () => {\n                props.viewModel.editor.applyAutolayout();\n            });\n            return button;\n        });\n\n        const clearEditor = computed(() => {\n            const button = new ButtonInterface('Clean editor', () => {\n                props.viewModel.editor.deepCleanEditor();\n            });\n            return button;\n        });\n\n        const disableLayersOptions = computed(() => {\n            const options = ref([]);\n\n            props.viewModel.layers.forEach((layer) => {\n                const option = new CheckboxInterface(layer.name, false);\n                option.events.setValue.subscribe(this, () => {\n                    if (props.viewModel.ignoredLayers.has(layer.name)) {\n                        props.viewModel.ignoredLayers.delete(layer.name);\n                    } else {\n                        props.viewModel.ignoredLayers.add(layer.name);\n                    }\n                });\n                options.value.push(option);\n            });\n\n            return options.value;\n        });\n\n        const logLevel = computed(() => {\n            const select = new SelectInterface(\n                'Verbosity of notifications',\n                props.viewModel.logLevel,\n                Object.keys(LOG_LEVEL).map((s) => s.toUpperCase()),\n            );\n            select.events.setValue.subscribe(this, (v) => {\n                props.viewModel.logLevel = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n            });\n            return select;\n        });\n\n        const readonlyOptions = computed(() => {\n            if (props.viewModel.editor.readonly) {\n                return [];\n            }\n            const options = [\n                logLevel.value,\n                connectionStyleOption.value,\n                LayoutOption.value,\n                LayoutApply.value,\n                backgroundGridSize.value,\n                clearEditor.value,\n                movementStep.value,\n                randomizedOffsetOption.value,\n                hideAnchors.value,\n                showIds.value,\n            ];\n            if (props.viewModel.settings.toggleableEditableTypes) {\n                options.push(editableNodeTypes.value);\n            }\n            return options;\n        });\n\n        return { getOptionName, settingOptions: readonlyOptions, disableLayersOptions };\n    },\n};\n</script>\n\n<style lang=\"scss\">\n.settings-panel {\n    $settings-width: 435px;\n    $settings-maxwidth: calc(100vw - 2 * $spacing-l);\n\n    background-color: #{$gray-600}E6;\n    position: absolute;\n    padding: $spacing-l;\n    color: white;\n    top: calc($navbar-height + 1px);\n    right: -495px;\n    width: $settings-width;\n    // viewport - terminal - navbar - padding\n    max-height: calc(100% - $navbar-height - $terminal-container-height - 2 * $spacing-l);\n    min-height: fit-content;\n    max-width: $settings-maxwidth;\n    z-index: 4;\n    overflow-y: auto;\n\n    & > .setting-header {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin-bottom: $spacing-l;\n\n        & > span {\n            color: $white;\n            font-size: $fs-large;\n        }\n    }\n\n    & > .panel {\n        display: grid;\n        grid-row-gap: $spacing-l;\n        user-select: none;\n\n        & > div {\n            max-width: $settings-maxwidth;\n            & > .option-label {\n                padding-bottom: $spacing-s;\n                color: $white;\n                font-size: $fs-medium;\n            }\n        }\n    }\n}\n</style>\n","import { render } from \"./Settings.vue?vue&type=template&id=4c11bebc\"\nimport script from \"./Settings.vue?vue&type=script&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&lang=js\"\n\nimport \"./Settings.vue?vue&type=style&index=0&id=4c11bebc&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\n * Copyright (c) 2022-2025 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { toPng } from 'html-to-image';\nimport EditorManager from '../core/EditorManager';\nimport NotificationHandler from '../core/notifications';\nimport { brokenImage } from '../../../resources/broken_image.js';\nconst saveBlob = (blob, filename) => {\n    const linkElement = document.createElement('a');\n    linkElement.href = window.URL.createObjectURL(blob);\n    linkElement.download = filename;\n    linkElement.click();\n};\nexport const saveSpecificationConfiguration = {\n    graph: false,\n    minify: false,\n    saveName: 'specification',\n    saveCallback() {\n        var _a, _b, _c;\n        const editorManager = EditorManager.getEditorManagerInstance();\n        const specification = editorManager.saveSpecification();\n        const dataflow = editorManager.saveDataflow();\n        (_a = specification.graphs) !== null && _a !== void 0 ? _a : (specification.graphs = []);\n        // Match graph IDs with subgraphId in node specification\n        dataflow.graphs.forEach((graph) => {\n            dataflow.graphs.forEach((g) => {\n                const node = g.nodes.find((n) => n.subgraph === graph.id);\n                if (node !== undefined) {\n                    const nodeSpecification = specification.nodes.find((n) => n.name === node.name);\n                    // eslint-disable-next-line no-param-reassign\n                    graph.id = nodeSpecification.subgraphId;\n                    node.subgraph = nodeSpecification.subgraphId;\n                }\n            });\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        dataflow.graphs.forEach((graph) => {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const prevIndex = specification.graphs.map((g) => g.id).indexOf(graph.id);\n            const [index, remove] = prevIndex !== -1\n                ? [prevIndex, 1]\n                : [specification.graphs.length, 0];\n            specification.graphs.splice(index, remove, graph);\n        });\n        Object.entries(dataflow.metadata).forEach(([key, value]) => {\n            if (value !== undefined) {\n                specification.metadata[key] = value;\n            }\n        });\n        if (this.graph) {\n            specification.entryGraph = (_b = dataflow.entryGraph) !== null && _b !== void 0 ? _b : dataflow.graphs[0].id;\n        }\n        if (this.minify) {\n            const nameToNodeMapping = Object.fromEntries(specification.nodes.map((node) => [EditorManager.getNodeName(node), node]));\n            const nameToNode = (name) => nameToNodeMapping[name];\n            const usedNames = (_c = dataflow.graphs) === null || _c === void 0 ? void 0 : _c.map((graph) => graph.nodes.map(EditorManager.getNodeName)).flat();\n            if (usedNames.length) {\n                const resolvedNames = [];\n                const resolve = (node) => {\n                    var _a;\n                    if (node === undefined)\n                        return;\n                    const name = EditorManager.getNodeName(node);\n                    if (resolvedNames.includes(name))\n                        return;\n                    resolvedNames.push(name);\n                    (_a = node.extends) === null || _a === void 0 ? void 0 : _a.map(nameToNode).forEach(resolve);\n                };\n                usedNames.map(nameToNode).forEach(resolve);\n                specification.nodes = resolvedNames\n                    .map(nameToNode)\n                    .filter((node) => node !== undefined);\n                if (!specification.nodes.length)\n                    delete specification.nodes;\n            }\n        }\n        const blob = new Blob([\n            JSON.stringify(specification, null, this.minify ? 0 : 4),\n        ], { type: 'application/json' });\n        saveBlob(blob, this.saveName);\n        NotificationHandler.showToast('info', 'Specification saved');\n    },\n    reset() {\n        this.graph = false;\n        this.minify = false;\n        this.saveName = 'specification';\n    },\n};\nexport const saveGraphConfiguration = {\n    readonly: false,\n    hideHud: false,\n    position: false,\n    graphName: null,\n    saveName: 'save',\n    saveCallback() {\n        const blob = new Blob([JSON.stringify(EditorManager.getEditorManagerInstance().saveDataflow(this.readonly, this.hideHud, this.position, this.graphName), null, 4)], {\n            type: 'application/json',\n        });\n        saveBlob(blob, this.saveName);\n        NotificationHandler.showToast('info', 'Dataflow saved');\n    },\n    saveCallbackCustomFormat(blob) {\n        const saveElement = document.createElement('a');\n        let mimeType;\n        if (typeof blob === 'string') {\n            mimeType = 'application/octet-stream';\n            saveElement.href = `data:${mimeType};base64,${blob}`;\n        }\n        else {\n            mimeType = 'application/json';\n            saveElement.href = window.URL.createObjectURL(new Blob([JSON.stringify(blob)], { type: mimeType }));\n        }\n        saveElement.download = this.saveName;\n        saveElement.click();\n        NotificationHandler.showToast('info', `File saved successfully: ${this.saveName}`);\n    },\n    reset() {\n        var _a, _b, _c;\n        const dataflow = EditorManager.getEditorManagerInstance().saveDataflow();\n        const graphName = (_c = (dataflow.entryGraph\n            ? ((_a = dataflow.graphs\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                .find((dataflowGraph) => dataflowGraph.id === dataflow.entryGraph)) === null || _a === void 0 ? void 0 : _a.name)\n            : (_b = dataflow.graphs[0]) === null || _b === void 0 ? void 0 : _b.name)) !== null && _c !== void 0 ? _c : null;\n        this.readonly = false;\n        this.hideHud = false;\n        this.position = false;\n        this.graphName = graphName;\n        this.saveName = 'save';\n    },\n};\nexport const exportGraph = {\n    width: 1920,\n    height: 1080,\n    maxWidth: 16384,\n    maxHeight: 16384,\n    saveName: 'dataflow',\n    exportCallback() {\n        // Get editor with data flow\n        const nodeEditor = document.querySelector('.inner-editor');\n        // Exclude node palette\n        const filter = (node) => { var _a; return !((_a = node.classList) === null || _a === void 0 ? void 0 : _a.contains('baklava-node-palette')); };\n        if (this.width < 0) {\n            NotificationHandler.showToast('error', `Negative width. The image could not be saved.`);\n            return;\n        }\n        if (this.height < 0) {\n            NotificationHandler.showToast('error', `Negative height. The image could not be saved.`);\n            return;\n        }\n        if (this.width > this.maxWidth) {\n            NotificationHandler.showToast('warning', `Invalid width. The maximum value ${this.maxWidth} was used instead.`);\n            this.width = this.maxWidth;\n        }\n        if (this.height > this.maxHeight) {\n            NotificationHandler.showToast('warning', `Invalid height. The maximum value ${this.maxHeight} was used instead.`);\n            this.height = this.maxHeight;\n        }\n        toPng(nodeEditor, {\n            filter,\n            imagePlaceholder: brokenImage,\n            canvasWidth: this.width,\n            canvasHeight: this.height,\n        })\n            .then((dataUrl) => {\n            const downloadLink = document.createElement('a');\n            downloadLink.download = this.saveName;\n            downloadLink.href = dataUrl;\n            downloadLink.dataset.downloadurl = [\n                dataUrl,\n                downloadLink.download,\n                downloadLink.href,\n            ].join(':');\n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n        })\n            .catch((error) => {\n            NotificationHandler.showToast('error', `Export to PNG failed: ${error}`);\n        });\n    },\n    reset() {\n        this.width = 1920;\n        this.height = 1080;\n        this.saveName = 'save';\n    },\n};\n","import { render } from \"./NavBar.vue?vue&type=template&id=7ca5bbfe&scoped=true\"\nimport script from \"./NavBar.vue?vue&type=script&lang=js\"\nexport * from \"./NavBar.vue?vue&type=script&lang=js\"\n\nimport \"./NavBar.vue?vue&type=style&index=0&id=7ca5bbfe&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7ca5bbfe\"]])\n\nexport default __exports__","import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = { class: \"container\" };\nconst _hoisted_2 = { class: \"tab\" };\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = { class: \"indicator-wrapper\" };\nconst _hoisted_5 = { class: \"button-wrapper\" };\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n    const _component_Indicator = _resolveComponent(\"Indicator\");\n    const _component_Bin = _resolveComponent(\"Bin\");\n    const _component_Arrow = _resolveComponent(\"Arrow\");\n    const _component_Terminal = _resolveComponent(\"Terminal\");\n    return (_openBlock(), _createElementBlock(\"div\", {\n        ref: \"terminalWrapper\",\n        class: \"terminal-wrapper\",\n        style: _normalizeStyle(_ctx.terminalWrapperStyles)\n    }, [\n        _createElementVNode(\"div\", _hoisted_1, [\n            _createElementVNode(\"div\", {\n                ref: \"resizer\",\n                class: \"resizer\",\n                style: _normalizeStyle(_ctx.resizerStyles)\n            }, null, 4),\n            _createElementVNode(\"div\", _hoisted_2, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.displayedTerminals, (terminal) => {\n                    return (_openBlock(), _createElementBlock(\"button\", {\n                        key: terminal.name,\n                        class: _normalizeClass([\"tab-item\", _ctx.pipelineSpanClasses(terminal.name)]),\n                        onClick: ($event) => (_ctx.toggleTerminalPanel(terminal.name))\n                    }, [\n                        _createElementVNode(\"span\", {\n                            class: _normalizeClass(_ctx.pipelineSpanClasses(terminal.name))\n                        }, _toDisplayString(terminal.name), 3),\n                        _createElementVNode(\"div\", _hoisted_4, [\n                            (terminal.hasNewMessage)\n                                ? (_openBlock(), _createBlock(_component_Indicator, {\n                                    key: 0,\n                                    color: _ctx.terminalIndicatorColor(terminal.hasNewMessage)\n                                }, null, 8, [\"color\"]))\n                                : _createCommentVNode(\"\", true)\n                        ])\n                    ], 10, _hoisted_3));\n                }), 128))\n            ]),\n            _createElementVNode(\"div\", _hoisted_5, [\n                (_ctx.isTerminalPanelOpened && _ctx.showClearButton)\n                    ? (_openBlock(), _createElementBlock(\"button\", {\n                        key: 0,\n                        onClick: _cache[0] || (_cache[0] = ($event) => (_ctx.clearTerminalOutput(_ctx.activeTerminal)))\n                    }, [\n                        _createVNode(_component_Bin),\n                        _cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"Clear terminal\", -1))\n                    ]))\n                    : _createCommentVNode(\"\", true),\n                _createElementVNode(\"button\", {\n                    onClick: _cache[1] || (_cache[1] = () => { _ctx.arrowHovered = false; _ctx.toggleTerminalPanel(undefined); }),\n                    onMouseenter: _cache[2] || (_cache[2] = ($event) => (_ctx.arrowHovered = true)),\n                    onMouseleave: _cache[3] || (_cache[3] = ($event) => (_ctx.arrowHovered = false))\n                }, [\n                    (!_ctx.isTerminalPanelOpened)\n                        ? (_openBlock(), _createBlock(_component_Arrow, {\n                            key: 0,\n                            color: \"white\",\n                            scale: \"small\",\n                            rotate: \"up\",\n                            hover: _ctx.arrowHovered\n                        }, null, 8, [\"hover\"]))\n                        : (_openBlock(), _createBlock(_component_Arrow, {\n                            key: 1,\n                            color: \"white\",\n                            scale: \"small\",\n                            rotate: \"left\",\n                            hover: _ctx.arrowHovered\n                        }, null, 8, [\"hover\"]))\n                ], 32)\n            ])\n        ]),\n        _withDirectives(_createVNode(_component_Terminal, { terminalInstance: _ctx.activeTerminal }, null, 8, [\"terminalInstance\"]), [\n            [_vShow, _ctx.isTerminalPanelOpened]\n        ])\n    ], 4));\n}\n","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nContainer for the hterm.js terminal.\n-->\n\n<template>\n    <div id=\"hterm-terminal\"></div>\n</template>\n\n<script>\nimport {\n    defineComponent, computed, onMounted, watch, nextTick,\n} from 'vue';\nimport { terminalStore, MAIN_TERMINAL } from '../core/stores';\nimport { hterm, lib } from '../third-party/hterm_all';\nimport getExternalApplicationManager from '../core/communication/ExternalApplicationManager';\n\nexport default defineComponent({\n    props: {\n        terminalInstance: {\n            type: String,\n        },\n    },\n    setup(props) {\n        let term;\n        const htermSettings = {\n            'background-color': '#1d1d1d',\n            'cursor-color': 'white',\n            'mouse-right-click-paste': false,\n            'pass-meta-v': false,\n            'mouse-paste-button': 'no-button',\n            'pass-on-drop': false,\n            'shift-insert-paste': false,\n        };\n\n        const setHTermPreferences = () => {\n            Object.keys(htermSettings).forEach((key) => {\n                localStorage.setItem(\n                    `/hterm/profiles/default/${key}`,\n                    htermSettings[key],\n                );\n            });\n        };\n\n        const logs = computed(() => terminalStore.logs[props.terminalInstance]);\n\n        const logsLength = computed(() => {\n            if (logs.value === undefined) {\n                return 0;\n            }\n            return logs.value.length;\n        });\n\n        const terminalBuffer = [];\n\n        const printLog = (log) => {\n            if (term === undefined) return;\n            const text = terminalStore.readOnly[props.terminalInstance] ? log.replace(/\\n/g, '\\r\\n') : log;\n            term.io.print(text);\n            terminalBuffer.push(text);\n        };\n\n        let renderIndex = 0;\n\n        const clearTerminal = () => {\n            renderIndex = 0;\n            if (term === undefined) return;\n\n            printLog('\\u001b[0m');\n            term.scrollHome();\n            // This line console logs' \"Couldn't fetch row index:\"\n            term.wipeContents();\n        };\n\n        const clearLog = () => {\n            clearTerminal();\n            terminalBuffer.length = 0;\n        };\n\n        const externalApplicationManager = getExternalApplicationManager();\n\n        onMounted(async () => {\n            // wait for hterm.js library to load\n            // (glatosinski: we may later need to move it to some global scope)\n            await lib.init();\n            // configure hterm.js style and instantiate the terminal\n            setHTermPreferences();\n            term = new hterm.Terminal();\n            // Disable virtual keyboard for mobile devices\n            // eslint-disable-next-line no-underscore-dangle\n            term.scrollPort_.contenteditable = false;\n\n            term.onTerminalReady = function onTerminalReady() {\n                // load logs that have existed already in the storage.\n                // for now configure the terminal as read-only\n                this.io.sendString = (string) => {\n                    if (!terminalStore.isReadOnly(props.terminalInstance)) {\n                        externalApplicationManager.requestTerminalRead(\n                            props.terminalInstance,\n                            string,\n                        );\n                    }\n                };\n                this.onVTKeystroke = (string) => {\n                    if (!terminalStore.isReadOnly(props.terminalInstance)) {\n                        externalApplicationManager.requestTerminalRead(\n                            props.terminalInstance, string,\n                        );\n                    }\n                };\n                this.io.onTerminalResize = () => {\n                    // Reload content\n                    clearTerminal();\n                    terminalBuffer.forEach((line) => {\n                        term.io.print(line);\n                    });\n                };\n                this.installKeyboard();\n            };\n            // pin hterm.js in the template\n            term.decorate(document.querySelector('#hterm-terminal'));\n\n            watch(\n                [() => props.terminalInstance, logsLength],\n                async ([newIns, newLen], [oldIns, oldLen]) => {\n                    if (newIns === undefined || !terminalStore.exists(newIns)) {\n                        return;\n                    }\n\n                    if (terminalStore.readOnly[props.terminalInstance]) {\n                        // eslint-disable-next-line no-underscore-dangle\n                        term.scrollPort_.contenteditable = false;\n                        term.setCursorVisible(false);\n                    } else {\n                        // eslint-disable-next-line no-underscore-dangle\n                        term.scrollPort_.contenteditable = true;\n                        term.setCursorVisible(true);\n                    }\n                    // Wait for the next tick to make sure that the terminal is rendered\n                    // Otherwise hterm may throw errors related to the dom not being ready\n                    await nextTick();\n\n                    // If the instance of the terminal changed\n                    if (oldIns !== newIns || newLen === 0) {\n                        clearLog();\n                    }\n\n                    if (oldLen !== newLen || oldIns !== newIns) {\n                        const currentLogs = terminalStore.logs[newIns];\n\n                        currentLogs.slice(renderIndex).forEach((log, _) => {\n                            if (renderIndex > 0 && newIns === MAIN_TERMINAL) printLog('\\n\\n');\n                            printLog(log);\n                            renderIndex += 1;\n                        });\n                    }\n                },\n            );\n        });\n    },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n#hterm-terminal {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-color: $gray-600;\n}\n</style>\n","import { render } from \"./Terminal.vue?vue&type=template&id=246a4a0f&scoped=true\"\nimport script from \"./Terminal.vue?vue&type=script&lang=js\"\nexport * from \"./Terminal.vue?vue&type=script&lang=js\"\n\nimport \"./Terminal.vue?vue&type=style&index=0&id=246a4a0f&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-246a4a0f\"]])\n\nexport default __exports__","import { defineComponent, onMounted, ref, computed, watch, nextTick, } from 'vue';\nimport Terminal from './Terminal.vue';\nimport Arrow from '../icons/Arrow.vue';\nimport Indicator from '../icons/Indicator.vue';\nimport Bin from '../icons/Bin.vue';\nimport { mouseDownHandler } from '../core/events';\nimport { terminalStore, MAIN_TERMINAL } from '../core/stores';\nexport default defineComponent({\n    components: {\n        Arrow,\n        Indicator,\n        Bin,\n        Terminal,\n    },\n    setup() {\n        const resizer = ref(null);\n        const terminalWrapper = ref(null);\n        const activeTerminal = ref(undefined);\n        const isTerminalPanelOpened = ref(false);\n        const showClearButton = ref(true);\n        const terminalPanelHeight = ref(0);\n        const arrowHovered = ref(false);\n        const pipelineSpanClasses = (terminal) => ({\n            active: isTerminalPanelOpened.value && terminal === activeTerminal.value,\n        });\n        const terminalWrapperStyles = computed(() => {\n            const minTerminalPanelHeight = 395;\n            if (isTerminalPanelOpened.value) {\n                return {\n                    height: `${Math.max(terminalPanelHeight.value, minTerminalPanelHeight)}px`,\n                };\n            }\n            return {\n                height: 'unset',\n            };\n        });\n        const resizerStyles = computed(() => ({\n            'pointer-events': (isTerminalPanelOpened.value ? 'all' : 'none'),\n        }));\n        const terminals = ref([]);\n        const terminalMatch = (name) => (terminal) => terminal.name === name;\n        const displayedNames = ref([]);\n        const displayedTerminals = computed(() => displayedNames.value.map((name) => terminals.value.find(terminalMatch(name))));\n        // Computing tuples of names and lengths of terminals\n        const terminalNamesLengths = computed(() => {\n            const terminalLogs = Object.values(terminalStore.logs);\n            const lengths = terminalLogs.map((log) => log.length);\n            const names = Object.keys(terminalStore.logs);\n            const tuples = [];\n            for (let i = 0; i < names.length; i += 1) {\n                tuples.push({\n                    name: names[i],\n                    length: lengths[i],\n                });\n            }\n            return tuples;\n        });\n        watch(terminalNamesLengths, (newVal, oldVal) => {\n            const oldNames = oldVal === null || oldVal === void 0 ? void 0 : oldVal.map((tuple) => tuple.name);\n            newVal.forEach((tuple) => {\n                if (!(oldNames === null || oldNames === void 0 ? void 0 : oldNames.includes(tuple.name))) {\n                    // Adding new terminals to the displayed ones\n                    terminals.value.push({\n                        name: tuple.name,\n                        hasNewMessage: tuple.length !== 0,\n                    });\n                    displayedNames.value.push(tuple.name);\n                }\n                else {\n                    // Checking whether length changed in an existing terminal\n                    const oldTuple = oldVal.find((t) => t.name === tuple.name);\n                    if ((oldTuple === null || oldTuple === void 0 ? void 0 : oldTuple.length) !== tuple.length && tuple.name !== activeTerminal.value) {\n                        const terminal = terminals.value.find((t) => t.name === tuple.name);\n                        terminal.hasNewMessage = true;\n                    }\n                }\n            });\n            oldVal === null || oldVal === void 0 ? void 0 : oldVal.filter((terminal) => !newVal.some(terminalMatch(terminal.name))).forEach((terminal) => {\n                const terminalIndex = terminals.value.findIndex(terminalMatch(terminal.name));\n                terminals.value.splice(terminalIndex, 1);\n                const nameIndex = displayedNames.value.indexOf(terminal.name, 1);\n                displayedNames.value.splice(nameIndex, 1);\n                // eslint-disable-next-line no-use-before-define\n                if (activeTerminal.value === terminal.name)\n                    toggleTerminalPanel(terminal.name);\n            });\n        }, {\n            immediate: true,\n        });\n        const terminalIndicatorColor = (hasNewMessage) => {\n            if (hasNewMessage)\n                return 'green';\n            return 'gray';\n        };\n        const setReadMessages = (terminalName) => {\n            terminals.value.forEach((terminal) => {\n                // eslint-disable-next-line no-param-reassign\n                if (terminal.name === terminalName)\n                    terminal.hasNewMessage = false;\n            });\n        };\n        const toggleTerminalPanel = (terminal, checkReadonly = true) => {\n            var _a, _b;\n            if (terminal === undefined && !isTerminalPanelOpened.value) {\n                activeTerminal.value = MAIN_TERMINAL;\n                isTerminalPanelOpened.value = true;\n                setReadMessages(MAIN_TERMINAL);\n            }\n            else if (terminal === activeTerminal.value || terminal === undefined) {\n                activeTerminal.value = undefined;\n                isTerminalPanelOpened.value = false;\n            }\n            else {\n                // Keep the current terminal height when switching between terminals\n                const terminalHeight = (_b = (_a = terminalWrapper.value) === null || _a === void 0 ? void 0 : _a.style.height) !== null && _b !== void 0 ? _b : 'unset';\n                activeTerminal.value = terminal;\n                isTerminalPanelOpened.value = true;\n                setReadMessages(terminal);\n                if (terminalHeight !== 'unset')\n                    terminalWrapperStyles.value.height = terminalHeight;\n            }\n            // Focus on terminal if it is not readonly\n            if (activeTerminal.value !== undefined &&\n                (!checkReadonly || !terminalStore.isReadOnly(activeTerminal.value))) {\n                nextTick().then(() => { var _a; return (_a = document.getElementById('hterm-terminal')) === null || _a === void 0 ? void 0 : _a.focus(); });\n            }\n        };\n        const manager = {\n            hide() {\n                terminalStore.show = false;\n                if (isTerminalPanelOpened.value)\n                    toggleTerminalPanel(activeTerminal.value);\n            },\n            show(name) {\n                const terminal = name !== null && name !== void 0 ? name : MAIN_TERMINAL;\n                terminalStore.show = true;\n                const isViewChanged = !isTerminalPanelOpened.value;\n                const isDifferentTerminal = activeTerminal.value\n                    && terminal !== activeTerminal.value;\n                if (isViewChanged || isDifferentTerminal) {\n                    toggleTerminalPanel(terminal !== null && terminal !== void 0 ? terminal : activeTerminal.value, false);\n                }\n            },\n            view(params) {\n                if (params.names)\n                    displayedNames.value = params.names;\n                if (params.clearButton !== undefined)\n                    showClearButton.value = params.clearButton;\n            },\n        };\n        onMounted(() => {\n            const setTerminalHeight = (height) => {\n                terminalPanelHeight.value = height;\n            };\n            terminalStore.manager = manager;\n            resizer.value.addEventListener('mousedown', mouseDownHandler(setTerminalHeight));\n        });\n        const clearTerminalOutput = (terminal) => {\n            terminalStore.clear(terminal);\n        };\n        return {\n            toggleTerminalPanel,\n            clearTerminalOutput,\n            showClearButton,\n            displayedTerminals,\n            activeTerminal,\n            isTerminalPanelOpened,\n            resizer,\n            terminalWrapper,\n            pipelineSpanClasses,\n            terminalWrapperStyles,\n            resizerStyles,\n            arrowHovered,\n            terminalIndicatorColor,\n        };\n    },\n});\n","import { render } from \"./TerminalPanel.vue?vue&type=template&id=6404167b&scoped=true&ts=true\"\nimport script from \"./TerminalPanel.vue?vue&type=script&lang=ts\"\nexport * from \"./TerminalPanel.vue?vue&type=script&lang=ts\"\n\nimport \"./TerminalPanel.vue?vue&type=style&index=0&id=6404167b&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6404167b\"]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nRepresents Loading Screen shown when JSON files\nwith specification and graph are being downloaded and loaded.\n-->\n\n<template>\n  <div class=\"loading-screen\">\n    <SelfBuildingSquareSpinner\n      id=\"loading-screen-spinner\"\n      :size=\"80\"\n    />\n  </div>\n</template>\n\n<script>\nimport { SelfBuildingSquareSpinner } from 'epic-spinners';\n\nexport default {\n    components: {\n        SelfBuildingSquareSpinner,\n    },\n};\n</script>\n\n<style lang=\"scss\">\n.loading-screen {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  z-index: 99;\n  background-color: #{$gray-600}80;\n}\n\n#loading-screen-spinner {\n  & > .square {\n    background: $green !important;\n  }\n}\n</style>\n","import { render } from \"./LoadingScreen.vue?vue&type=template&id=16792eac\"\nimport script from \"./LoadingScreen.vue?vue&type=script&lang=js\"\nexport * from \"./LoadingScreen.vue?vue&type=script&lang=js\"\n\nimport \"./LoadingScreen.vue?vue&type=style&index=0&id=16792eac&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Home.vue?vue&type=template&id=6e907aa6\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2025 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nThis component is used to control the zoom level of the graph.\nIt emits 'center', 'zoomIn' and 'zoomOut' events when the respective buttons are clicked.\nThe component can be displayed in in a normal mode or in a floating mode (higher).\n-->\n\n<template>\n    <div class=\"zoom-container export-hidden\" :class=\"floatingStatus\">\n        <div\n            role=\"button\"\n            class=\"zoom-center\"\n            @pointerover=\"() => updateHoverInfo('center')\"\n            @pointerleave=\"() => resetHoverInfo('center')\"\n            @click=\"$emit('center')\"\n        >\n            <Crosshair :hover=\"isHovered('center')\" />\n        </div>\n        <div class=\"zoom-control-wrapper\">\n            <div\n                role=\"button\"\n                class=\"zoom-control\"\n                @pointerover=\"() => updateHoverInfo('plus')\"\n                @pointerleave=\"() => resetHoverInfo('plus')\"\n                @click=\"$emit('zoomIn')\"\n            >\n                <Plus :hover=\"isHovered('plus')\" />\n            </div>\n            <div\n                role=\"button\"\n                class=\"zoom-control\"\n                @pointerover=\"() => updateHoverInfo('minus')\"\n                @pointerleave=\"() => resetHoverInfo('minus')\"\n                @click=\"$emit('zoomOut')\"\n            >\n                <Minus :hover=\"isHovered('minus')\" />\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { computed } from 'vue';\nimport Minus from '../icons/Minus.vue';\nimport Plus from '../icons/Plus.vue';\nimport Crosshair from '../icons/Crosshair.vue';\n\nexport default {\n    components: {\n        Minus,\n        Plus,\n        Crosshair,\n    },\n\n    props: {\n        floating: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    setup(props) {\n        const floatingStatus = computed(() => ({\n            floating: props.floating,\n            normal: !props.floating,\n        }));\n\n        return { floatingStatus };\n    },\n\n    emits: ['zoomIn', 'zoomOut', 'center'],\n\n    data() {\n        return {\n            hoverInfo: {\n                isHovered: false,\n                hoveredPanel: undefined,\n            },\n        };\n    },\n\n    methods: {\n        isHovered(name) {\n            return this.hoverInfo.hoveredPanel === name && this.hoverInfo.isHovered;\n        },\n\n        updateHoverInfo(name) {\n            this.hoverInfo.hoveredPanel = name;\n            this.hoverInfo.isHovered = true;\n        },\n\n        resetHoverInfo(name) {\n            if (this.hoverInfo.hoveredPanel === name) {\n                this.hoverInfo.hoveredPanel = undefined;\n                this.hoverInfo.isHovered = false;\n            }\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.zoom-container {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    z-index: 100;\n    align-items: center;\n    gap: 22px;\n\n    .zoom-center {\n        width: 44px;\n        height: 44px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        cursor: pointer;\n        background-color: $gray-600;\n        border: 1px solid $gray-500;\n        border-radius: 100%;\n    }\n    .zoom-control-wrapper {\n        display: flex;\n        flex-direction: column;\n        background-color: $gray-600;\n        border: 1px solid $gray-500;\n        border-radius: 3px;\n\n        .zoom-control {\n            width: 44px;\n            height: 44px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            cursor: pointer;\n        }\n\n        .zoom-control:first-of-type {\n            border-bottom: 1px solid $gray-500;\n        }\n    }\n}\n.zoom-container.floating {\n    bottom: 70px;\n    right: 30px;\n}\n.zoom-container.normal {\n    bottom: 30px;\n    right: 30px;\n}\n</style>\n","import { render } from \"./Zoom.vue?vue&type=template&id=14fd0c95&scoped=true\"\nimport script from \"./Zoom.vue?vue&type=script&lang=js\"\nexport * from \"./Zoom.vue?vue&type=script&lang=js\"\n\nimport \"./Zoom.vue?vue&type=style&index=0&id=14fd0c95&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-14fd0c95\"]])\n\nexport default __exports__"],"names":["props","top","type","Number","default","left","text","String","required","setup","styles","s","class","style","id","script","modelValue","Boolean","saveConfiguration","Object","emit","createCheckboxOption","label","undefined","option","CheckboxInterface","events","setValue","subscribe","this","v","setDefaultComponent","createInputOption","createComponent","component","InputInterface","componentName","setComponent","exists","value","existsNow","existedBefore","readonly","hideHud","position","graph","minify","graphName","dataflowname","save","ButtonInterface","saveCallback","options","filter","_","map","getOptionName","key","name","intf","title","components","Cross","close","tabindex","exportGraph","createIntegerOption","IntegerInterface","width","height","fileName","exportCallback","vModelName","setPort","configurationVModel","newInterface","direction","interfaceName","interfaceType","interfaceDirection","addInterfaceMenu","button","typesList","split","length","interfaceMenu","configurationOptions","_ctx","_cache","$props","$setup","$data","$options","$event","configurationMenu","addNode","c","nodeData","category","layer","description","properties","interfaces","editedType","success","newNode","visible","nodeName","nodeCategory","nodeDescription","TextAreaInterface","create","errors","newProperty","min","max","enabledMinMax","propertyName","propertyType","includes","propertyDefault","addPropertyMenu","prop","propertyMenu","useMinMax","propertyMin","_a","propertyMax","push","concat","newNodeData","nodeLayer","setLayer","layerMenu","items","Array","confirmAction","Function","confirmText","selectedItems","listedOptions","forEach","item","i","indexOf","splice","toggleItem","confirmButton","viewBox","fill","LINKS","url","icon","polyline","loadFiles","isDragging","specificationLoaded","EditorManager","getEditorManagerInstance","welcomeMessage","VUE_APP_WELCOME_MESSAGE","links","handleDrop","dataTransfer","files","d","stroke","$refs","fileInput","click","points","href","target","ref","multiple","accept","blur","backgroundColor","backdropFilter","Arrow","emits","data","isHovered","role","$emit","rotate","hover","color","ExclamationMark","NotificationBadge","message","border","index","notificationStore","methods","remove","removeOne","rightclickCallback","viewModel","cx","x","panning","scaling","cy","y","r","dragMove","useDragMove","stopDrag","onPointerUp","document","removeEventListener","onPointerMove","startDrag","ev","editor","onPointerDown","addEventListener","onPointerdown","args","node","scrollHandle","HTMLElement","editorManager","root","el","typingTimer","maybeStringify","maybeSpecification","nodeMatchesSpec","specNode","isCategory","nodeType","slice","specificationWithIncludes","specification","unresolvedSpecification","nodes","unresolved","included","includedSpecification","JSON","parse","stringify","mergeObjects","immediate","deep","find","currentSpecification","async","modifiedNodeSpecificationRegistry","findDuplicates","array","nameCounter","Map","element","count","has","get","set","from","entries","validateNodeInterfaces","parsedSpecification","duplicates","Error","join","validateNode","validationErrors","validateNodeProperties","validateNodeStyle","validate","parsedCurrentSpecification","replaceAll","e","error","cachedValidationResult","updateCachedValidationResult","baklavaView","settings","editableNodeTypes","canApplyChanges","parsedSpecForValidation","handleInput","prevParentScrollHeight","scrollTop","scrollHeight","liveValidateListener","clearTimeout","setTimeout","delayedEditorUpdate","then","handleUIUpdate","newSpecification","updateSpecification","parsingErrors","isArray","mergeStyles","oldType","n","getNodeName","highlightedType","oldSpecification","oldProperties","oldInterfaces","inheritedProperties","inheritedInterfaces","extends","parentType","parentSpec","parentNodes","some","p","parsedProperties","structuredClone","parsedInterfaces","removedProperties","removedInterfaces","addedProperties","addedInterfaces","childNodes","_unregisterNodeType","terminalLog","ret","addNodeToEditorSpecification","validateSpecification","showToast","messages","handleTab","event","preventDefault","execCommand","formatError","errorMessage","replace","match","arr","disabled","spellcheck","err","idx","eventFunction","for","Notification","computed","notifications","notificationsLength","removeAll","externalApplicationManager","metadataChanged","notifyAboutChange","metadata","connectionStyleOption","SelectInterface","connectionRenderer","randomizedOffsetOption","randomizedOffset","hideAnchors","showIds","backgroundGridSize","background","gridSize","movementStep","LayoutOption","layoutManager","getAvailableAlgorithms","algorithmName","usedAlgorithm","useAlgorithm","LayoutApply","applyAutolayout","clearEditor","deepCleanEditor","disableLayersOptions","layers","ignoredLayers","delete","add","logLevel","select","keys","toUpperCase","readonlyOptions","toggleableEditableTypes","settingOptions","saveBlob","blob","filename","linkElement","createElement","window","URL","createObjectURL","download","saveSpecificationConfiguration","saveName","_b","_c","saveSpecification","dataflow","saveDataflow","graphs","g","subgraph","nodeSpecification","subgraphId","prevIndex","entryGraph","nameToNodeMapping","fromEntries","nameToNode","usedNames","flat","resolvedNames","resolve","Blob","reset","saveGraphConfiguration","saveCallbackCustomFormat","saveElement","mimeType","dataflowGraph","maxWidth","maxHeight","nodeEditor","querySelector","classList","contains","imagePlaceholder","canvasWidth","canvasHeight","dataUrl","downloadLink","dataset","downloadurl","body","appendChild","removeChild","catch","Logo","Run","CassetteStop","Validate","Backend","Bell","DropdownItem","Expand","Collapse","Notifications","Magnifier","Cogwheel","Settings","Cube","ParentMenu","SaveMenu","ExportMenu","NodeConfigurationMenu","PropertyConfigurationMenu","InterfaceConfigurationMenu","Panel","CustomSidebar","LayerConfigurationMenu","ListMenu","dataflowGraphName","graphId","displayedGraph","editorTitle","appName","normalizedGraphName","trim","preview","urlParams","URLSearchParams","location","search","settingsOpen","panels","isOpen","notificationsOpen","paletteOpen","palette","externalAppStatus","navbarItems","icons","iconName","Placeholder","cache","leftButtonsQuantity","leftButtons","children","rightButtonsQuantity","rightButtons","isNavBarCompressed","isMounted","windowWidth","buttonWidth","searchbarWidthMultiplcity","mobileClasses","nodesearchInputStyles","leftContainerStyles","rightContainerStyles","activeNavbarItems","activeNavbarItemsNames","watch","newValue","updateSubgraphName","searchEditorNodesQuery","searchQuery","toLowerCase","procedureName","VUE_APP_EDITOR_TITLE","editorTitleInterface","setHook","updateActiveNavbarItems","menuState","configurationState","removeInterfaces","removeProperties","externalApp","available","connected","saveMenuShow","exportMenuShow","editTitle","showSearch","crossIcon","navbarGuard","hoverInfo","hoveredPanel","iconRef","showTransform","hideTransform","$isMobile","nodesearch","fullscreen","isFullscreen","loadSpecification","specText","version","specificationVersion","Promise","updateEditorSpecification","warnings","info","createNewGraphCallback","loadSpecificationCallback","file","getElementById","setLoad","fileReader","FileReader","onload","result","readAsText","togglePanel","panel","disable","panelSelector","isPanelOpen","transition","transform","toggle","toggleFullscreen","isEnabled","clickOutside","currentElement","Node","setEditTitle","$nextTick","editorTitleInput","refs","focus","loadDataflow","messageTitle","loadDataflowCallback","exception","SyntaxError","toString","requestDataflowAction","actionItem","isInProgress","isStoppable","requestDataflowStop","activeAction","requireResponse","requestDataflowExport","prompt","content","importDataflow","exportToSvg","createGraphNodeTypeFromCurrentGraph","placeNode","oldValue","graphNode","nodeTypes","instance","currentGraphState","addSubgraphToNode","connections","newGraph","switchToGraph","innerWidth","innerHeight","changeTopLevelGraph","onClickNodeSearch","searchbarInput","openNavbar","navbar","handleMouseLeave","sidebar","closest","updateHoverInfo","isRunnable","resetHoverInfo","procedure","inProgress","appCapabilities","stoppable_methods","getNavbarActionTooltip","stopName","activeItems","Set","allowToRunInParallelWith","returnFromSubgraph","mounted","offsetWidth","registerConnectionHook","isExternalAppAvailable","isConnected","propertyListMenu","interfaceListMenu","imgURI","isInSubgraph","placeholder","active","terminalInstance","term","htermSettings","logs","logsLength","terminalBuffer","printLog","log","readOnly","io","print","renderIndex","clearTerminal","scrollHome","wipeContents","init","localStorage","setItem","Terminal","scrollPort_","contenteditable","onTerminalReady","sendString","string","isReadOnly","requestTerminalRead","onVTKeystroke","onTerminalResize","line","installKeyboard","decorate","newIns","newLen","oldIns","oldLen","setCursorVisible","Indicator","Bin","resizer","terminalWrapper","activeTerminal","isTerminalPanelOpened","showClearButton","terminalPanelHeight","arrowHovered","terminalWrapperStyles","Math","resizerStyles","terminals","terminalMatch","terminal","displayedNames","displayedTerminals","terminalNamesLengths","lengths","values","names","tuples","newVal","oldVal","oldNames","tuple","oldTuple","t","hasNewMessage","terminalIndex","findIndex","nameIndex","toggleTerminalPanel","setReadMessages","terminalName","checkReadonly","terminalHeight","manager","hide","show","isViewChanged","isDifferentTerminal","view","params","clearButton","clearTerminalOutput","clear","pipelineSpanClasses","terminalIndicatorColor","_component_Indicator","_component_Bin","_component_Arrow","_component_Terminal","onClick","onMouseenter","onMouseleave","scale","SelfBuildingSquareSpinner","size","NavBar","Editor","TerminalPanel","LoadingScreen","loading","handleLoad","terminalStore","Minus","Plus","Crosshair","floating","floatingStatus","normal"],"sourceRoot":""}