# Copyright (c) 2025 Antmicro <www.antmicro.com>
# SPDX-License-Identifier: Apache-2.0

from topwrap.model.connections import Port
from topwrap.model.design import Design
from topwrap.model.misc import Identifier
from topwrap.model.module import Module

from .util import IN, OUT, bv

veer_el2_exts = [
    Port(name="clk", direction=IN),
    Port(name="rst_l", direction=IN),
    Port(name="lsu_axi_awvalid", direction=OUT),
    Port(name="lsu_axi_awready", direction=IN),
    Port(name="lsu_axi_awid", direction=OUT, type=bv(3)),
    Port(name="lsu_axi_awaddr", direction=OUT, type=bv(32)),
    Port(name="lsu_axi_awregion", direction=OUT, type=bv(4)),
    Port(name="lsu_axi_awlen", direction=OUT, type=bv(8)),
    Port(name="lsu_axi_awsize", direction=OUT, type=bv(3)),
    Port(name="lsu_axi_awburst", direction=OUT, type=bv(2)),
    Port(name="lsu_axi_awlock", direction=OUT),
    Port(name="lsu_axi_awcache", direction=OUT, type=bv(4)),
    Port(name="lsu_axi_awprot", direction=OUT, type=bv(3)),
    Port(name="lsu_axi_awqos", direction=OUT, type=bv(4)),
    Port(name="lsu_axi_wvalid", direction=OUT),
    Port(name="lsu_axi_wready", direction=IN),
    Port(name="lsu_axi_wdata", direction=OUT, type=bv(64)),
    Port(name="lsu_axi_wstrb", direction=OUT, type=bv(8)),
    Port(name="lsu_axi_wlast", direction=OUT),
    Port(name="lsu_axi_bvalid", direction=IN),
    Port(name="lsu_axi_bready", direction=OUT),
    Port(name="lsu_axi_bresp", direction=IN, type=bv(2)),
    Port(name="lsu_axi_bid", direction=IN, type=bv(3)),
    Port(name="lsu_axi_arvalid", direction=OUT),
    Port(name="lsu_axi_arready", direction=IN),
    Port(name="lsu_axi_arid", direction=OUT, type=bv(3)),
    Port(name="lsu_axi_araddr", direction=OUT, type=bv(32)),
    Port(name="lsu_axi_arregion", direction=OUT, type=bv(4)),
    Port(name="lsu_axi_arlen", direction=OUT, type=bv(8)),
    Port(name="lsu_axi_arsize", direction=OUT, type=bv(3)),
    Port(name="lsu_axi_arburst", direction=OUT, type=bv(2)),
    Port(name="lsu_axi_arlock", direction=OUT),
    Port(name="lsu_axi_arcache", direction=OUT, type=bv(4)),
    Port(name="lsu_axi_arprot", direction=OUT, type=bv(3)),
    Port(name="lsu_axi_arqos", direction=OUT, type=bv(4)),
    Port(name="lsu_axi_rvalid", direction=IN),
    Port(name="lsu_axi_rready", direction=OUT),
    Port(name="lsu_axi_rid", direction=IN, type=bv(3)),
    Port(name="lsu_axi_rdata", direction=IN, type=bv(64)),
    Port(name="lsu_axi_rresp", direction=IN, type=bv(2)),
    Port(name="lsu_axi_rlast", direction=IN),
    Port(name="ifu_axi_awvalid", direction=OUT),
    Port(name="ifu_axi_awready", direction=IN),
    Port(name="ifu_axi_awid", direction=OUT, type=bv(3)),
    Port(name="ifu_axi_awaddr", direction=OUT, type=bv(32)),
    Port(name="ifu_axi_awregion", direction=OUT, type=bv(4)),
    Port(name="ifu_axi_awlen", direction=OUT, type=bv(8)),
    Port(name="ifu_axi_awsize", direction=OUT, type=bv(3)),
    Port(name="ifu_axi_awburst", direction=OUT, type=bv(2)),
    Port(name="ifu_axi_awlock", direction=OUT),
    Port(name="ifu_axi_awcache", direction=OUT, type=bv(4)),
    Port(name="ifu_axi_awprot", direction=OUT, type=bv(3)),
    Port(name="ifu_axi_awqos", direction=OUT, type=bv(4)),
    Port(name="ifu_axi_wvalid", direction=OUT),
    Port(name="ifu_axi_wready", direction=IN),
    Port(name="ifu_axi_wdata", direction=OUT, type=bv(64)),
    Port(name="ifu_axi_wstrb", direction=OUT, type=bv(8)),
    Port(name="ifu_axi_wlast", direction=OUT),
    Port(name="ifu_axi_bvalid", direction=IN),
    Port(name="ifu_axi_bready", direction=OUT),
    Port(name="ifu_axi_bresp", direction=IN, type=bv(2)),
    Port(name="ifu_axi_bid", direction=IN, type=bv(3)),
    Port(name="ifu_axi_arvalid", direction=OUT),
    Port(name="ifu_axi_arready", direction=IN),
    Port(name="ifu_axi_arid", direction=OUT, type=bv(3)),
    Port(name="ifu_axi_araddr", direction=OUT, type=bv(32)),
    Port(name="ifu_axi_arregion", direction=OUT, type=bv(4)),
    Port(name="ifu_axi_arlen", direction=OUT, type=bv(8)),
    Port(name="ifu_axi_arsize", direction=OUT, type=bv(3)),
    Port(name="ifu_axi_arburst", direction=OUT, type=bv(2)),
    Port(name="ifu_axi_arlock", direction=OUT),
    Port(name="ifu_axi_arcache", direction=OUT, type=bv(4)),
    Port(name="ifu_axi_arprot", direction=OUT, type=bv(3)),
    Port(name="ifu_axi_arqos", direction=OUT, type=bv(4)),
    Port(name="ifu_axi_rvalid", direction=IN),
    Port(name="ifu_axi_rready", direction=OUT),
    Port(name="ifu_axi_rid", direction=IN, type=bv(3)),
    Port(name="ifu_axi_rdata", direction=IN, type=bv(64)),
    Port(name="ifu_axi_rresp", direction=IN, type=bv(2)),
    Port(name="ifu_axi_rlast", direction=IN),
    Port(name="sb_axi_awvalid", direction=OUT),
    Port(name="sb_axi_awready", direction=IN),
    Port(name="sb_axi_awid", direction=OUT, type=bv(1)),
    Port(name="sb_axi_awaddr", direction=OUT, type=bv(32)),
    Port(name="sb_axi_awregion", direction=OUT, type=bv(4)),
    Port(name="sb_axi_awlen", direction=OUT, type=bv(8)),
    Port(name="sb_axi_awsize", direction=OUT, type=bv(3)),
    Port(name="sb_axi_awburst", direction=OUT, type=bv(2)),
    Port(name="sb_axi_awlock", direction=OUT),
    Port(name="sb_axi_awcache", direction=OUT, type=bv(4)),
    Port(name="sb_axi_awprot", direction=OUT, type=bv(3)),
    Port(name="sb_axi_awqos", direction=OUT, type=bv(4)),
    Port(name="sb_axi_wvalid", direction=OUT),
    Port(name="sb_axi_wready", direction=IN),
    Port(name="sb_axi_wdata", direction=OUT, type=bv(64)),
    Port(name="sb_axi_wstrb", direction=OUT, type=bv(8)),
    Port(name="sb_axi_wlast", direction=OUT),
    Port(name="sb_axi_bvalid", direction=IN),
    Port(name="sb_axi_bready", direction=OUT),
    Port(name="sb_axi_bresp", direction=IN, type=bv(2)),
    Port(name="sb_axi_bid", direction=IN, type=bv(1)),
    Port(name="sb_axi_arvalid", direction=OUT),
    Port(name="sb_axi_arready", direction=IN),
    Port(name="sb_axi_arid", direction=OUT, type=bv(1)),
    Port(name="sb_axi_araddr", direction=OUT, type=bv(32)),
    Port(name="sb_axi_arregion", direction=OUT, type=bv(4)),
    Port(name="sb_axi_arlen", direction=OUT, type=bv(8)),
    Port(name="sb_axi_arsize", direction=OUT, type=bv(3)),
    Port(name="sb_axi_arburst", direction=OUT, type=bv(2)),
    Port(name="sb_axi_arlock", direction=OUT),
    Port(name="sb_axi_arcache", direction=OUT, type=bv(4)),
    Port(name="sb_axi_arprot", direction=OUT, type=bv(3)),
    Port(name="sb_axi_arqos", direction=OUT, type=bv(4)),
    Port(name="sb_axi_rvalid", direction=IN),
    Port(name="sb_axi_rready", direction=OUT),
    Port(name="sb_axi_rid", direction=IN, type=bv(1)),
    Port(name="sb_axi_rdata", direction=IN, type=bv(64)),
    Port(name="sb_axi_rresp", direction=IN, type=bv(2)),
    Port(name="sb_axi_rlast", direction=IN),
    Port(name="dma_axi_awvalid", direction=IN),
    Port(name="dma_axi_awready", direction=OUT),
    Port(name="dma_axi_awid", direction=IN, type=bv(1)),
    Port(name="dma_axi_awaddr", direction=IN, type=bv(32)),
    Port(name="dma_axi_awsize", direction=IN, type=bv(3)),
    Port(name="dma_axi_awprot", direction=IN, type=bv(3)),
    Port(name="dma_axi_awlen", direction=IN, type=bv(8)),
    Port(name="dma_axi_awburst", direction=IN, type=bv(2)),
    Port(name="dma_axi_wvalid", direction=IN),
    Port(name="dma_axi_wready", direction=OUT),
    Port(name="dma_axi_wdata", direction=IN, type=bv(64)),
    Port(name="dma_axi_wstrb", direction=IN, type=bv(8)),
    Port(name="dma_axi_wlast", direction=IN),
    Port(name="dma_axi_bvalid", direction=OUT),
    Port(name="dma_axi_bready", direction=IN),
    Port(name="dma_axi_bresp", direction=OUT, type=bv(2)),
    Port(name="dma_axi_bid", direction=OUT, type=bv(1)),
    Port(name="dma_axi_arvalid", direction=IN),
    Port(name="dma_axi_arready", direction=OUT),
    Port(name="dma_axi_arid", direction=IN, type=bv(1)),
    Port(name="dma_axi_araddr", direction=IN, type=bv(32)),
    Port(name="dma_axi_arsize", direction=IN, type=bv(3)),
    Port(name="dma_axi_arprot", direction=IN, type=bv(3)),
    Port(name="dma_axi_arlen", direction=IN, type=bv(8)),
    Port(name="dma_axi_arburst", direction=IN, type=bv(2)),
    Port(name="dma_axi_rvalid", direction=OUT),
    Port(name="dma_axi_rready", direction=IN),
    Port(name="dma_axi_rid", direction=OUT, type=bv(1)),
    Port(name="dma_axi_rdata", direction=OUT, type=bv(64)),
    Port(name="dma_axi_rresp", direction=OUT, type=bv(2)),
    Port(name="dma_axi_rlast", direction=OUT),
]


veer_el2 = Module(
    id=Identifier(
        name="veer_el2",
        library="guineveer",
    ),
    ports=veer_el2_exts,
    design=Design(),
)
