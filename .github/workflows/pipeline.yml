name: Pipeline

on:
  pull_request:
  push:
  workflow_dispatch:
  schedule:
    - cron: '59 23 * * SUN'

defaults:
  run:
    shell: bash

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    name: "Run lint checks"

    steps:
      - name: Install git package
        run: |
          apt-get update -qq
          apt-get install -y git

      - uses: actions/checkout@v4

      - name: Run lint checks
        run: |
          ./.github/scripts/ci.sh lint

  typing_test:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    name: "Test typing"

    steps:
      - name: Install git package
        run: |
          apt-get update -qq
          apt-get install -y git

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run typing checks
        continue-on-error: true
        run: |
          ./.github/scripts/ci.sh pyright_check

  changelog_changed:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    name: "Check if changelog was changed"

    steps:
      - name: Install git package
        run: |
          apt-get update -qq
          apt-get install -y git

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run changelog check
        continue-on-error: true
        run: |
          git config --add safe.directory "$(pwd)"
          ./.github/scripts/ci.sh changelog_check

  test_kpm_server:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    name: "Build and run KPM server"

    steps:
      - name: Install git package
        run: |
          apt-get update -qq
          apt-get install -y git

      - uses: actions/checkout@v4

      - name: Build and run KPM server
        run: |
          ./.github/scripts/ci.sh test_kpm_server

  test_python:
    strategy:
      matrix:
        version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    name: Run tests on python ${{ matrix.version }}

    steps:
      - name: Install git package
        run: |
          apt-get update -qq
          apt-get install -y git

      - uses: actions/checkout@v4

      - name: Run Python tests on python ${{ matrix.version }}
        run: |
          ./.github/scripts/ci.sh test_python ${{ matrix.version }}

  package_test:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    name: "Test package distribution"

    steps:
      - name: Install git package
        run: |
          apt-get update -qq
          apt-get install -y git

      - uses: actions/checkout@v4

      - name: Build and test distribution packages
        run: |
          ./.github/scripts/ci.sh package_dist

  examples:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    name: "Generate examples"

    steps:
      - name: Install git package
        run: |
          apt-get update -qq
          apt-get install -y git

      - uses: actions/checkout@v4

      - name: Generate Topwrap examples
        run: |
          ./.github/scripts/ci.sh examples

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: examples
          path: examples/**/build

  package_cores:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    name: "Package cores repository"

    steps:
      - name: Install git package
        run: |
          apt-get update -qq
          apt-get install -y git

      - uses: actions/checkout@v4

      - name: Pack cores into a Topwrap repository
        run: |
          ./.github/scripts/ci.sh package_cores
          tar -cf build/cores_export.tar -C build/export .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: export_cores
          path: build/cores_export.tar
