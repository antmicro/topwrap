{% if desc_comms %}
// Top level design for module:
//  name: {{ mod.id.name }}
//  vendor: {{ mod.id.vendor }}
//  library: {{ mod.id.library }}
//
// Automatically generated by Topwrap at {{ gen_date() }}

{% endif %}
module {{ mod.id.name|sv_var }}{% if package_name %} import {{ package_name }}::*;{% endif %}{% if mod.parameters|length > 0 %} #(
{% for param in mod.parameters %}
    parameter {{ param.name|sv_var }} = {{ param.default_value.value }}
    {%- if not loop.last %},
{% endif %}
{% endfor %}

) {%- endif %} (
{% for port in mod.ports %}
    {%+ set pd = port.direction.name -%}
    {%- if pd == "IN" %}input {% elif pd == "OUT" %}output {% else %}inout {% endif %}
    {{- serialize_type(port.type)|indent }} {{ port.name|sv_var }}
    {%- if not loop.last or back.intf_exts|length > 0 %},{% endif %}

{% endfor %}
{% for name, intf in back.intf_exts.items() %}
    {{ intf.id.name|sv_var }} {{ name }}
    {%- if not loop.last %},{% endif %}

{% endfor %}
);

{% for inst_name, idef in back.intf_decls.items() %}
  {{ idef.id.name|sv_var }} {{ inst_name }}();
{% if loop.last +%}
{% endif %}
{% endfor %}
{% for name, type in back.nets.items() %}
  {{ serialize_type(type) }} {{ name }};
{% if loop.last +%}
{% endif %}
{% endfor %}
{% for left, right in back.assign_map.items() %}
  assign {{ left }} = {{ right }};
{% if loop.last +%}
{% endif %}
{% endfor %}
{% for comp in mod.design.components %}
  {{ comp.module.id.name|sv_var }}{% if comp.parameters|length > 0 %} #(
{% for par, val in comp.parameters.items() %}
    .{{ par.resolve().name|sv_var }}({{ val.value }})
    {%- if not loop.last %},{% endif %}

{% endfor %}  )
{%- endif %} {{ comp.name|sv_var }} (
{% for pname, expr in back.port_maps.get(comp._id, {}).items() %}
    .{{ pname|sv_var }}({{ expr }})
    {%- if not loop.last %},{% endif %}

{% endfor %}
  );

{% endfor %}
endmodule

